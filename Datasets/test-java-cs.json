[
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void serialize(LittleEndianOutput out) {out.writeShort(field_1_vcenter);}",
    "output": "public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(field_1_vcenter);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(field_1_vcenter);}",
    "output": "public void serialize(LittleEndianOutput out) {out.writeShort(field_1_vcenter);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void addAll(BlockList<T> src) {if (src.size == 0)return;int srcDirIdx = 0;for (; srcDirIdx < src.tailDirIdx; srcDirIdx++)addAll(src.directory[srcDirIdx], 0, BLOCK_SIZE);if (src.tailBlkIdx != 0)addAll(src.tailBlock, 0, src.tailBlkIdx);}",
    "output": "public virtual void AddAll(NGit.Util.BlockList<T> src){if (src.size == 0){return;}int srcDirIdx = 0;for (; srcDirIdx < src.tailDirIdx; srcDirIdx++){AddAll(src.directory[srcDirIdx], 0, BLOCK_SIZE);}if (src.tailBlkIdx != 0){AddAll(src.tailBlock, 0, src.tailBlkIdx);}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual void AddAll(NGit.Util.BlockList<T> src){if (src.size == 0){return;}int srcDirIdx = 0;for (; srcDirIdx < src.tailDirIdx; srcDirIdx++){AddAll(src.directory[srcDirIdx], 0, BLOCK_SIZE);}if (src.tailBlkIdx != 0){AddAll(src.tailBlock, 0, src.tailBlkIdx);}}",
    "output": "public void addAll(BlockList<T> src) {if (src.size == 0)return;int srcDirIdx = 0;for (; srcDirIdx < src.tailDirIdx; srcDirIdx++)addAll(src.directory[srcDirIdx], 0, BLOCK_SIZE);if (src.tailBlkIdx != 0)addAll(src.tailBlock, 0, src.tailBlkIdx);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void writeByte(byte b) {if (upto == blockSize) {if (currentBlock != null) {addBlock(currentBlock);}currentBlock = new byte[blockSize];upto = 0;}currentBlock[upto++] = b;}",
    "output": "public override void WriteByte(byte b){if (outerInstance.upto == outerInstance.blockSize){if (outerInstance.currentBlock != null){outerInstance.blocks.Add(outerInstance.currentBlock);outerInstance.blockEnd.Add(outerInstance.upto);}outerInstance.currentBlock = new byte[outerInstance.blockSize];outerInstance.upto = 0;}outerInstance.currentBlock[outerInstance.upto++] = (byte)b;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override void WriteByte(byte b){if (outerInstance.upto == outerInstance.blockSize){if (outerInstance.currentBlock != null){outerInstance.blocks.Add(outerInstance.currentBlock);outerInstance.blockEnd.Add(outerInstance.upto);}outerInstance.currentBlock = new byte[outerInstance.blockSize];outerInstance.upto = 0;}outerInstance.currentBlock[outerInstance.upto++] = (byte)b;}",
    "output": "public void writeByte(byte b) {if (upto == blockSize) {if (currentBlock != null) {addBlock(currentBlock);}currentBlock = new byte[blockSize];upto = 0;}currentBlock[upto++] = b;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ObjectId getObjectId() {return objectId;}",
    "output": "public virtual ObjectId GetObjectId(){return objectId;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual ObjectId GetObjectId(){return objectId;}",
    "output": "public ObjectId getObjectId() {return objectId;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DeleteDomainEntryResult deleteDomainEntry(DeleteDomainEntryRequest request) {request = beforeClientExecution(request);return executeDeleteDomainEntry(request);}",
    "output": "public virtual DeleteDomainEntryResponse DeleteDomainEntry(DeleteDomainEntryRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteDomainEntryRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteDomainEntryResponseUnmarshaller.Instance;return Invoke<DeleteDomainEntryResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DeleteDomainEntryResponse DeleteDomainEntry(DeleteDomainEntryRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteDomainEntryRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteDomainEntryResponseUnmarshaller.Instance;return Invoke<DeleteDomainEntryResponse>(request, options);}",
    "output": "public DeleteDomainEntryResult deleteDomainEntry(DeleteDomainEntryRequest request) {request = beforeClientExecution(request);return executeDeleteDomainEntry(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public long ramBytesUsed() {return ((termOffsets!=null)? termOffsets.ramBytesUsed() : 0) +((termsDictOffsets!=null)? termsDictOffsets.ramBytesUsed() : 0);}",
    "output": "public virtual long RamBytesUsed(){return fst == null ? 0 : fst.GetSizeInBytes();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual long RamBytesUsed(){return fst == null ? 0 : fst.GetSizeInBytes();}",
    "output": "public long ramBytesUsed() {return ((termOffsets!=null)? termOffsets.ramBytesUsed() : 0) +((termsDictOffsets!=null)? termsDictOffsets.ramBytesUsed() : 0);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public final String getFullMessage() {byte[] raw = buffer;int msgB = RawParseUtils.tagMessage(raw, 0);if (msgB < 0) {return \"\"; }return RawParseUtils.decode(guessEncoding(), raw, msgB, raw.length);}",
    "output": "public string GetFullMessage(){byte[] raw = buffer;int msgB = RawParseUtils.TagMessage(raw, 0);if (msgB < 0){return string.Empty;}Encoding enc = RawParseUtils.ParseEncoding(raw);return RawParseUtils.Decode(enc, raw, msgB, raw.Length);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public string GetFullMessage(){byte[] raw = buffer;int msgB = RawParseUtils.TagMessage(raw, 0);if (msgB < 0){return string.Empty;}Encoding enc = RawParseUtils.ParseEncoding(raw);return RawParseUtils.Decode(enc, raw, msgB, raw.Length);}",
    "output": "public final String getFullMessage() {byte[] raw = buffer;int msgB = RawParseUtils.tagMessage(raw, 0);if (msgB < 0) {return \"\"; }return RawParseUtils.decode(guessEncoding(), raw, msgB, raw.length);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public POIFSFileSystem() {this(true);_header.setBATCount(1);_header.setBATArray(new int[]{1});BATBlock bb = BATBlock.createEmptyBATBlock(bigBlockSize, false);bb.setOurBlockIndex(1);_bat_blocks.add(bb);setNextBlock(0, POIFSConstants.END_OF_CHAIN);setNextBlock(1, POIFSConstants.FAT_SECTOR_BLOCK);_property_table.setStartBlock(0);}",
    "output": "public POIFSFileSystem(){HeaderBlock headerBlock = new HeaderBlock(bigBlockSize);_property_table = new PropertyTable(headerBlock);_documents      = new ArrayList();_root           = null;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public POIFSFileSystem(){HeaderBlock headerBlock = new HeaderBlock(bigBlockSize);_property_table = new PropertyTable(headerBlock);_documents      = new ArrayList();_root           = null;}",
    "output": "public POIFSFileSystem() {this(true);_header.setBATCount(1);_header.setBATArray(new int[]{1});BATBlock bb = BATBlock.createEmptyBATBlock(bigBlockSize, false);bb.setOurBlockIndex(1);_bat_blocks.add(bb);setNextBlock(0, POIFSConstants.END_OF_CHAIN);setNextBlock(1, POIFSConstants.FAT_SECTOR_BLOCK);_property_table.setStartBlock(0);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void init(int address) {slice = pool.buffers[address >> ByteBlockPool.BYTE_BLOCK_SHIFT];assert slice != null;upto = address & ByteBlockPool.BYTE_BLOCK_MASK;offset0 = address;assert upto < slice.length;}",
    "output": "public void Init(int address){slice = pool.Buffers[address >> ByteBlockPool.BYTE_BLOCK_SHIFT];Debug.Assert(slice != null);upto = address & ByteBlockPool.BYTE_BLOCK_MASK;offset0 = address;Debug.Assert(upto < slice.Length);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public void Init(int address){slice = pool.Buffers[address >> ByteBlockPool.BYTE_BLOCK_SHIFT];Debug.Assert(slice != null);upto = address & ByteBlockPool.BYTE_BLOCK_MASK;offset0 = address;Debug.Assert(upto < slice.Length);}",
    "output": "public void init(int address) {slice = pool.buffers[address >> ByteBlockPool.BYTE_BLOCK_SHIFT];assert slice != null;upto = address & ByteBlockPool.BYTE_BLOCK_MASK;offset0 = address;assert upto < slice.length;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public SubmoduleAddCommand setPath(String path) {this.path = path;return this;}",
    "output": "public virtual NGit.Api.SubmoduleAddCommand SetPath(string path){this.path = path;return this;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual NGit.Api.SubmoduleAddCommand SetPath(string path){this.path = path;return this;}",
    "output": "public SubmoduleAddCommand setPath(String path) {this.path = path;return this;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ListIngestionsResult listIngestions(ListIngestionsRequest request) {request = beforeClientExecution(request);return executeListIngestions(request);}",
    "output": "public virtual ListIngestionsResponse ListIngestions(ListIngestionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListIngestionsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListIngestionsResponseUnmarshaller.Instance;return Invoke<ListIngestionsResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual ListIngestionsResponse ListIngestions(ListIngestionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListIngestionsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListIngestionsResponseUnmarshaller.Instance;return Invoke<ListIngestionsResponse>(request, options);}",
    "output": "public ListIngestionsResult listIngestions(ListIngestionsRequest request) {request = beforeClientExecution(request);return executeListIngestions(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public QueryParserTokenManager(CharStream stream, int lexState){this(stream);SwitchTo(lexState);}",
    "output": "public QueryParserTokenManager(ICharStream stream, int lexState): this(stream){SwitchTo(lexState);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public QueryParserTokenManager(ICharStream stream, int lexState): this(stream){SwitchTo(lexState);}",
    "output": "public QueryParserTokenManager(CharStream stream, int lexState){this(stream);SwitchTo(lexState);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public GetShardIteratorResult getShardIterator(GetShardIteratorRequest request) {request = beforeClientExecution(request);return executeGetShardIterator(request);}",
    "output": "public virtual GetShardIteratorResponse GetShardIterator(GetShardIteratorRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetShardIteratorRequestMarshaller.Instance;options.ResponseUnmarshaller = GetShardIteratorResponseUnmarshaller.Instance;return Invoke<GetShardIteratorResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual GetShardIteratorResponse GetShardIterator(GetShardIteratorRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetShardIteratorRequestMarshaller.Instance;options.ResponseUnmarshaller = GetShardIteratorResponseUnmarshaller.Instance;return Invoke<GetShardIteratorResponse>(request, options);}",
    "output": "public GetShardIteratorResult getShardIterator(GetShardIteratorRequest request) {request = beforeClientExecution(request);return executeGetShardIterator(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ModifyStrategyRequest() {super(\"aegis\", \"2016-11-11\", \"ModifyStrategy\", \"vipaegis\");setMethod(MethodType.POST);}",
    "output": "public ModifyStrategyRequest(): base(\"aegis\", \"2016-11-11\", \"ModifyStrategy\", \"vipaegis\", \"openAPI\"){Method = MethodType.POST;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public ModifyStrategyRequest(): base(\"aegis\", \"2016-11-11\", \"ModifyStrategy\", \"vipaegis\", \"openAPI\"){Method = MethodType.POST;}",
    "output": "public ModifyStrategyRequest() {super(\"aegis\", \"2016-11-11\", \"ModifyStrategy\", \"vipaegis\");setMethod(MethodType.POST);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public boolean ready() throws IOException {synchronized (lock) {if (in == null) {throw new IOException(\"InputStreamReader is closed\");}try {return bytes.hasRemaining() || in.available() > 0;} catch (IOException e) {return false;}}}",
    "output": "public override bool ready(){lock (@lock){if (@in == null){throw new System.IO.IOException(\"InputStreamReader is closed\");}try{return bytes.hasRemaining() || @in.available() > 0;}catch (System.IO.IOException){return false;}}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override bool ready(){lock (@lock){if (@in == null){throw new System.IO.IOException(\"InputStreamReader is closed\");}try{return bytes.hasRemaining() || @in.available() > 0;}catch (System.IO.IOException){return false;}}}",
    "output": "public boolean ready() throws IOException {synchronized (lock) {if (in == null) {throw new IOException(\"InputStreamReader is closed\");}try {return bytes.hasRemaining() || in.available() > 0;} catch (IOException e) {return false;}}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public EscherOptRecord getOptRecord() {return _optRecord;}",
    "output": "protected internal EscherOptRecord GetOptRecord(){return _optRecord;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "protected internal EscherOptRecord GetOptRecord(){return _optRecord;}",
    "output": "public EscherOptRecord getOptRecord() {return _optRecord;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public synchronized int read(byte[] buffer, int offset, int length) {if (buffer == null) {throw new NullPointerException(\"buffer == null\");}Arrays.checkOffsetAndCount(buffer.length, offset, length);if (length == 0) {return 0;}int copylen = count - pos < length ? count - pos : length;for (int i = 0; i < copylen; i++) {buffer[offset + i] = (byte) this.buffer.charAt(pos + i);}pos += copylen;return copylen;}",
    "output": "public override int read(byte[] buffer, int offset, int length){lock (this){if (buffer == null){throw new System.ArgumentNullException(\"buffer == null\");}java.util.Arrays.checkOffsetAndCount(buffer.Length, offset, length);if (length == 0){return 0;}int copylen = count - pos < length ? count - pos : length;{for (int i = 0; i < copylen; i++){buffer[offset + i] = unchecked((byte)this.buffer[pos + i]);}}pos += copylen;return copylen;}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override int read(byte[] buffer, int offset, int length){lock (this){if (buffer == null){throw new System.ArgumentNullException(\"buffer == null\");}java.util.Arrays.checkOffsetAndCount(buffer.Length, offset, length);if (length == 0){return 0;}int copylen = count - pos < length ? count - pos : length;{for (int i = 0; i < copylen; i++){buffer[offset + i] = unchecked((byte)this.buffer[pos + i]);}}pos += copylen;return copylen;}}",
    "output": "public synchronized int read(byte[] buffer, int offset, int length) {if (buffer == null) {throw new NullPointerException(\"buffer == null\");}Arrays.checkOffsetAndCount(buffer.length, offset, length);if (length == 0) {return 0;}int copylen = count - pos < length ? count - pos : length;for (int i = 0; i < copylen; i++) {buffer[offset + i] = (byte) this.buffer.charAt(pos + i);}pos += copylen;return copylen;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public OpenNLPSentenceBreakIterator(NLPSentenceDetectorOp sentenceOp) {this.sentenceOp = sentenceOp;}",
    "output": "public OpenNLPSentenceBreakIterator(NLPSentenceDetectorOp sentenceOp){this.sentenceOp = sentenceOp;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public OpenNLPSentenceBreakIterator(NLPSentenceDetectorOp sentenceOp){this.sentenceOp = sentenceOp;}",
    "output": "public OpenNLPSentenceBreakIterator(NLPSentenceDetectorOp sentenceOp) {this.sentenceOp = sentenceOp;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void print(String str) {write(str != null ? str : String.valueOf((Object) null));}",
    "output": "public virtual void print(string str){write(str != null ? str : Sharpen.StringHelper.GetValueOf((object)null));}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual void print(string str){write(str != null ? str : Sharpen.StringHelper.GetValueOf((object)null));}",
    "output": "public void print(String str) {write(str != null ? str : String.valueOf((Object) null));}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public NotImplementedFunctionException(String functionName, NotImplementedException cause) {super(functionName, cause);this.functionName = functionName;}",
    "output": "public NotImplementedFunctionException(string functionName, NotImplementedException cause): base(functionName,cause){this.functionName = functionName;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public NotImplementedFunctionException(string functionName, NotImplementedException cause): base(functionName,cause){this.functionName = functionName;}",
    "output": "public NotImplementedFunctionException(String functionName, NotImplementedException cause) {super(functionName, cause);this.functionName = functionName;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public V next() {return super.nextEntry().getValue();}",
    "output": "public override V next(){return this.nextEntry().value;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override V next(){return this.nextEntry().value;}",
    "output": "public V next() {return super.nextEntry().getValue();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public final void readBytes(byte[] b, int offset, int len, boolean useBuffer) throws IOException {int available = bufferLength - bufferPosition;if(len <= available){if(len>0) System.arraycopy(buffer, bufferPosition, b, offset, len);bufferPosition+=len;} else {if(available > 0){System.arraycopy(buffer, bufferPosition, b, offset, available);offset += available;len -= available;bufferPosition += available;}if (useBuffer && len<bufferSize){refill();if(bufferLength<len){System.arraycopy(buffer, 0, b, offset, bufferLength);throw new EOFException(\"read past EOF: \" + this);} else {System.arraycopy(buffer, 0, b, offset, len);bufferPosition=len;}} else {long after = bufferStart+bufferPosition+len;if(after > length())throw new EOFException(\"read past EOF: \" + this);readInternal(b, offset, len);bufferStart = after;bufferPosition = 0;bufferLength = 0;                    }}}",
    "output": "public override sealed void ReadBytes(byte[] b, int offset, int len, bool useBuffer){int available = bufferLength - bufferPosition;if (len <= available){if (len > 0) {Buffer.BlockCopy(m_buffer, bufferPosition, b, offset, len);}bufferPosition += len;}else{if (available > 0){Buffer.BlockCopy(m_buffer, bufferPosition, b, offset, available);offset += available;len -= available;bufferPosition += available;}if (useBuffer && len < bufferSize){Refill();if (bufferLength < len){Buffer.BlockCopy(m_buffer, 0, b, offset, bufferLength);throw new EndOfStreamException(\"read past EOF: \" + this);}else{Buffer.BlockCopy(m_buffer, 0, b, offset, len);bufferPosition = len;}}else{long after = bufferStart + bufferPosition + len;if (after > Length){throw new EndOfStreamException(\"read past EOF: \" + this);}ReadInternal(b, offset, len);bufferStart = after;bufferPosition = 0;bufferLength = 0; }}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override sealed void ReadBytes(byte[] b, int offset, int len, bool useBuffer){int available = bufferLength - bufferPosition;if (len <= available){if (len > 0) {Buffer.BlockCopy(m_buffer, bufferPosition, b, offset, len);}bufferPosition += len;}else{if (available > 0){Buffer.BlockCopy(m_buffer, bufferPosition, b, offset, available);offset += available;len -= available;bufferPosition += available;}if (useBuffer && len < bufferSize){Refill();if (bufferLength < len){Buffer.BlockCopy(m_buffer, 0, b, offset, bufferLength);throw new EndOfStreamException(\"read past EOF: \" + this);}else{Buffer.BlockCopy(m_buffer, 0, b, offset, len);bufferPosition = len;}}else{long after = bufferStart + bufferPosition + len;if (after > Length){throw new EndOfStreamException(\"read past EOF: \" + this);}ReadInternal(b, offset, len);bufferStart = after;bufferPosition = 0;bufferLength = 0; }}}",
    "output": "public final void readBytes(byte[] b, int offset, int len, boolean useBuffer) throws IOException {int available = bufferLength - bufferPosition;if(len <= available){if(len>0) System.arraycopy(buffer, bufferPosition, b, offset, len);bufferPosition+=len;} else {if(available > 0){System.arraycopy(buffer, bufferPosition, b, offset, available);offset += available;len -= available;bufferPosition += available;}if (useBuffer && len<bufferSize){refill();if(bufferLength<len){System.arraycopy(buffer, 0, b, offset, bufferLength);throw new EOFException(\"read past EOF: \" + this);} else {System.arraycopy(buffer, 0, b, offset, len);bufferPosition=len;}} else {long after = bufferStart+bufferPosition+len;if(after > length())throw new EOFException(\"read past EOF: \" + this);readInternal(b, offset, len);bufferStart = after;bufferPosition = 0;bufferLength = 0;                    }}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public TagQueueResult tagQueue(TagQueueRequest request) {request = beforeClientExecution(request);return executeTagQueue(request);}",
    "output": "public virtual TagQueueResponse TagQueue(TagQueueRequest request){var options = new InvokeOptions();options.RequestMarshaller = TagQueueRequestMarshaller.Instance;options.ResponseUnmarshaller = TagQueueResponseUnmarshaller.Instance;return Invoke<TagQueueResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual TagQueueResponse TagQueue(TagQueueRequest request){var options = new InvokeOptions();options.RequestMarshaller = TagQueueRequestMarshaller.Instance;options.ResponseUnmarshaller = TagQueueResponseUnmarshaller.Instance;return Invoke<TagQueueResponse>(request, options);}",
    "output": "public TagQueueResult tagQueue(TagQueueRequest request) {request = beforeClientExecution(request);return executeTagQueue(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void remove() {throw new UnsupportedOperationException();}",
    "output": "public override void Remove(){throw new NotSupportedException();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override void Remove(){throw new NotSupportedException();}",
    "output": "public void remove() {throw new UnsupportedOperationException();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public CacheSubnetGroup modifyCacheSubnetGroup(ModifyCacheSubnetGroupRequest request) {request = beforeClientExecution(request);return executeModifyCacheSubnetGroup(request);}",
    "output": "public virtual ModifyCacheSubnetGroupResponse ModifyCacheSubnetGroup(ModifyCacheSubnetGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = ModifyCacheSubnetGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifyCacheSubnetGroupResponseUnmarshaller.Instance;return Invoke<ModifyCacheSubnetGroupResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual ModifyCacheSubnetGroupResponse ModifyCacheSubnetGroup(ModifyCacheSubnetGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = ModifyCacheSubnetGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifyCacheSubnetGroupResponseUnmarshaller.Instance;return Invoke<ModifyCacheSubnetGroupResponse>(request, options);}",
    "output": "public CacheSubnetGroup modifyCacheSubnetGroup(ModifyCacheSubnetGroupRequest request) {request = beforeClientExecution(request);return executeModifyCacheSubnetGroup(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void setParams(String params) {super.setParams(params);language = country = variant = \"\";StringTokenizer st = new StringTokenizer(params, \",\");if (st.hasMoreTokens())language = st.nextToken();if (st.hasMoreTokens())country = st.nextToken();if (st.hasMoreTokens())variant = st.nextToken();}",
    "output": "public override void SetParams(string @params){base.SetParams(@params);culture = \"\";string ignore;StringTokenizer st = new StringTokenizer(@params, \",\");if (st.MoveNext())culture = st.Current;if (st.MoveNext())culture += \"-\" + st.Current;if (st.MoveNext())ignore = st.Current;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override void SetParams(string @params){base.SetParams(@params);culture = \"\";string ignore;StringTokenizer st = new StringTokenizer(@params, \",\");if (st.MoveNext())culture = st.Current;if (st.MoveNext())culture += \"-\" + st.Current;if (st.MoveNext())ignore = st.Current;}",
    "output": "public void setParams(String params) {super.setParams(params);language = country = variant = \"\";StringTokenizer st = new StringTokenizer(params, \",\");if (st.hasMoreTokens())language = st.nextToken();if (st.hasMoreTokens())country = st.nextToken();if (st.hasMoreTokens())variant = st.nextToken();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DeleteDocumentationVersionResult deleteDocumentationVersion(DeleteDocumentationVersionRequest request) {request = beforeClientExecution(request);return executeDeleteDocumentationVersion(request);}",
    "output": "public virtual DeleteDocumentationVersionResponse DeleteDocumentationVersion(DeleteDocumentationVersionRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteDocumentationVersionRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteDocumentationVersionResponseUnmarshaller.Instance;return Invoke<DeleteDocumentationVersionResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DeleteDocumentationVersionResponse DeleteDocumentationVersion(DeleteDocumentationVersionRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteDocumentationVersionRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteDocumentationVersionResponseUnmarshaller.Instance;return Invoke<DeleteDocumentationVersionResponse>(request, options);}",
    "output": "public DeleteDocumentationVersionResult deleteDocumentationVersion(DeleteDocumentationVersionRequest request) {request = beforeClientExecution(request);return executeDeleteDocumentationVersion(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public boolean equals(Object obj) {if (!(obj instanceof FacetLabel)) {return false;}FacetLabel other = (FacetLabel) obj;if (length != other.length) {return false; }for (int i = length - 1; i >= 0; i--) {if (!components[i].equals(other.components[i])) {return false;}}return true;}",
    "output": "public override bool Equals(object obj){if (!(obj is FacetLabel)){return false;}FacetLabel other = (FacetLabel)obj;if (Length != other.Length){return false; }for (int i = Length - 1; i >= 0; i--){if (!Components[i].Equals(other.Components[i], StringComparison.Ordinal)){return false;}}return true;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override bool Equals(object obj){if (!(obj is FacetLabel)){return false;}FacetLabel other = (FacetLabel)obj;if (Length != other.Length){return false; }for (int i = Length - 1; i >= 0; i--){if (!Components[i].Equals(other.Components[i], StringComparison.Ordinal)){return false;}}return true;}",
    "output": "public boolean equals(Object obj) {if (!(obj instanceof FacetLabel)) {return false;}FacetLabel other = (FacetLabel) obj;if (length != other.length) {return false; }for (int i = length - 1; i >= 0; i--) {if (!components[i].equals(other.components[i])) {return false;}}return true;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public GetInstanceAccessDetailsResult getInstanceAccessDetails(GetInstanceAccessDetailsRequest request) {request = beforeClientExecution(request);return executeGetInstanceAccessDetails(request);}",
    "output": "public virtual GetInstanceAccessDetailsResponse GetInstanceAccessDetails(GetInstanceAccessDetailsRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetInstanceAccessDetailsRequestMarshaller.Instance;options.ResponseUnmarshaller = GetInstanceAccessDetailsResponseUnmarshaller.Instance;return Invoke<GetInstanceAccessDetailsResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual GetInstanceAccessDetailsResponse GetInstanceAccessDetails(GetInstanceAccessDetailsRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetInstanceAccessDetailsRequestMarshaller.Instance;options.ResponseUnmarshaller = GetInstanceAccessDetailsResponseUnmarshaller.Instance;return Invoke<GetInstanceAccessDetailsResponse>(request, options);}",
    "output": "public GetInstanceAccessDetailsResult getInstanceAccessDetails(GetInstanceAccessDetailsRequest request) {request = beforeClientExecution(request);return executeGetInstanceAccessDetails(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public HSSFPolygon createPolygon(HSSFChildAnchor anchor) {HSSFPolygon shape = new HSSFPolygon(this, anchor);shape.setParent(this);shape.setAnchor(anchor);shapes.add(shape);onCreate(shape);return shape;}",
    "output": "public HSSFPolygon CreatePolygon(HSSFChildAnchor anchor){HSSFPolygon shape = new HSSFPolygon(this, anchor);shape.Parent = this;shape.Anchor = anchor;shapes.Add(shape);OnCreate(shape);return shape;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public HSSFPolygon CreatePolygon(HSSFChildAnchor anchor){HSSFPolygon shape = new HSSFPolygon(this, anchor);shape.Parent = this;shape.Anchor = anchor;shapes.Add(shape);OnCreate(shape);return shape;}",
    "output": "public HSSFPolygon createPolygon(HSSFChildAnchor anchor) {HSSFPolygon shape = new HSSFPolygon(this, anchor);shape.setParent(this);shape.setAnchor(anchor);shapes.add(shape);onCreate(shape);return shape;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String getSheetName(int sheetIndex) {return getBoundSheetRec(sheetIndex).getSheetname();}",
    "output": "public String GetSheetName(int sheetIndex){return GetBoundSheetRec(sheetIndex).Sheetname;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public String GetSheetName(int sheetIndex){return GetBoundSheetRec(sheetIndex).Sheetname;}",
    "output": "public String getSheetName(int sheetIndex) {return getBoundSheetRec(sheetIndex).getSheetname();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public GetDashboardResult getDashboard(GetDashboardRequest request) {request = beforeClientExecution(request);return executeGetDashboard(request);}",
    "output": "public virtual GetDashboardResponse GetDashboard(GetDashboardRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetDashboardRequestMarshaller.Instance;options.ResponseUnmarshaller = GetDashboardResponseUnmarshaller.Instance;return Invoke<GetDashboardResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual GetDashboardResponse GetDashboard(GetDashboardRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetDashboardRequestMarshaller.Instance;options.ResponseUnmarshaller = GetDashboardResponseUnmarshaller.Instance;return Invoke<GetDashboardResponse>(request, options);}",
    "output": "public GetDashboardResult getDashboard(GetDashboardRequest request) {request = beforeClientExecution(request);return executeGetDashboard(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public AssociateSigninDelegateGroupsWithAccountResult associateSigninDelegateGroupsWithAccount(AssociateSigninDelegateGroupsWithAccountRequest request) {request = beforeClientExecution(request);return executeAssociateSigninDelegateGroupsWithAccount(request);}",
    "output": "public virtual AssociateSigninDelegateGroupsWithAccountResponse AssociateSigninDelegateGroupsWithAccount(AssociateSigninDelegateGroupsWithAccountRequest request){var options = new InvokeOptions();options.RequestMarshaller = AssociateSigninDelegateGroupsWithAccountRequestMarshaller.Instance;options.ResponseUnmarshaller = AssociateSigninDelegateGroupsWithAccountResponseUnmarshaller.Instance;return Invoke<AssociateSigninDelegateGroupsWithAccountResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual AssociateSigninDelegateGroupsWithAccountResponse AssociateSigninDelegateGroupsWithAccount(AssociateSigninDelegateGroupsWithAccountRequest request){var options = new InvokeOptions();options.RequestMarshaller = AssociateSigninDelegateGroupsWithAccountRequestMarshaller.Instance;options.ResponseUnmarshaller = AssociateSigninDelegateGroupsWithAccountResponseUnmarshaller.Instance;return Invoke<AssociateSigninDelegateGroupsWithAccountResponse>(request, options);}",
    "output": "public AssociateSigninDelegateGroupsWithAccountResult associateSigninDelegateGroupsWithAccount(AssociateSigninDelegateGroupsWithAccountRequest request) {request = beforeClientExecution(request);return executeAssociateSigninDelegateGroupsWithAccount(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void addMultipleBlanks(MulBlankRecord mbr) {for (int j = 0; j < mbr.getNumColumns(); j++) {BlankRecord br = new BlankRecord();br.setColumn(( short ) (j + mbr.getFirstColumn()));br.setRow(mbr.getRow());br.setXFIndex(mbr.getXFAt(j));insertCell(br);}}",
    "output": "public void AddMultipleBlanks(MulBlankRecord mbr){for (int j = 0; j < mbr.NumColumns; j++){BlankRecord br = new BlankRecord();br.Column = j + mbr.FirstColumn;br.Row = mbr.Row;br.XFIndex = (mbr.GetXFAt(j));InsertCell(br);}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public void AddMultipleBlanks(MulBlankRecord mbr){for (int j = 0; j < mbr.NumColumns; j++){BlankRecord br = new BlankRecord();br.Column = j + mbr.FirstColumn;br.Row = mbr.Row;br.XFIndex = (mbr.GetXFAt(j));InsertCell(br);}}",
    "output": "public void addMultipleBlanks(MulBlankRecord mbr) {for (int j = 0; j < mbr.getNumColumns(); j++) {BlankRecord br = new BlankRecord();br.setColumn(( short ) (j + mbr.getFirstColumn()));br.setRow(mbr.getRow());br.setXFIndex(mbr.getXFAt(j));insertCell(br);}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public static String quote(String string) {StringBuilder sb = new StringBuilder();sb.append(\"\\\\Q\");int apos = 0;int k;while ((k = string.indexOf(\"\\\\E\", apos)) >= 0) {sb.append(string.substring(apos, k + 2)).append(\"\\\\\\\\E\\\\Q\");apos = k + 2;}return sb.append(string.substring(apos)).append(\"\\\\E\").toString();}",
    "output": "public static string quote(string @string){java.lang.StringBuilder sb = new java.lang.StringBuilder();sb.append(\"\\\\Q\");int apos = 0;int k;while ((k = @string.IndexOf(\"\\\\E\", apos)) >= 0){sb.append(Sharpen.StringHelper.Substring(@string, apos, k + 2)).append(\"\\\\\\\\E\\\\Q\");apos = k + 2;}return sb.append(Sharpen.StringHelper.Substring(@string, apos)).append(\"\\\\E\").ToString();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public static string quote(string @string){java.lang.StringBuilder sb = new java.lang.StringBuilder();sb.append(\"\\\\Q\");int apos = 0;int k;while ((k = @string.IndexOf(\"\\\\E\", apos)) >= 0){sb.append(Sharpen.StringHelper.Substring(@string, apos, k + 2)).append(\"\\\\\\\\E\\\\Q\");apos = k + 2;}return sb.append(Sharpen.StringHelper.Substring(@string, apos)).append(\"\\\\E\").ToString();}",
    "output": "public static String quote(String string) {StringBuilder sb = new StringBuilder();sb.append(\"\\\\Q\");int apos = 0;int k;while ((k = string.indexOf(\"\\\\E\", apos)) >= 0) {sb.append(string.substring(apos, k + 2)).append(\"\\\\\\\\E\\\\Q\");apos = k + 2;}return sb.append(string.substring(apos)).append(\"\\\\E\").toString();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ByteBuffer putInt(int value) {throw new ReadOnlyBufferException();}",
    "output": "public override java.nio.ByteBuffer putInt(int value){throw new java.nio.ReadOnlyBufferException();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override java.nio.ByteBuffer putInt(int value){throw new java.nio.ReadOnlyBufferException();}",
    "output": "public ByteBuffer putInt(int value) {throw new ReadOnlyBufferException();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ArrayPtg(Object[][] values2d) {int nColumns = values2d[0].length;int nRows = values2d.length;_nColumns = (short) nColumns;_nRows = (short) nRows;Object[] vv = new Object[_nColumns * _nRows];for (int r=0; r<nRows; r++) {Object[] rowData = values2d[r];for (int c=0; c<nColumns; c++) {vv[getValueIndex(c, r)] = rowData[c];}}_arrayValues = vv;_reserved0Int = 0;_reserved1Short = 0;_reserved2Byte = 0;}",
    "output": "public ArrayPtg(Object[][] values2d){int nColumns = values2d[0].Length;int nRows = values2d.Length;_nColumns = (short)nColumns;_nRows = (short)nRows;Object[] vv = new Object[_nColumns * _nRows];for (int r = 0; r < nRows; r++){Object[] rowData = values2d[r];for (int c = 0; c < nColumns; c++){vv[GetValueIndex(c, r)] = rowData[c];}}_arrayValues = vv;_reserved0Int = 0;_reserved1Short = 0;_reserved2Byte = 0;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public ArrayPtg(Object[][] values2d){int nColumns = values2d[0].Length;int nRows = values2d.Length;_nColumns = (short)nColumns;_nRows = (short)nRows;Object[] vv = new Object[_nColumns * _nRows];for (int r = 0; r < nRows; r++){Object[] rowData = values2d[r];for (int c = 0; c < nColumns; c++){vv[GetValueIndex(c, r)] = rowData[c];}}_arrayValues = vv;_reserved0Int = 0;_reserved1Short = 0;_reserved2Byte = 0;}",
    "output": "public ArrayPtg(Object[][] values2d) {int nColumns = values2d[0].length;int nRows = values2d.length;_nColumns = (short) nColumns;_nRows = (short) nRows;Object[] vv = new Object[_nColumns * _nRows];for (int r=0; r<nRows; r++) {Object[] rowData = values2d[r];for (int c=0; c<nColumns; c++) {vv[getValueIndex(c, r)] = rowData[c];}}_arrayValues = vv;_reserved0Int = 0;_reserved1Short = 0;_reserved2Byte = 0;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public GetIceServerConfigResult getIceServerConfig(GetIceServerConfigRequest request) {request = beforeClientExecution(request);return executeGetIceServerConfig(request);}",
    "output": "public virtual GetIceServerConfigResponse GetIceServerConfig(GetIceServerConfigRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetIceServerConfigRequestMarshaller.Instance;options.ResponseUnmarshaller = GetIceServerConfigResponseUnmarshaller.Instance;return Invoke<GetIceServerConfigResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual GetIceServerConfigResponse GetIceServerConfig(GetIceServerConfigRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetIceServerConfigRequestMarshaller.Instance;options.ResponseUnmarshaller = GetIceServerConfigResponseUnmarshaller.Instance;return Invoke<GetIceServerConfigResponse>(request, options);}",
    "output": "public GetIceServerConfigResult getIceServerConfig(GetIceServerConfigRequest request) {request = beforeClientExecution(request);return executeGetIceServerConfig(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String toString() {return getClass().getName() + \" [\" +getValueAsString() +\"]\";}",
    "output": "public override String ToString(){StringBuilder sb = new StringBuilder(64);sb.Append(GetType().Name).Append(\" [\");sb.Append(GetValueAsString());sb.Append(\"]\");return sb.ToString();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override String ToString(){StringBuilder sb = new StringBuilder(64);sb.Append(GetType().Name).Append(\" [\");sb.Append(GetValueAsString());sb.Append(\"]\");return sb.ToString();}",
    "output": "public String toString() {return getClass().getName() + \" [\" +getValueAsString() +\"]\";}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String toString(String field) {return \"ToChildBlockJoinQuery (\"+parentQuery.toString()+\")\";}",
    "output": "public override string ToString(string field){return \"ToChildBlockJoinQuery (\" + _parentQuery + \")\";}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override string ToString(string field){return \"ToChildBlockJoinQuery (\" + _parentQuery + \")\";}",
    "output": "public String toString(String field) {return \"ToChildBlockJoinQuery (\"+parentQuery.toString()+\")\";}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public final void incRef() {refCount.incrementAndGet();}",
    "output": "public void IncRef(){refCount.IncrementAndGet();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public void IncRef(){refCount.IncrementAndGet();}",
    "output": "public final void incRef() {refCount.incrementAndGet();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public UpdateConfigurationSetSendingEnabledResult updateConfigurationSetSendingEnabled(UpdateConfigurationSetSendingEnabledRequest request) {request = beforeClientExecution(request);return executeUpdateConfigurationSetSendingEnabled(request);}",
    "output": "public virtual UpdateConfigurationSetSendingEnabledResponse UpdateConfigurationSetSendingEnabled(UpdateConfigurationSetSendingEnabledRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateConfigurationSetSendingEnabledRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateConfigurationSetSendingEnabledResponseUnmarshaller.Instance;return Invoke<UpdateConfigurationSetSendingEnabledResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual UpdateConfigurationSetSendingEnabledResponse UpdateConfigurationSetSendingEnabled(UpdateConfigurationSetSendingEnabledRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateConfigurationSetSendingEnabledRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateConfigurationSetSendingEnabledResponseUnmarshaller.Instance;return Invoke<UpdateConfigurationSetSendingEnabledResponse>(request, options);}",
    "output": "public UpdateConfigurationSetSendingEnabledResult updateConfigurationSetSendingEnabled(UpdateConfigurationSetSendingEnabledRequest request) {request = beforeClientExecution(request);return executeUpdateConfigurationSetSendingEnabled(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public int getNextXBATChainOffset() {return getXBATEntriesPerBlock() * LittleEndianConsts.INT_SIZE;}",
    "output": "public int GetNextXBATChainOffset(){return GetXBATEntriesPerBlock() * LittleEndianConsts.INT_SIZE;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public int GetNextXBATChainOffset(){return GetXBATEntriesPerBlock() * LittleEndianConsts.INT_SIZE;}",
    "output": "public int getNextXBATChainOffset() {return getXBATEntriesPerBlock() * LittleEndianConsts.INT_SIZE;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void multiplyByPowerOfTen(int pow10) {TenPower tp = TenPower.getInstance(Math.abs(pow10));if (pow10 < 0) {mulShift(tp._divisor, tp._divisorShift);} else {mulShift(tp._multiplicand, tp._multiplierShift);}}",
    "output": "public void multiplyByPowerOfTen(int pow10){TenPower tp = TenPower.GetInstance(Math.Abs(pow10));if (pow10 < 0){mulShift(tp._divisor, tp._divisorShift);}else{mulShift(tp._multiplicand, tp._multiplierShift);}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public void multiplyByPowerOfTen(int pow10){TenPower tp = TenPower.GetInstance(Math.Abs(pow10));if (pow10 < 0){mulShift(tp._divisor, tp._divisorShift);}else{mulShift(tp._multiplicand, tp._multiplierShift);}}",
    "output": "public void multiplyByPowerOfTen(int pow10) {TenPower tp = TenPower.getInstance(Math.abs(pow10));if (pow10 < 0) {mulShift(tp._divisor, tp._divisorShift);} else {mulShift(tp._multiplicand, tp._multiplierShift);}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String toString(){final StringBuilder b = new StringBuilder();final int          l = length();b.append(File.separatorChar);for (int i = 0; i < l; i++){b.append(getComponent(i));if (i < l - 1){b.append(File.separatorChar);}}return b.toString();}",
    "output": "public override string ToString(){StringBuilder builder = new StringBuilder();int length = this.Length;builder.Append(Path.DirectorySeparatorChar);for (int i = 0; i < length; i++){builder.Append(this.GetComponent(i));if (i < (length - 1)){builder.Append(Path.DirectorySeparatorChar);}}return builder.ToString();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override string ToString(){StringBuilder builder = new StringBuilder();int length = this.Length;builder.Append(Path.DirectorySeparatorChar);for (int i = 0; i < length; i++){builder.Append(this.GetComponent(i));if (i < (length - 1)){builder.Append(Path.DirectorySeparatorChar);}}return builder.ToString();}",
    "output": "public String toString(){final StringBuilder b = new StringBuilder();final int          l = length();b.append(File.separatorChar);for (int i = 0; i < l; i++){b.append(getComponent(i));if (i < l - 1){b.append(File.separatorChar);}}return b.toString();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public InstanceProfileCredentialsProvider withFetcher(ECSMetadataServiceCredentialsFetcher fetcher) {this.fetcher = fetcher;this.fetcher.setRoleName(roleName);return this;}",
    "output": "public void withFetcher(ECSMetadataServiceCredentialsFetcher fetcher){this.fetcher = fetcher;this.fetcher.SetRoleName(roleName);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public void withFetcher(ECSMetadataServiceCredentialsFetcher fetcher){this.fetcher = fetcher;this.fetcher.SetRoleName(roleName);}",
    "output": "public InstanceProfileCredentialsProvider withFetcher(ECSMetadataServiceCredentialsFetcher fetcher) {this.fetcher = fetcher;this.fetcher.setRoleName(roleName);return this;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void setProgressMonitor(ProgressMonitor pm) {progressMonitor = pm;}",
    "output": "public virtual void SetProgressMonitor(ProgressMonitor pm){progressMonitor = pm;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual void SetProgressMonitor(ProgressMonitor pm){progressMonitor = pm;}",
    "output": "public void setProgressMonitor(ProgressMonitor pm) {progressMonitor = pm;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void reset() {if (!first()) {ptr = 0;if (!eof())parseEntry();}}",
    "output": "public override void Reset(){if (!First){ptr = 0;if (!Eof){ParseEntry();}}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override void Reset(){if (!First){ptr = 0;if (!Eof){ParseEntry();}}}",
    "output": "public void reset() {if (!first()) {ptr = 0;if (!eof())parseEntry();}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public E previous() {if (iterator.previousIndex() >= start) {return iterator.previous();}throw new NoSuchElementException();}",
    "output": "public E previous(){if (iterator.previousIndex() >= start){return iterator.previous();}throw new java.util.NoSuchElementException();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public E previous(){if (iterator.previousIndex() >= start){return iterator.previous();}throw new java.util.NoSuchElementException();}",
    "output": "public E previous() {if (iterator.previousIndex() >= start) {return iterator.previous();}throw new NoSuchElementException();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String getNewPrefix() {return this.newPrefix;}",
    "output": "public virtual string GetNewPrefix(){return this.newPrefix;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual string GetNewPrefix(){return this.newPrefix;}",
    "output": "public String getNewPrefix() {return this.newPrefix;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public int indexOfValue(int value) {for (int i = 0; i < mSize; i++)if (mValues[i] == value)return i;return -1;}",
    "output": "public virtual int indexOfValue(int value){{for (int i = 0; i < mSize; i++){if (mValues[i] == value){return i;}}}return -1;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual int indexOfValue(int value){{for (int i = 0; i < mSize; i++){if (mValues[i] == value){return i;}}}return -1;}",
    "output": "public int indexOfValue(int value) {for (int i = 0; i < mSize; i++)if (mValues[i] == value)return i;return -1;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public List<CharsRef> uniqueStems(char word[], int length) {List<CharsRef> stems = stem(word, length);if (stems.size() < 2) {return stems;}CharArraySet terms = new CharArraySet(8, dictionary.ignoreCase);List<CharsRef> deduped = new ArrayList<>();for (CharsRef s : stems) {if (!terms.contains(s)) {deduped.add(s);terms.add(s);}}return deduped;}",
    "output": "public IList<CharsRef> UniqueStems(char[] word, int length){IList<CharsRef> stems = Stem(word, length);if (stems.Count < 2){return stems;}CharArraySet terms = new CharArraySet(LuceneVersion.LUCENE_CURRENT, 8, dictionary.ignoreCase); IList<CharsRef> deduped = new List<CharsRef>();foreach (CharsRef s in stems){if (!terms.Contains(s)){deduped.Add(s);terms.Add(s);}}return deduped;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public IList<CharsRef> UniqueStems(char[] word, int length){IList<CharsRef> stems = Stem(word, length);if (stems.Count < 2){return stems;}CharArraySet terms = new CharArraySet(LuceneVersion.LUCENE_CURRENT, 8, dictionary.ignoreCase); IList<CharsRef> deduped = new List<CharsRef>();foreach (CharsRef s in stems){if (!terms.Contains(s)){deduped.Add(s);terms.Add(s);}}return deduped;}",
    "output": "public List<CharsRef> uniqueStems(char word[], int length) {List<CharsRef> stems = stem(word, length);if (stems.size() < 2) {return stems;}CharArraySet terms = new CharArraySet(8, dictionary.ignoreCase);List<CharsRef> deduped = new ArrayList<>();for (CharsRef s : stems) {if (!terms.contains(s)) {deduped.add(s);terms.add(s);}}return deduped;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public GetGatewayResponsesResult getGatewayResponses(GetGatewayResponsesRequest request) {request = beforeClientExecution(request);return executeGetGatewayResponses(request);}",
    "output": "public virtual GetGatewayResponsesResponse GetGatewayResponses(GetGatewayResponsesRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetGatewayResponsesRequestMarshaller.Instance;options.ResponseUnmarshaller = GetGatewayResponsesResponseUnmarshaller.Instance;return Invoke<GetGatewayResponsesResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual GetGatewayResponsesResponse GetGatewayResponses(GetGatewayResponsesRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetGatewayResponsesRequestMarshaller.Instance;options.ResponseUnmarshaller = GetGatewayResponsesResponseUnmarshaller.Instance;return Invoke<GetGatewayResponsesResponse>(request, options);}",
    "output": "public GetGatewayResponsesResult getGatewayResponses(GetGatewayResponsesRequest request) {request = beforeClientExecution(request);return executeGetGatewayResponses(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void setPosition(long pos) {currentBlockIndex = (int) (pos >> blockBits);currentBlock = blocks[currentBlockIndex];currentBlockUpto = (int) (pos & blockMask);}",
    "output": "public void SetPosition(long position){currentBlockIndex = (int)(position >> outerInstance.blockBits);currentBlock = outerInstance.blocks[currentBlockIndex];currentBlockUpto = (int)(position & outerInstance.blockMask);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public void SetPosition(long position){currentBlockIndex = (int)(position >> outerInstance.blockBits);currentBlock = outerInstance.blocks[currentBlockIndex];currentBlockUpto = (int)(position & outerInstance.blockMask);}",
    "output": "public void setPosition(long pos) {currentBlockIndex = (int) (pos >> blockBits);currentBlock = blocks[currentBlockIndex];currentBlockUpto = (int) (pos & blockMask);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public long skip(long n) {int s = (int) Math.min(available(), Math.max(0, n));ptr += s;return s;}",
    "output": "public override long Skip(long n){int s = (int)Math.Min(Available(), Math.Max(0, n));ptr += s;return s;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override long Skip(long n){int s = (int)Math.Min(Available(), Math.Max(0, n));ptr += s;return s;}",
    "output": "public long skip(long n) {int s = (int) Math.min(available(), Math.max(0, n));ptr += s;return s;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public BootstrapActionDetail(BootstrapActionConfig bootstrapActionConfig) {setBootstrapActionConfig(bootstrapActionConfig);}",
    "output": "public BootstrapActionDetail(BootstrapActionConfig bootstrapActionConfig){_bootstrapActionConfig = bootstrapActionConfig;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public BootstrapActionDetail(BootstrapActionConfig bootstrapActionConfig){_bootstrapActionConfig = bootstrapActionConfig;}",
    "output": "public BootstrapActionDetail(BootstrapActionConfig bootstrapActionConfig) {setBootstrapActionConfig(bootstrapActionConfig);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void serialize(LittleEndianOutput out) {out.writeShort(field_1_row);out.writeShort(field_2_col);out.writeShort(field_3_flags);out.writeShort(field_4_shapeid);out.writeShort(field_6_author.length());out.writeByte(field_5_hasMultibyte ? 0x01 : 0x00);if (field_5_hasMultibyte) {StringUtil.putUnicodeLE(field_6_author, out);} else {StringUtil.putCompressedUnicode(field_6_author, out);}if (field_7_padding != null) {out.writeByte(field_7_padding.intValue());}}",
    "output": "public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(field_1_row);out1.WriteShort(field_2_col);out1.WriteShort(field_3_flags);out1.WriteShort(field_4_shapeid);out1.WriteShort(field_6_author.Length);out1.WriteByte(field_5_hasMultibyte ? 0x01 : 0x00);if (field_5_hasMultibyte) {StringUtil.PutUnicodeLE(field_6_author, out1);} else {StringUtil.PutCompressedUnicode(field_6_author, out1);}if (field_7_padding != null) {out1.WriteByte(Convert.ToInt32(field_7_padding, CultureInfo.InvariantCulture));}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(field_1_row);out1.WriteShort(field_2_col);out1.WriteShort(field_3_flags);out1.WriteShort(field_4_shapeid);out1.WriteShort(field_6_author.Length);out1.WriteByte(field_5_hasMultibyte ? 0x01 : 0x00);if (field_5_hasMultibyte) {StringUtil.PutUnicodeLE(field_6_author, out1);} else {StringUtil.PutCompressedUnicode(field_6_author, out1);}if (field_7_padding != null) {out1.WriteByte(Convert.ToInt32(field_7_padding, CultureInfo.InvariantCulture));}}",
    "output": "public void serialize(LittleEndianOutput out) {out.writeShort(field_1_row);out.writeShort(field_2_col);out.writeShort(field_3_flags);out.writeShort(field_4_shapeid);out.writeShort(field_6_author.length());out.writeByte(field_5_hasMultibyte ? 0x01 : 0x00);if (field_5_hasMultibyte) {StringUtil.putUnicodeLE(field_6_author, out);} else {StringUtil.putCompressedUnicode(field_6_author, out);}if (field_7_padding != null) {out.writeByte(field_7_padding.intValue());}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public int lastIndexOf(String string) {return lastIndexOf(string, count);}",
    "output": "public virtual int lastIndexOf(string @string){return lastIndexOf(@string, count);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual int lastIndexOf(string @string){return lastIndexOf(@string, count);}",
    "output": "public int lastIndexOf(String string) {return lastIndexOf(string, count);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public boolean add(E object) {return addLastImpl(object);}",
    "output": "public override bool add(E @object){return addLastImpl(@object);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override bool add(E @object){return addLastImpl(@object);}",
    "output": "public boolean add(E object) {return addLastImpl(object);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void unsetSection(String section, String subsection) {ConfigSnapshot src, res;do {src = state.get();res = unsetSection(src, section, subsection);} while (!state.compareAndSet(src, res));}",
    "output": "public virtual void UnsetSection(string section, string subsection){ConfigSnapshot src;ConfigSnapshot res;do{src = state.Get();res = UnsetSection(src, section, subsection);}while (!state.CompareAndSet(src, res));}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual void UnsetSection(string section, string subsection){ConfigSnapshot src;ConfigSnapshot res;do{src = state.Get();res = UnsetSection(src, section, subsection);}while (!state.CompareAndSet(src, res));}",
    "output": "public void unsetSection(String section, String subsection) {ConfigSnapshot src, res;do {src = state.get();res = unsetSection(src, section, subsection);} while (!state.compareAndSet(src, res));}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public final String getTagName() {return tagName;}",
    "output": "public string GetTagName(){return tagName;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public string GetTagName(){return tagName;}",
    "output": "public final String getTagName() {return tagName;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void addSubRecord(int index, SubRecord element) {subrecords.add(index, element);}",
    "output": "public void AddSubRecord(int index, SubRecord element){subrecords.Insert(index, element);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public void AddSubRecord(int index, SubRecord element){subrecords.Insert(index, element);}",
    "output": "public void addSubRecord(int index, SubRecord element) {subrecords.add(index, element);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public boolean remove(Object o) {synchronized (mutex) {return delegate().remove(o);}}",
    "output": "public virtual bool remove(object @object){lock (mutex){return c.remove(@object);}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual bool remove(object @object){lock (mutex){return c.remove(@object);}}",
    "output": "public boolean remove(Object o) {synchronized (mutex) {return delegate().remove(o);}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DoubleMetaphoneFilter create(TokenStream input) {return new DoubleMetaphoneFilter(input, maxCodeLength, inject);}",
    "output": "public override TokenStream Create(TokenStream input){return new DoubleMetaphoneFilter(input, maxCodeLength, inject);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override TokenStream Create(TokenStream input){return new DoubleMetaphoneFilter(input, maxCodeLength, inject);}",
    "output": "public DoubleMetaphoneFilter create(TokenStream input) {return new DoubleMetaphoneFilter(input, maxCodeLength, inject);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public long length() {return inCoreLength();}",
    "output": "public virtual long Length(){return InCoreLength();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual long Length(){return InCoreLength();}",
    "output": "public long length() {return inCoreLength();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void setValue(boolean newValue) {value = newValue;}",
    "output": "public virtual void SetValue(bool newValue){value = newValue;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual void SetValue(bool newValue){value = newValue;}",
    "output": "public void setValue(boolean newValue) {value = newValue;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public Pair(ContentSource oldSource, ContentSource newSource) {this.oldSource = oldSource;this.newSource = newSource;}",
    "output": "public Pair(ContentSource oldSource, ContentSource newSource){this.oldSource = oldSource;this.newSource = newSource;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public Pair(ContentSource oldSource, ContentSource newSource){this.oldSource = oldSource;this.newSource = newSource;}",
    "output": "public Pair(ContentSource oldSource, ContentSource newSource) {this.oldSource = oldSource;this.newSource = newSource;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public int get(int i) {if (count <= i)throw new ArrayIndexOutOfBoundsException(i);return entries[i];}",
    "output": "public virtual int Get(int i){if (count <= i){throw Sharpen.Extensions.CreateIndexOutOfRangeException(i);}return entries[i];}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual int Get(int i){if (count <= i){throw Sharpen.Extensions.CreateIndexOutOfRangeException(i);}return entries[i];}",
    "output": "public int get(int i) {if (count <= i)throw new ArrayIndexOutOfBoundsException(i);return entries[i];}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public CreateRepoRequest() {super(\"cr\", \"2016-06-07\", \"CreateRepo\", \"cr\");setUriPattern(\"/repos\");setMethod(MethodType.PUT);}",
    "output": "public CreateRepoRequest(): base(\"cr\", \"2016-06-07\", \"CreateRepo\", \"cr\", \"openAPI\"){UriPattern = \"/repos\";Method = MethodType.PUT;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public CreateRepoRequest(): base(\"cr\", \"2016-06-07\", \"CreateRepo\", \"cr\", \"openAPI\"){UriPattern = \"/repos\";Method = MethodType.PUT;}",
    "output": "public CreateRepoRequest() {super(\"cr\", \"2016-06-07\", \"CreateRepo\", \"cr\");setUriPattern(\"/repos\");setMethod(MethodType.PUT);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public boolean isDeltaBaseAsOffset() {return deltaBaseAsOffset;}",
    "output": "public virtual bool IsDeltaBaseAsOffset(){return deltaBaseAsOffset;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual bool IsDeltaBaseAsOffset(){return deltaBaseAsOffset;}",
    "output": "public boolean isDeltaBaseAsOffset() {return deltaBaseAsOffset;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void remove() {if (expectedModCount == list.modCount) {if (lastLink != null) {Link<ET> next = lastLink.next;Link<ET> previous = lastLink.previous;next.previous = previous;previous.next = next;if (lastLink == link) {pos--;}link = previous;lastLink = null;expectedModCount++;list.size--;list.modCount++;} else {throw new IllegalStateException();}} else {throw new ConcurrentModificationException();}}",
    "output": "public void remove(){if (expectedModCount == list.modCount){if (lastLink != null){java.util.LinkedList.Link<ET> next_1 = lastLink.next;java.util.LinkedList.Link<ET> previous_1 = lastLink.previous;next_1.previous = previous_1;previous_1.next = next_1;if (lastLink == link){pos--;}link = previous_1;lastLink = null;expectedModCount++;list._size--;list.modCount++;}else{throw new System.InvalidOperationException();}}else{throw new java.util.ConcurrentModificationException();}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public void remove(){if (expectedModCount == list.modCount){if (lastLink != null){java.util.LinkedList.Link<ET> next_1 = lastLink.next;java.util.LinkedList.Link<ET> previous_1 = lastLink.previous;next_1.previous = previous_1;previous_1.next = next_1;if (lastLink == link){pos--;}link = previous_1;lastLink = null;expectedModCount++;list._size--;list.modCount++;}else{throw new System.InvalidOperationException();}}else{throw new java.util.ConcurrentModificationException();}}",
    "output": "public void remove() {if (expectedModCount == list.modCount) {if (lastLink != null) {Link<ET> next = lastLink.next;Link<ET> previous = lastLink.previous;next.previous = previous;previous.next = next;if (lastLink == link) {pos--;}link = previous;lastLink = null;expectedModCount++;list.size--;list.modCount++;} else {throw new IllegalStateException();}} else {throw new ConcurrentModificationException();}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public MergeShardsResult mergeShards(MergeShardsRequest request) {request = beforeClientExecution(request);return executeMergeShards(request);}",
    "output": "public virtual MergeShardsResponse MergeShards(MergeShardsRequest request){var options = new InvokeOptions();options.RequestMarshaller = MergeShardsRequestMarshaller.Instance;options.ResponseUnmarshaller = MergeShardsResponseUnmarshaller.Instance;return Invoke<MergeShardsResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual MergeShardsResponse MergeShards(MergeShardsRequest request){var options = new InvokeOptions();options.RequestMarshaller = MergeShardsRequestMarshaller.Instance;options.ResponseUnmarshaller = MergeShardsResponseUnmarshaller.Instance;return Invoke<MergeShardsResponse>(request, options);}",
    "output": "public MergeShardsResult mergeShards(MergeShardsRequest request) {request = beforeClientExecution(request);return executeMergeShards(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public AllocateHostedConnectionResult allocateHostedConnection(AllocateHostedConnectionRequest request) {request = beforeClientExecution(request);return executeAllocateHostedConnection(request);}",
    "output": "public virtual AllocateHostedConnectionResponse AllocateHostedConnection(AllocateHostedConnectionRequest request){var options = new InvokeOptions();options.RequestMarshaller = AllocateHostedConnectionRequestMarshaller.Instance;options.ResponseUnmarshaller = AllocateHostedConnectionResponseUnmarshaller.Instance;return Invoke<AllocateHostedConnectionResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual AllocateHostedConnectionResponse AllocateHostedConnection(AllocateHostedConnectionRequest request){var options = new InvokeOptions();options.RequestMarshaller = AllocateHostedConnectionRequestMarshaller.Instance;options.ResponseUnmarshaller = AllocateHostedConnectionResponseUnmarshaller.Instance;return Invoke<AllocateHostedConnectionResponse>(request, options);}",
    "output": "public AllocateHostedConnectionResult allocateHostedConnection(AllocateHostedConnectionRequest request) {request = beforeClientExecution(request);return executeAllocateHostedConnection(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public int getBeginIndex() {return start;}",
    "output": "public int getBeginIndex(){return start;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public int getBeginIndex(){return start;}",
    "output": "public int getBeginIndex() {return start;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public static final WeightedTerm[] getTerms(Query query){return getTerms(query,false);}",
    "output": "public static WeightedTerm[] GetTerms(Query query){return GetTerms(query, false);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public static WeightedTerm[] GetTerms(Query query){return GetTerms(query, false);}",
    "output": "public static final WeightedTerm[] getTerms(Query query){return getTerms(query,false);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ByteBuffer compact() {throw new ReadOnlyBufferException();}",
    "output": "public override java.nio.ByteBuffer compact(){throw new java.nio.ReadOnlyBufferException();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override java.nio.ByteBuffer compact(){throw new java.nio.ReadOnlyBufferException();}",
    "output": "public ByteBuffer compact() {throw new ReadOnlyBufferException();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void decode(byte[] blocks, int blocksOffset, long[] values, int valuesOffset, int iterations) {for (int i = 0; i < iterations; ++i) {final long byte0 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = byte0 >>> 2;final long byte1 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte0 & 3) << 4) | (byte1 >>> 4);final long byte2 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte1 & 15) << 2) | (byte2 >>> 6);values[valuesOffset++] = byte2 & 63;}}",
    "output": "public override void Decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations){for (int i = 0; i < iterations; ++i){int byte0 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = (int)((uint)byte0 >> 2);int byte1 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte0 & 3) << 4) | ((int)((uint)byte1 >> 4));int byte2 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte1 & 15) << 2) | ((int)((uint)byte2 >> 6));values[valuesOffset++] = byte2 & 63;}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override void Decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations){for (int i = 0; i < iterations; ++i){int byte0 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = (int)((uint)byte0 >> 2);int byte1 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte0 & 3) << 4) | ((int)((uint)byte1 >> 4));int byte2 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte1 & 15) << 2) | ((int)((uint)byte2 >> 6));values[valuesOffset++] = byte2 & 63;}}",
    "output": "public void decode(byte[] blocks, int blocksOffset, long[] values, int valuesOffset, int iterations) {for (int i = 0; i < iterations; ++i) {final long byte0 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = byte0 >>> 2;final long byte1 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte0 & 3) << 4) | (byte1 >>> 4);final long byte2 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte1 & 15) << 2) | (byte2 >>> 6);values[valuesOffset++] = byte2 & 63;}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String getHumanishName() throws IllegalArgumentException {String s = getPath();if (\"/\".equals(s) || \"\".equals(s)) s = getHost();if (s == null) throw new IllegalArgumentException();String[] elements;if (\"file\".equals(scheme) || LOCAL_FILE.matcher(s).matches()) elements = s.split(\"[\\\\\" + File.separatorChar + \"/]\"); elseelements = s.split(\"/+\"); if (elements.length == 0)throw new IllegalArgumentException();String result = elements[elements.length - 1];if (Constants.DOT_GIT.equals(result))result = elements[elements.length - 2];else if (result.endsWith(Constants.DOT_GIT_EXT))result = result.substring(0, result.length()- Constants.DOT_GIT_EXT.length());return result;}",
    "output": "public virtual string GetHumanishName(){if (string.Empty.Equals(GetPath()) || GetPath() == null){throw new ArgumentException();}string s = GetPath();string[] elements;if (\"file\".Equals(scheme) || LOCAL_FILE.Matcher(s).Matches()){elements = s.Split(\"[\\\\\" + FilePath.separatorChar + \"/]\");}else{elements = s.Split(\"/\");}if (elements.Length == 0){throw new ArgumentException();}string result = elements[elements.Length - 1];if (Constants.DOT_GIT.Equals(result)){result = elements[elements.Length - 2];}else{if (result.EndsWith(Constants.DOT_GIT_EXT)){result = Sharpen.Runtime.Substring(result, 0, result.Length - Constants.DOT_GIT_EXT.Length);}}return result;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual string GetHumanishName(){if (string.Empty.Equals(GetPath()) || GetPath() == null){throw new ArgumentException();}string s = GetPath();string[] elements;if (\"file\".Equals(scheme) || LOCAL_FILE.Matcher(s).Matches()){elements = s.Split(\"[\\\\\" + FilePath.separatorChar + \"/]\");}else{elements = s.Split(\"/\");}if (elements.Length == 0){throw new ArgumentException();}string result = elements[elements.Length - 1];if (Constants.DOT_GIT.Equals(result)){result = elements[elements.Length - 2];}else{if (result.EndsWith(Constants.DOT_GIT_EXT)){result = Sharpen.Runtime.Substring(result, 0, result.Length - Constants.DOT_GIT_EXT.Length);}}return result;}",
    "output": "public String getHumanishName() throws IllegalArgumentException {String s = getPath();if (\"/\".equals(s) || \"\".equals(s)) s = getHost();if (s == null) throw new IllegalArgumentException();String[] elements;if (\"file\".equals(scheme) || LOCAL_FILE.matcher(s).matches()) elements = s.split(\"[\\\\\" + File.separatorChar + \"/]\"); elseelements = s.split(\"/+\"); if (elements.length == 0)throw new IllegalArgumentException();String result = elements[elements.length - 1];if (Constants.DOT_GIT.equals(result))result = elements[elements.length - 2];else if (result.endsWith(Constants.DOT_GIT_EXT))result = result.substring(0, result.length()- Constants.DOT_GIT_EXT.length());return result;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DescribeNotebookInstanceLifecycleConfigResult describeNotebookInstanceLifecycleConfig(DescribeNotebookInstanceLifecycleConfigRequest request) {request = beforeClientExecution(request);return executeDescribeNotebookInstanceLifecycleConfig(request);}",
    "output": "public virtual DescribeNotebookInstanceLifecycleConfigResponse DescribeNotebookInstanceLifecycleConfig(DescribeNotebookInstanceLifecycleConfigRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeNotebookInstanceLifecycleConfigRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeNotebookInstanceLifecycleConfigResponseUnmarshaller.Instance;return Invoke<DescribeNotebookInstanceLifecycleConfigResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DescribeNotebookInstanceLifecycleConfigResponse DescribeNotebookInstanceLifecycleConfig(DescribeNotebookInstanceLifecycleConfigRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeNotebookInstanceLifecycleConfigRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeNotebookInstanceLifecycleConfigResponseUnmarshaller.Instance;return Invoke<DescribeNotebookInstanceLifecycleConfigResponse>(request, options);}",
    "output": "public DescribeNotebookInstanceLifecycleConfigResult describeNotebookInstanceLifecycleConfig(DescribeNotebookInstanceLifecycleConfigRequest request) {request = beforeClientExecution(request);return executeDescribeNotebookInstanceLifecycleConfig(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String getAccessKeySecret() {return this.accessKeySecret;}",
    "output": "public string GetAccessKeySecret(){return AccessSecret;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public string GetAccessKeySecret(){return AccessSecret;}",
    "output": "public String getAccessKeySecret() {return this.accessKeySecret;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public CreateVpnConnectionResult createVpnConnection(CreateVpnConnectionRequest request) {request = beforeClientExecution(request);return executeCreateVpnConnection(request);}",
    "output": "public virtual CreateVpnConnectionResponse CreateVpnConnection(CreateVpnConnectionRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateVpnConnectionRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateVpnConnectionResponseUnmarshaller.Instance;return Invoke<CreateVpnConnectionResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual CreateVpnConnectionResponse CreateVpnConnection(CreateVpnConnectionRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateVpnConnectionRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateVpnConnectionResponseUnmarshaller.Instance;return Invoke<CreateVpnConnectionResponse>(request, options);}",
    "output": "public CreateVpnConnectionResult createVpnConnection(CreateVpnConnectionRequest request) {request = beforeClientExecution(request);return executeCreateVpnConnection(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DescribeVoicesResult describeVoices(DescribeVoicesRequest request) {request = beforeClientExecution(request);return executeDescribeVoices(request);}",
    "output": "public virtual DescribeVoicesResponse DescribeVoices(DescribeVoicesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeVoicesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeVoicesResponseUnmarshaller.Instance;return Invoke<DescribeVoicesResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DescribeVoicesResponse DescribeVoices(DescribeVoicesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeVoicesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeVoicesResponseUnmarshaller.Instance;return Invoke<DescribeVoicesResponse>(request, options);}",
    "output": "public DescribeVoicesResult describeVoices(DescribeVoicesRequest request) {request = beforeClientExecution(request);return executeDescribeVoices(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ListMonitoringExecutionsResult listMonitoringExecutions(ListMonitoringExecutionsRequest request) {request = beforeClientExecution(request);return executeListMonitoringExecutions(request);}",
    "output": "public virtual ListMonitoringExecutionsResponse ListMonitoringExecutions(ListMonitoringExecutionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListMonitoringExecutionsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListMonitoringExecutionsResponseUnmarshaller.Instance;return Invoke<ListMonitoringExecutionsResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual ListMonitoringExecutionsResponse ListMonitoringExecutions(ListMonitoringExecutionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListMonitoringExecutionsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListMonitoringExecutionsResponseUnmarshaller.Instance;return Invoke<ListMonitoringExecutionsResponse>(request, options);}",
    "output": "public ListMonitoringExecutionsResult listMonitoringExecutions(ListMonitoringExecutionsRequest request) {request = beforeClientExecution(request);return executeListMonitoringExecutions(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DescribeJobRequest(String vaultName, String jobId) {setVaultName(vaultName);setJobId(jobId);}",
    "output": "public DescribeJobRequest(string vaultName, string jobId){_vaultName = vaultName;_jobId = jobId;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public DescribeJobRequest(string vaultName, string jobId){_vaultName = vaultName;_jobId = jobId;}",
    "output": "public DescribeJobRequest(String vaultName, String jobId) {setVaultName(vaultName);setJobId(jobId);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public EscherRecord getEscherRecord(int index){return escherRecords.get(index);}",
    "output": "public EscherRecord GetEscherRecord(int index){return escherRecords[index];}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public EscherRecord GetEscherRecord(int index){return escherRecords[index];}",
    "output": "public EscherRecord getEscherRecord(int index){return escherRecords.get(index);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public GetApisResult getApis(GetApisRequest request) {request = beforeClientExecution(request);return executeGetApis(request);}",
    "output": "public virtual GetApisResponse GetApis(GetApisRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetApisRequestMarshaller.Instance;options.ResponseUnmarshaller = GetApisResponseUnmarshaller.Instance;return Invoke<GetApisResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual GetApisResponse GetApis(GetApisRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetApisRequestMarshaller.Instance;options.ResponseUnmarshaller = GetApisResponseUnmarshaller.Instance;return Invoke<GetApisResponse>(request, options);}",
    "output": "public GetApisResult getApis(GetApisRequest request) {request = beforeClientExecution(request);return executeGetApis(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DeleteSmsChannelResult deleteSmsChannel(DeleteSmsChannelRequest request) {request = beforeClientExecution(request);return executeDeleteSmsChannel(request);}",
    "output": "public virtual DeleteSmsChannelResponse DeleteSmsChannel(DeleteSmsChannelRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteSmsChannelRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteSmsChannelResponseUnmarshaller.Instance;return Invoke<DeleteSmsChannelResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DeleteSmsChannelResponse DeleteSmsChannel(DeleteSmsChannelRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteSmsChannelRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteSmsChannelResponseUnmarshaller.Instance;return Invoke<DeleteSmsChannelResponse>(request, options);}",
    "output": "public DeleteSmsChannelResult deleteSmsChannel(DeleteSmsChannelRequest request) {request = beforeClientExecution(request);return executeDeleteSmsChannel(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public TrackingRefUpdate getTrackingRefUpdate() {return trackingRefUpdate;}",
    "output": "public virtual TrackingRefUpdate GetTrackingRefUpdate(){return trackingRefUpdate;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual TrackingRefUpdate GetTrackingRefUpdate(){return trackingRefUpdate;}",
    "output": "public TrackingRefUpdate getTrackingRefUpdate() {return trackingRefUpdate;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void print(boolean b) {print(String.valueOf(b));}",
    "output": "public virtual void print(bool b){print(b.ToString());}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual void print(bool b){print(b.ToString());}",
    "output": "public void print(boolean b) {print(String.valueOf(b));}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public QueryNode getChild() {return getChildren().get(0);}",
    "output": "public virtual IQueryNode GetChild(){return GetChildren()[0];}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual IQueryNode GetChild(){return GetChildren()[0];}",
    "output": "public QueryNode getChild() {return getChildren().get(0);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public NotIgnoredFilter(int workdirTreeIndex) {this.index = workdirTreeIndex;}",
    "output": "public NotIgnoredFilter(int workdirTreeIndex){this.index = workdirTreeIndex;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public NotIgnoredFilter(int workdirTreeIndex){this.index = workdirTreeIndex;}",
    "output": "public NotIgnoredFilter(int workdirTreeIndex) {this.index = workdirTreeIndex;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public AreaRecord(RecordInputStream in) {field_1_formatFlags            = in.readShort();}",
    "output": "public AreaRecord(RecordInputStream in1){field_1_formatFlags = in1.ReadShort();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public AreaRecord(RecordInputStream in1){field_1_formatFlags = in1.ReadShort();}",
    "output": "public AreaRecord(RecordInputStream in) {field_1_formatFlags            = in.readShort();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public GetThumbnailRequest() {super(\"CloudPhoto\", \"2017-07-11\", \"GetThumbnail\", \"cloudphoto\");setProtocol(ProtocolType.HTTPS);}",
    "output": "public GetThumbnailRequest(): base(\"CloudPhoto\", \"2017-07-11\", \"GetThumbnail\", \"cloudphoto\", \"openAPI\"){Protocol = ProtocolType.HTTPS;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public GetThumbnailRequest(): base(\"CloudPhoto\", \"2017-07-11\", \"GetThumbnail\", \"cloudphoto\", \"openAPI\"){Protocol = ProtocolType.HTTPS;}",
    "output": "public GetThumbnailRequest() {super(\"CloudPhoto\", \"2017-07-11\", \"GetThumbnail\", \"cloudphoto\");setProtocol(ProtocolType.HTTPS);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DescribeTransitGatewayVpcAttachmentsResult describeTransitGatewayVpcAttachments(DescribeTransitGatewayVpcAttachmentsRequest request) {request = beforeClientExecution(request);return executeDescribeTransitGatewayVpcAttachments(request);}",
    "output": "public virtual DescribeTransitGatewayVpcAttachmentsResponse DescribeTransitGatewayVpcAttachments(DescribeTransitGatewayVpcAttachmentsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeTransitGatewayVpcAttachmentsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeTransitGatewayVpcAttachmentsResponseUnmarshaller.Instance;return Invoke<DescribeTransitGatewayVpcAttachmentsResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DescribeTransitGatewayVpcAttachmentsResponse DescribeTransitGatewayVpcAttachments(DescribeTransitGatewayVpcAttachmentsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeTransitGatewayVpcAttachmentsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeTransitGatewayVpcAttachmentsResponseUnmarshaller.Instance;return Invoke<DescribeTransitGatewayVpcAttachmentsResponse>(request, options);}",
    "output": "public DescribeTransitGatewayVpcAttachmentsResult describeTransitGatewayVpcAttachments(DescribeTransitGatewayVpcAttachmentsRequest request) {request = beforeClientExecution(request);return executeDescribeTransitGatewayVpcAttachments(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public PutVoiceConnectorStreamingConfigurationResult putVoiceConnectorStreamingConfiguration(PutVoiceConnectorStreamingConfigurationRequest request) {request = beforeClientExecution(request);return executePutVoiceConnectorStreamingConfiguration(request);}",
    "output": "public virtual PutVoiceConnectorStreamingConfigurationResponse PutVoiceConnectorStreamingConfiguration(PutVoiceConnectorStreamingConfigurationRequest request){var options = new InvokeOptions();options.RequestMarshaller = PutVoiceConnectorStreamingConfigurationRequestMarshaller.Instance;options.ResponseUnmarshaller = PutVoiceConnectorStreamingConfigurationResponseUnmarshaller.Instance;return Invoke<PutVoiceConnectorStreamingConfigurationResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual PutVoiceConnectorStreamingConfigurationResponse PutVoiceConnectorStreamingConfiguration(PutVoiceConnectorStreamingConfigurationRequest request){var options = new InvokeOptions();options.RequestMarshaller = PutVoiceConnectorStreamingConfigurationRequestMarshaller.Instance;options.ResponseUnmarshaller = PutVoiceConnectorStreamingConfigurationResponseUnmarshaller.Instance;return Invoke<PutVoiceConnectorStreamingConfigurationResponse>(request, options);}",
    "output": "public PutVoiceConnectorStreamingConfigurationResult putVoiceConnectorStreamingConfiguration(PutVoiceConnectorStreamingConfigurationRequest request) {request = beforeClientExecution(request);return executePutVoiceConnectorStreamingConfiguration(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public OrdRange getOrdRange(String dim) {return prefixToOrdRange.get(dim);}",
    "output": "public override OrdRange GetOrdRange(string dim){OrdRange result;prefixToOrdRange.TryGetValue(dim, out result);return result;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override OrdRange GetOrdRange(string dim){OrdRange result;prefixToOrdRange.TryGetValue(dim, out result);return result;}",
    "output": "public OrdRange getOrdRange(String dim) {return prefixToOrdRange.get(dim);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String toString() {String symbol = \"\";if (startIndex >= 0 && startIndex < getInputStream().size()) {symbol = getInputStream().getText(Interval.of(startIndex,startIndex));symbol = Utils.escapeWhitespace(symbol, false);}return String.format(Locale.getDefault(), \"%s('%s')\", LexerNoViableAltException.class.getSimpleName(), symbol);}",
    "output": "public override string ToString(){string symbol = string.Empty;if (startIndex >= 0 && startIndex < ((ICharStream)InputStream).Size){symbol = ((ICharStream)InputStream).GetText(Interval.Of(startIndex, startIndex));symbol = Utils.EscapeWhitespace(symbol, false);}return string.Format(CultureInfo.CurrentCulture, \"{0}('{1}')\", typeof(Antlr4.Runtime.LexerNoViableAltException).Name, symbol);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override string ToString(){string symbol = string.Empty;if (startIndex >= 0 && startIndex < ((ICharStream)InputStream).Size){symbol = ((ICharStream)InputStream).GetText(Interval.Of(startIndex, startIndex));symbol = Utils.EscapeWhitespace(symbol, false);}return string.Format(CultureInfo.CurrentCulture, \"{0}('{1}')\", typeof(Antlr4.Runtime.LexerNoViableAltException).Name, symbol);}",
    "output": "public String toString() {String symbol = \"\";if (startIndex >= 0 && startIndex < getInputStream().size()) {symbol = getInputStream().getText(Interval.of(startIndex,startIndex));symbol = Utils.escapeWhitespace(symbol, false);}return String.format(Locale.getDefault(), \"%s('%s')\", LexerNoViableAltException.class.getSimpleName(), symbol);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public E peek() {return peekFirstImpl();}",
    "output": "public virtual E peek(){return peekFirstImpl();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual E peek(){return peekFirstImpl();}",
    "output": "public E peek() {return peekFirstImpl();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public CreateWorkspacesResult createWorkspaces(CreateWorkspacesRequest request) {request = beforeClientExecution(request);return executeCreateWorkspaces(request);}",
    "output": "public virtual CreateWorkspacesResponse CreateWorkspaces(CreateWorkspacesRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateWorkspacesRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateWorkspacesResponseUnmarshaller.Instance;return Invoke<CreateWorkspacesResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual CreateWorkspacesResponse CreateWorkspaces(CreateWorkspacesRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateWorkspacesRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateWorkspacesResponseUnmarshaller.Instance;return Invoke<CreateWorkspacesResponse>(request, options);}",
    "output": "public CreateWorkspacesResult createWorkspaces(CreateWorkspacesRequest request) {request = beforeClientExecution(request);return executeCreateWorkspaces(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public NumberFormatIndexRecord clone() {return copy();}",
    "output": "public override Object Clone(){NumberFormatIndexRecord rec = new NumberFormatIndexRecord();rec.field_1_formatIndex = field_1_formatIndex;return rec;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override Object Clone(){NumberFormatIndexRecord rec = new NumberFormatIndexRecord();rec.field_1_formatIndex = field_1_formatIndex;return rec;}",
    "output": "public NumberFormatIndexRecord clone() {return copy();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DescribeRepositoriesResult describeRepositories(DescribeRepositoriesRequest request) {request = beforeClientExecution(request);return executeDescribeRepositories(request);}",
    "output": "public virtual DescribeRepositoriesResponse DescribeRepositories(DescribeRepositoriesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeRepositoriesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeRepositoriesResponseUnmarshaller.Instance;return Invoke<DescribeRepositoriesResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DescribeRepositoriesResponse DescribeRepositories(DescribeRepositoriesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeRepositoriesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeRepositoriesResponseUnmarshaller.Instance;return Invoke<DescribeRepositoriesResponse>(request, options);}",
    "output": "public DescribeRepositoriesResult describeRepositories(DescribeRepositoriesRequest request) {request = beforeClientExecution(request);return executeDescribeRepositories(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public SparseIntArray(int initialCapacity) {initialCapacity = ArrayUtils.idealIntArraySize(initialCapacity);mKeys = new int[initialCapacity];mValues = new int[initialCapacity];mSize = 0;}",
    "output": "public SparseIntArray(int initialCapacity){initialCapacity = android.util.@internal.ArrayUtils.idealIntArraySize(initialCapacity);mKeys = new int[initialCapacity];mValues = new int[initialCapacity];mSize = 0;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public SparseIntArray(int initialCapacity){initialCapacity = android.util.@internal.ArrayUtils.idealIntArraySize(initialCapacity);mKeys = new int[initialCapacity];mValues = new int[initialCapacity];mSize = 0;}",
    "output": "public SparseIntArray(int initialCapacity) {initialCapacity = ArrayUtils.idealIntArraySize(initialCapacity);mKeys = new int[initialCapacity];mValues = new int[initialCapacity];mSize = 0;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public HyphenatedWordsFilter create(TokenStream input) {return new HyphenatedWordsFilter(input);}",
    "output": "public override TokenStream Create(TokenStream input){return new HyphenatedWordsFilter(input);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override TokenStream Create(TokenStream input){return new HyphenatedWordsFilter(input);}",
    "output": "public HyphenatedWordsFilter create(TokenStream input) {return new HyphenatedWordsFilter(input);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public CreateDistributionWithTagsResult createDistributionWithTags(CreateDistributionWithTagsRequest request) {request = beforeClientExecution(request);return executeCreateDistributionWithTags(request);}",
    "output": "public virtual CreateDistributionWithTagsResponse CreateDistributionWithTags(CreateDistributionWithTagsRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateDistributionWithTagsRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateDistributionWithTagsResponseUnmarshaller.Instance;return Invoke<CreateDistributionWithTagsResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual CreateDistributionWithTagsResponse CreateDistributionWithTags(CreateDistributionWithTagsRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateDistributionWithTagsRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateDistributionWithTagsResponseUnmarshaller.Instance;return Invoke<CreateDistributionWithTagsResponse>(request, options);}",
    "output": "public CreateDistributionWithTagsResult createDistributionWithTags(CreateDistributionWithTagsRequest request) {request = beforeClientExecution(request);return executeCreateDistributionWithTags(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public RandomAccessFile(String fileName, String mode) throws FileNotFoundException {this(new File(fileName), mode);}",
    "output": "public RandomAccessFile(string fileName, string mode) : this(new java.io.File(fileName), mode){throw new System.NotImplementedException();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public RandomAccessFile(string fileName, string mode) : this(new java.io.File(fileName), mode){throw new System.NotImplementedException();}",
    "output": "public RandomAccessFile(String fileName, String mode) throws FileNotFoundException {this(new File(fileName), mode);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DeleteWorkspaceImageResult deleteWorkspaceImage(DeleteWorkspaceImageRequest request) {request = beforeClientExecution(request);return executeDeleteWorkspaceImage(request);}",
    "output": "public virtual DeleteWorkspaceImageResponse DeleteWorkspaceImage(DeleteWorkspaceImageRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteWorkspaceImageRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteWorkspaceImageResponseUnmarshaller.Instance;return Invoke<DeleteWorkspaceImageResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DeleteWorkspaceImageResponse DeleteWorkspaceImage(DeleteWorkspaceImageRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteWorkspaceImageRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteWorkspaceImageResponseUnmarshaller.Instance;return Invoke<DeleteWorkspaceImageResponse>(request, options);}",
    "output": "public DeleteWorkspaceImageResult deleteWorkspaceImage(DeleteWorkspaceImageRequest request) {request = beforeClientExecution(request);return executeDeleteWorkspaceImage(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public static String toHex(long value) {StringBuilder sb = new StringBuilder(16);writeHex(sb, value, 16, \"\");return sb.toString();}",
    "output": "public static string ToHex(int value){return ToHex((long)value, 8);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public static string ToHex(int value){return ToHex((long)value, 8);}",
    "output": "public static String toHex(long value) {StringBuilder sb = new StringBuilder(16);writeHex(sb, value, 16, \"\");return sb.toString();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public UpdateDistributionResult updateDistribution(UpdateDistributionRequest request) {request = beforeClientExecution(request);return executeUpdateDistribution(request);}",
    "output": "public virtual UpdateDistributionResponse UpdateDistribution(UpdateDistributionRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateDistributionRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateDistributionResponseUnmarshaller.Instance;return Invoke<UpdateDistributionResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual UpdateDistributionResponse UpdateDistribution(UpdateDistributionRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateDistributionRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateDistributionResponseUnmarshaller.Instance;return Invoke<UpdateDistributionResponse>(request, options);}",
    "output": "public UpdateDistributionResult updateDistribution(UpdateDistributionRequest request) {request = beforeClientExecution(request);return executeUpdateDistribution(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public HSSFColor getColor(short index){if (index == HSSFColorPredefined.AUTOMATIC.getIndex()) {return HSSFColorPredefined.AUTOMATIC.getColor();}byte[] b = _palette.getColor(index);return (b == null) ? null : new CustomColor(index, b);}",
    "output": "public HSSFColor GetColor(short index){if (index == HSSFColor.Automatic.Index)return HSSFColor.Automatic.GetInstance();else{byte[] b = palette.GetColor(index);if (b != null){return new CustomColor(index, b);}}return null;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public HSSFColor GetColor(short index){if (index == HSSFColor.Automatic.Index)return HSSFColor.Automatic.GetInstance();else{byte[] b = palette.GetColor(index);if (b != null){return new CustomColor(index, b);}}return null;}",
    "output": "public HSSFColor getColor(short index){if (index == HSSFColorPredefined.AUTOMATIC.getIndex()) {return HSSFColorPredefined.AUTOMATIC.getColor();}byte[] b = _palette.getColor(index);return (b == null) ? null : new CustomColor(index, b);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ValueEval evaluate(ValueEval[] operands, int srcRow, int srcCol) {throw new NotImplementedFunctionException(_functionName);}",
    "output": "public ValueEval Evaluate(ValueEval[] operands, int srcRow, int srcCol){throw new NotImplementedFunctionException(_functionName);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public ValueEval Evaluate(ValueEval[] operands, int srcRow, int srcCol){throw new NotImplementedFunctionException(_functionName);}",
    "output": "public ValueEval evaluate(ValueEval[] operands, int srcRow, int srcCol) {throw new NotImplementedFunctionException(_functionName);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void serialize(LittleEndianOutput out) {out.writeShort((short)field_1_number_crn_records);out.writeShort((short)field_2_sheet_table_index);}",
    "output": "public override void Serialize(ILittleEndianOutput out1){out1.WriteShort((short)field_1_number_crn_records);out1.WriteShort((short)field_2_sheet_table_index);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override void Serialize(ILittleEndianOutput out1){out1.WriteShort((short)field_1_number_crn_records);out1.WriteShort((short)field_2_sheet_table_index);}",
    "output": "public void serialize(LittleEndianOutput out) {out.writeShort((short)field_1_number_crn_records);out.writeShort((short)field_2_sheet_table_index);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DescribeDBEngineVersionsResult describeDBEngineVersions() {return describeDBEngineVersions(new DescribeDBEngineVersionsRequest());}",
    "output": "public virtual DescribeDBEngineVersionsResponse DescribeDBEngineVersions(){return DescribeDBEngineVersions(new DescribeDBEngineVersionsRequest());}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DescribeDBEngineVersionsResponse DescribeDBEngineVersions(){return DescribeDBEngineVersions(new DescribeDBEngineVersionsRequest());}",
    "output": "public DescribeDBEngineVersionsResult describeDBEngineVersions() {return describeDBEngineVersions(new DescribeDBEngineVersionsRequest());}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public FormatRun(short character, short fontIndex) {this._character = character;this._fontIndex = fontIndex;}",
    "output": "public FormatRun(short character, short fontIndex){this._character = character;this._fontIndex = fontIndex;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public FormatRun(short character, short fontIndex){this._character = character;this._fontIndex = fontIndex;}",
    "output": "public FormatRun(short character, short fontIndex) {this._character = character;this._fontIndex = fontIndex;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public static byte[] toBigEndianUtf16Bytes(char[] chars, int offset, int length) {byte[] result = new byte[length * 2];int end = offset + length;int resultIndex = 0;for (int i = offset; i < end; ++i) {char ch = chars[i];result[resultIndex++] = (byte) (ch >> 8);result[resultIndex++] = (byte) ch;}return result;}",
    "output": "public static byte[] toBigEndianUtf16Bytes(char[] chars, int offset, int length){byte[] result = new byte[length * 2];int end = offset + length;int resultIndex = 0;{for (int i = offset; i < end; ++i){char ch = chars[i];result[resultIndex++] = unchecked((byte)(ch >> 8));result[resultIndex++] = unchecked((byte)ch);}}return result;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public static byte[] toBigEndianUtf16Bytes(char[] chars, int offset, int length){byte[] result = new byte[length * 2];int end = offset + length;int resultIndex = 0;{for (int i = offset; i < end; ++i){char ch = chars[i];result[resultIndex++] = unchecked((byte)(ch >> 8));result[resultIndex++] = unchecked((byte)ch);}}return result;}",
    "output": "public static byte[] toBigEndianUtf16Bytes(char[] chars, int offset, int length) {byte[] result = new byte[length * 2];int end = offset + length;int resultIndex = 0;for (int i = offset; i < end; ++i) {char ch = chars[i];result[resultIndex++] = (byte) (ch >> 8);result[resultIndex++] = (byte) ch;}return result;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public UploadArchiveResult uploadArchive(UploadArchiveRequest request) {request = beforeClientExecution(request);return executeUploadArchive(request);}",
    "output": "public virtual UploadArchiveResponse UploadArchive(UploadArchiveRequest request){var options = new InvokeOptions();options.RequestMarshaller = UploadArchiveRequestMarshaller.Instance;options.ResponseUnmarshaller = UploadArchiveResponseUnmarshaller.Instance;return Invoke<UploadArchiveResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual UploadArchiveResponse UploadArchive(UploadArchiveRequest request){var options = new InvokeOptions();options.RequestMarshaller = UploadArchiveRequestMarshaller.Instance;options.ResponseUnmarshaller = UploadArchiveResponseUnmarshaller.Instance;return Invoke<UploadArchiveResponse>(request, options);}",
    "output": "public UploadArchiveResult uploadArchive(UploadArchiveRequest request) {request = beforeClientExecution(request);return executeUploadArchive(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public List<Token> getHiddenTokensToLeft(int tokenIndex) {return getHiddenTokensToLeft(tokenIndex, -1);}",
    "output": "public virtual IList<IToken> GetHiddenTokensToLeft(int tokenIndex){return GetHiddenTokensToLeft(tokenIndex, -1);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual IList<IToken> GetHiddenTokensToLeft(int tokenIndex){return GetHiddenTokensToLeft(tokenIndex, -1);}",
    "output": "public List<Token> getHiddenTokensToLeft(int tokenIndex) {return getHiddenTokensToLeft(tokenIndex, -1);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public boolean equals(Object obj) {if (this == obj)return true;if (!super.equals(obj))return false;if (getClass() != obj.getClass())return false;AutomatonQuery other = (AutomatonQuery) obj;if (!compiled.equals(other.compiled))return false;if (term == null) {if (other.term != null)return false;} else if (!term.equals(other.term))return false;return true;}",
    "output": "public override bool Equals(object obj){if (this == obj){return true;}if (!base.Equals(obj)){return false;}if (this.GetType() != obj.GetType()){return false;}AutomatonQuery other = (AutomatonQuery)obj;if (!m_compiled.Equals(other.m_compiled)){return false;}if (m_term == null){if (other.m_term != null){return false;}}else if (!m_term.Equals(other.m_term)){return false;}return true;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override bool Equals(object obj){if (this == obj){return true;}if (!base.Equals(obj)){return false;}if (this.GetType() != obj.GetType()){return false;}AutomatonQuery other = (AutomatonQuery)obj;if (!m_compiled.Equals(other.m_compiled)){return false;}if (m_term == null){if (other.m_term != null){return false;}}else if (!m_term.Equals(other.m_term)){return false;}return true;}",
    "output": "public boolean equals(Object obj) {if (this == obj)return true;if (!super.equals(obj))return false;if (getClass() != obj.getClass())return false;AutomatonQuery other = (AutomatonQuery) obj;if (!compiled.equals(other.compiled))return false;if (term == null) {if (other.term != null)return false;} else if (!term.equals(other.term))return false;return true;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public SpanQuery makeSpanClause() {SpanQuery [] spanQueries = new SpanQuery[size()];Iterator<SpanQuery> sqi = weightBySpanQuery.keySet().iterator();int i = 0;while (sqi.hasNext()) {SpanQuery sq = sqi.next();float boost = weightBySpanQuery.get(sq);if (boost != 1f) {sq = new SpanBoostQuery(sq, boost);}spanQueries[i++] = sq;}if (spanQueries.length == 1)return spanQueries[0];else return new SpanOrQuery(spanQueries);}",
    "output": "public virtual SpanQuery MakeSpanClause(){List<SpanQuery> spanQueries = new List<SpanQuery>();foreach (var wsq in weightBySpanQuery){wsq.Key.Boost = wsq.Value;spanQueries.Add(wsq.Key);}if (spanQueries.Count == 1)return spanQueries[0];else return new SpanOrQuery(spanQueries.ToArray());}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual SpanQuery MakeSpanClause(){List<SpanQuery> spanQueries = new List<SpanQuery>();foreach (var wsq in weightBySpanQuery){wsq.Key.Boost = wsq.Value;spanQueries.Add(wsq.Key);}if (spanQueries.Count == 1)return spanQueries[0];else return new SpanOrQuery(spanQueries.ToArray());}",
    "output": "public SpanQuery makeSpanClause() {SpanQuery [] spanQueries = new SpanQuery[size()];Iterator<SpanQuery> sqi = weightBySpanQuery.keySet().iterator();int i = 0;while (sqi.hasNext()) {SpanQuery sq = sqi.next();float boost = weightBySpanQuery.get(sq);if (boost != 1f) {sq = new SpanBoostQuery(sq, boost);}spanQueries[i++] = sq;}if (spanQueries.length == 1)return spanQueries[0];else return new SpanOrQuery(spanQueries);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public StashCreateCommand stashCreate() {return new StashCreateCommand(repo);}",
    "output": "public virtual StashCreateCommand StashCreate(){return new StashCreateCommand(repo);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual StashCreateCommand StashCreate(){return new StashCreateCommand(repo);}",
    "output": "public StashCreateCommand stashCreate() {return new StashCreateCommand(repo);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public FieldInfo fieldInfo(String fieldName) {return byName.get(fieldName);}",
    "output": "public FieldInfo FieldInfo(string fieldName){FieldInfo ret;byName.TryGetValue(fieldName, out ret);return ret;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public FieldInfo FieldInfo(string fieldName){FieldInfo ret;byName.TryGetValue(fieldName, out ret);return ret;}",
    "output": "public FieldInfo fieldInfo(String fieldName) {return byName.get(fieldName);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DescribeEventSourceResult describeEventSource(DescribeEventSourceRequest request) {request = beforeClientExecution(request);return executeDescribeEventSource(request);}",
    "output": "public virtual DescribeEventSourceResponse DescribeEventSource(DescribeEventSourceRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeEventSourceRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeEventSourceResponseUnmarshaller.Instance;return Invoke<DescribeEventSourceResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DescribeEventSourceResponse DescribeEventSource(DescribeEventSourceRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeEventSourceRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeEventSourceResponseUnmarshaller.Instance;return Invoke<DescribeEventSourceResponse>(request, options);}",
    "output": "public DescribeEventSourceResult describeEventSource(DescribeEventSourceRequest request) {request = beforeClientExecution(request);return executeDescribeEventSource(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public GetDocumentAnalysisResult getDocumentAnalysis(GetDocumentAnalysisRequest request) {request = beforeClientExecution(request);return executeGetDocumentAnalysis(request);}",
    "output": "public virtual GetDocumentAnalysisResponse GetDocumentAnalysis(GetDocumentAnalysisRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetDocumentAnalysisRequestMarshaller.Instance;options.ResponseUnmarshaller = GetDocumentAnalysisResponseUnmarshaller.Instance;return Invoke<GetDocumentAnalysisResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual GetDocumentAnalysisResponse GetDocumentAnalysis(GetDocumentAnalysisRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetDocumentAnalysisRequestMarshaller.Instance;options.ResponseUnmarshaller = GetDocumentAnalysisResponseUnmarshaller.Instance;return Invoke<GetDocumentAnalysisResponse>(request, options);}",
    "output": "public GetDocumentAnalysisResult getDocumentAnalysis(GetDocumentAnalysisRequest request) {request = beforeClientExecution(request);return executeGetDocumentAnalysis(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public CancelUpdateStackResult cancelUpdateStack(CancelUpdateStackRequest request) {request = beforeClientExecution(request);return executeCancelUpdateStack(request);}",
    "output": "public virtual CancelUpdateStackResponse CancelUpdateStack(CancelUpdateStackRequest request){var options = new InvokeOptions();options.RequestMarshaller = CancelUpdateStackRequestMarshaller.Instance;options.ResponseUnmarshaller = CancelUpdateStackResponseUnmarshaller.Instance;return Invoke<CancelUpdateStackResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual CancelUpdateStackResponse CancelUpdateStack(CancelUpdateStackRequest request){var options = new InvokeOptions();options.RequestMarshaller = CancelUpdateStackRequestMarshaller.Instance;options.ResponseUnmarshaller = CancelUpdateStackResponseUnmarshaller.Instance;return Invoke<CancelUpdateStackResponse>(request, options);}",
    "output": "public CancelUpdateStackResult cancelUpdateStack(CancelUpdateStackRequest request) {request = beforeClientExecution(request);return executeCancelUpdateStack(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ModifyLoadBalancerAttributesResult modifyLoadBalancerAttributes(ModifyLoadBalancerAttributesRequest request) {request = beforeClientExecution(request);return executeModifyLoadBalancerAttributes(request);}",
    "output": "public virtual ModifyLoadBalancerAttributesResponse ModifyLoadBalancerAttributes(ModifyLoadBalancerAttributesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ModifyLoadBalancerAttributesRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifyLoadBalancerAttributesResponseUnmarshaller.Instance;return Invoke<ModifyLoadBalancerAttributesResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual ModifyLoadBalancerAttributesResponse ModifyLoadBalancerAttributes(ModifyLoadBalancerAttributesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ModifyLoadBalancerAttributesRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifyLoadBalancerAttributesResponseUnmarshaller.Instance;return Invoke<ModifyLoadBalancerAttributesResponse>(request, options);}",
    "output": "public ModifyLoadBalancerAttributesResult modifyLoadBalancerAttributes(ModifyLoadBalancerAttributesRequest request) {request = beforeClientExecution(request);return executeModifyLoadBalancerAttributes(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public SetInstanceProtectionResult setInstanceProtection(SetInstanceProtectionRequest request) {request = beforeClientExecution(request);return executeSetInstanceProtection(request);}",
    "output": "public virtual SetInstanceProtectionResponse SetInstanceProtection(SetInstanceProtectionRequest request){var options = new InvokeOptions();options.RequestMarshaller = SetInstanceProtectionRequestMarshaller.Instance;options.ResponseUnmarshaller = SetInstanceProtectionResponseUnmarshaller.Instance;return Invoke<SetInstanceProtectionResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual SetInstanceProtectionResponse SetInstanceProtection(SetInstanceProtectionRequest request){var options = new InvokeOptions();options.RequestMarshaller = SetInstanceProtectionRequestMarshaller.Instance;options.ResponseUnmarshaller = SetInstanceProtectionResponseUnmarshaller.Instance;return Invoke<SetInstanceProtectionResponse>(request, options);}",
    "output": "public SetInstanceProtectionResult setInstanceProtection(SetInstanceProtectionRequest request) {request = beforeClientExecution(request);return executeSetInstanceProtection(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ModifyDBProxyResult modifyDBProxy(ModifyDBProxyRequest request) {request = beforeClientExecution(request);return executeModifyDBProxy(request);}",
    "output": "public virtual ModifyDBProxyResponse ModifyDBProxy(ModifyDBProxyRequest request){var options = new InvokeOptions();options.RequestMarshaller = ModifyDBProxyRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifyDBProxyResponseUnmarshaller.Instance;return Invoke<ModifyDBProxyResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual ModifyDBProxyResponse ModifyDBProxy(ModifyDBProxyRequest request){var options = new InvokeOptions();options.RequestMarshaller = ModifyDBProxyRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifyDBProxyResponseUnmarshaller.Instance;return Invoke<ModifyDBProxyResponse>(request, options);}",
    "output": "public ModifyDBProxyResult modifyDBProxy(ModifyDBProxyRequest request) {request = beforeClientExecution(request);return executeModifyDBProxy(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void add(char[] output, int offset, int len, int endOffset, int posLength) {if (count == outputs.length) {outputs = ArrayUtil.grow(outputs, count+1);}if (count == endOffsets.length) {final int[] next = new int[ArrayUtil.oversize(1+count, Integer.BYTES)];System.arraycopy(endOffsets, 0, next, 0, count);endOffsets = next;}if (count == posLengths.length) {final int[] next = new int[ArrayUtil.oversize(1+count, Integer.BYTES)];System.arraycopy(posLengths, 0, next, 0, count);posLengths = next;}if (outputs[count] == null) {outputs[count] = new CharsRefBuilder();}outputs[count].copyChars(output, offset, len);endOffsets[count] = endOffset;posLengths[count] = posLength;count++;}",
    "output": "public virtual void Add(char[] output, int offset, int len, int endOffset, int posLength){if (count == outputs.Length){CharsRef[] next = new CharsRef[ArrayUtil.Oversize(1 + count, RamUsageEstimator.NUM_BYTES_OBJECT_REF)];Array.Copy(outputs, 0, next, 0, count);outputs = next;}if (count == endOffsets.Length){int[] next = new int[ArrayUtil.Oversize(1 + count, RamUsageEstimator.NUM_BYTES_INT32)];Array.Copy(endOffsets, 0, next, 0, count);endOffsets = next;}if (count == posLengths.Length){int[] next = new int[ArrayUtil.Oversize(1 + count, RamUsageEstimator.NUM_BYTES_INT32)];Array.Copy(posLengths, 0, next, 0, count);posLengths = next;}if (outputs[count] == null){outputs[count] = new CharsRef();}outputs[count].CopyChars(output, offset, len);endOffsets[count] = endOffset;posLengths[count] = posLength;count++;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual void Add(char[] output, int offset, int len, int endOffset, int posLength){if (count == outputs.Length){CharsRef[] next = new CharsRef[ArrayUtil.Oversize(1 + count, RamUsageEstimator.NUM_BYTES_OBJECT_REF)];Array.Copy(outputs, 0, next, 0, count);outputs = next;}if (count == endOffsets.Length){int[] next = new int[ArrayUtil.Oversize(1 + count, RamUsageEstimator.NUM_BYTES_INT32)];Array.Copy(endOffsets, 0, next, 0, count);endOffsets = next;}if (count == posLengths.Length){int[] next = new int[ArrayUtil.Oversize(1 + count, RamUsageEstimator.NUM_BYTES_INT32)];Array.Copy(posLengths, 0, next, 0, count);posLengths = next;}if (outputs[count] == null){outputs[count] = new CharsRef();}outputs[count].CopyChars(output, offset, len);endOffsets[count] = endOffset;posLengths[count] = posLength;count++;}",
    "output": "public void add(char[] output, int offset, int len, int endOffset, int posLength) {if (count == outputs.length) {outputs = ArrayUtil.grow(outputs, count+1);}if (count == endOffsets.length) {final int[] next = new int[ArrayUtil.oversize(1+count, Integer.BYTES)];System.arraycopy(endOffsets, 0, next, 0, count);endOffsets = next;}if (count == posLengths.length) {final int[] next = new int[ArrayUtil.oversize(1+count, Integer.BYTES)];System.arraycopy(posLengths, 0, next, 0, count);posLengths = next;}if (outputs[count] == null) {outputs[count] = new CharsRefBuilder();}outputs[count].copyChars(output, offset, len);endOffsets[count] = endOffset;posLengths[count] = posLength;count++;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public FetchLibrariesRequest() {super(\"CloudPhoto\", \"2017-07-11\", \"FetchLibraries\", \"cloudphoto\");setProtocol(ProtocolType.HTTPS);}",
    "output": "public FetchLibrariesRequest(): base(\"CloudPhoto\", \"2017-07-11\", \"FetchLibraries\", \"cloudphoto\", \"openAPI\"){Protocol = ProtocolType.HTTPS;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public FetchLibrariesRequest(): base(\"CloudPhoto\", \"2017-07-11\", \"FetchLibraries\", \"cloudphoto\", \"openAPI\"){Protocol = ProtocolType.HTTPS;}",
    "output": "public FetchLibrariesRequest() {super(\"CloudPhoto\", \"2017-07-11\", \"FetchLibraries\", \"cloudphoto\");setProtocol(ProtocolType.HTTPS);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public boolean exists() {return fs.exists(objects);}",
    "output": "public override bool Exists(){return objects.Exists();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override bool Exists(){return objects.Exists();}",
    "output": "public boolean exists() {return fs.exists(objects);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public FilterOutputStream(OutputStream out) {this.out = out;}",
    "output": "public FilterOutputStream(java.io.OutputStream @out){this.@out = @out;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public FilterOutputStream(java.io.OutputStream @out){this.@out = @out;}",
    "output": "public FilterOutputStream(OutputStream out) {this.out = out;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ScaleClusterRequest() {super(\"CS\", \"2015-12-15\", \"ScaleCluster\", \"csk\");setUriPattern(\"/clusters/[ClusterId]\");setMethod(MethodType.PUT);}",
    "output": "public ScaleClusterRequest(): base(\"CS\", \"2015-12-15\", \"ScaleCluster\", \"cs\", \"openAPI\"){UriPattern = \"/clusters/[ClusterId]\";Method = MethodType.PUT;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public ScaleClusterRequest(): base(\"CS\", \"2015-12-15\", \"ScaleCluster\", \"cs\", \"openAPI\"){UriPattern = \"/clusters/[ClusterId]\";Method = MethodType.PUT;}",
    "output": "public ScaleClusterRequest() {super(\"CS\", \"2015-12-15\", \"ScaleCluster\", \"csk\");setUriPattern(\"/clusters/[ClusterId]\");setMethod(MethodType.PUT);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DataValidationConstraint createTimeConstraint(int operatorType, String formula1, String formula2) {return DVConstraint.createTimeConstraint(operatorType, formula1, formula2);}",
    "output": "public IDataValidationConstraint CreateTimeConstraint(int operatorType, String formula1, String formula2){return DVConstraint.CreateTimeConstraint(operatorType, formula1, formula2);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public IDataValidationConstraint CreateTimeConstraint(int operatorType, String formula1, String formula2){return DVConstraint.CreateTimeConstraint(operatorType, formula1, formula2);}",
    "output": "public DataValidationConstraint createTimeConstraint(int operatorType, String formula1, String formula2) {return DVConstraint.createTimeConstraint(operatorType, formula1, formula2);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ListObjectParentPathsResult listObjectParentPaths(ListObjectParentPathsRequest request) {request = beforeClientExecution(request);return executeListObjectParentPaths(request);}",
    "output": "public virtual ListObjectParentPathsResponse ListObjectParentPaths(ListObjectParentPathsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListObjectParentPathsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListObjectParentPathsResponseUnmarshaller.Instance;return Invoke<ListObjectParentPathsResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual ListObjectParentPathsResponse ListObjectParentPaths(ListObjectParentPathsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListObjectParentPathsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListObjectParentPathsResponseUnmarshaller.Instance;return Invoke<ListObjectParentPathsResponse>(request, options);}",
    "output": "public ListObjectParentPathsResult listObjectParentPaths(ListObjectParentPathsRequest request) {request = beforeClientExecution(request);return executeListObjectParentPaths(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DescribeCacheSubnetGroupsResult describeCacheSubnetGroups(DescribeCacheSubnetGroupsRequest request) {request = beforeClientExecution(request);return executeDescribeCacheSubnetGroups(request);}",
    "output": "public virtual DescribeCacheSubnetGroupsResponse DescribeCacheSubnetGroups(DescribeCacheSubnetGroupsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeCacheSubnetGroupsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeCacheSubnetGroupsResponseUnmarshaller.Instance;return Invoke<DescribeCacheSubnetGroupsResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DescribeCacheSubnetGroupsResponse DescribeCacheSubnetGroups(DescribeCacheSubnetGroupsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeCacheSubnetGroupsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeCacheSubnetGroupsResponseUnmarshaller.Instance;return Invoke<DescribeCacheSubnetGroupsResponse>(request, options);}",
    "output": "public DescribeCacheSubnetGroupsResult describeCacheSubnetGroups(DescribeCacheSubnetGroupsRequest request) {request = beforeClientExecution(request);return executeDescribeCacheSubnetGroups(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void setSharedFormula(boolean flag) {field_5_options =sharedFormula.setShortBoolean(field_5_options, flag);}",
    "output": "public void SetSharedFormula(bool flag){field_5_options =sharedFormula.SetShortBoolean(field_5_options, flag);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public void SetSharedFormula(bool flag){field_5_options =sharedFormula.SetShortBoolean(field_5_options, flag);}",
    "output": "public void setSharedFormula(boolean flag) {field_5_options =sharedFormula.setShortBoolean(field_5_options, flag);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public boolean isReuseObjects() {return reuseObjects;}",
    "output": "public virtual bool IsReuseObjects(){return reuseObjects;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual bool IsReuseObjects(){return reuseObjects;}",
    "output": "public boolean isReuseObjects() {return reuseObjects;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ErrorNode addErrorNode(Token badToken) {ErrorNodeImpl t = new ErrorNodeImpl(badToken);addAnyChild(t);t.setParent(this);return t;}",
    "output": "public virtual IErrorNode AddErrorNode(IToken badToken){ErrorNodeImpl t = new ErrorNodeImpl(badToken);AddChild(t);t.Parent = this;return t;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual IErrorNode AddErrorNode(IToken badToken){ErrorNodeImpl t = new ErrorNodeImpl(badToken);AddChild(t);t.Parent = this;return t;}",
    "output": "public ErrorNode addErrorNode(Token badToken) {ErrorNodeImpl t = new ErrorNodeImpl(badToken);addAnyChild(t);t.setParent(this);return t;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public LatvianStemFilterFactory(Map<String,String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException(\"Unknown parameters: \" + args);}}",
    "output": "public LatvianStemFilterFactory(IDictionary<string, string> args): base(args){if (args.Count > 0){throw new System.ArgumentException(\"Unknown parameters: \" + args);}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public LatvianStemFilterFactory(IDictionary<string, string> args): base(args){if (args.Count > 0){throw new System.ArgumentException(\"Unknown parameters: \" + args);}}",
    "output": "public LatvianStemFilterFactory(Map<String,String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException(\"Unknown parameters: \" + args);}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public EventSubscription removeSourceIdentifierFromSubscription(RemoveSourceIdentifierFromSubscriptionRequest request) {request = beforeClientExecution(request);return executeRemoveSourceIdentifierFromSubscription(request);}",
    "output": "public virtual RemoveSourceIdentifierFromSubscriptionResponse RemoveSourceIdentifierFromSubscription(RemoveSourceIdentifierFromSubscriptionRequest request){var options = new InvokeOptions();options.RequestMarshaller = RemoveSourceIdentifierFromSubscriptionRequestMarshaller.Instance;options.ResponseUnmarshaller = RemoveSourceIdentifierFromSubscriptionResponseUnmarshaller.Instance;return Invoke<RemoveSourceIdentifierFromSubscriptionResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual RemoveSourceIdentifierFromSubscriptionResponse RemoveSourceIdentifierFromSubscription(RemoveSourceIdentifierFromSubscriptionRequest request){var options = new InvokeOptions();options.RequestMarshaller = RemoveSourceIdentifierFromSubscriptionRequestMarshaller.Instance;options.ResponseUnmarshaller = RemoveSourceIdentifierFromSubscriptionResponseUnmarshaller.Instance;return Invoke<RemoveSourceIdentifierFromSubscriptionResponse>(request, options);}",
    "output": "public EventSubscription removeSourceIdentifierFromSubscription(RemoveSourceIdentifierFromSubscriptionRequest request) {request = beforeClientExecution(request);return executeRemoveSourceIdentifierFromSubscription(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public static TokenFilterFactory forName(String name, Map<String,String> args) {return loader.newInstance(name, args);}",
    "output": "public static TokenFilterFactory ForName(string name, IDictionary<string, string> args){return loader.NewInstance(name, args);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public static TokenFilterFactory ForName(string name, IDictionary<string, string> args){return loader.NewInstance(name, args);}",
    "output": "public static TokenFilterFactory forName(String name, Map<String,String> args) {return loader.newInstance(name, args);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public AddAlbumPhotosRequest() {super(\"CloudPhoto\", \"2017-07-11\", \"AddAlbumPhotos\", \"cloudphoto\");setProtocol(ProtocolType.HTTPS);}",
    "output": "public AddAlbumPhotosRequest(): base(\"CloudPhoto\", \"2017-07-11\", \"AddAlbumPhotos\", \"cloudphoto\", \"openAPI\"){Protocol = ProtocolType.HTTPS;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public AddAlbumPhotosRequest(): base(\"CloudPhoto\", \"2017-07-11\", \"AddAlbumPhotos\", \"cloudphoto\", \"openAPI\"){Protocol = ProtocolType.HTTPS;}",
    "output": "public AddAlbumPhotosRequest() {super(\"CloudPhoto\", \"2017-07-11\", \"AddAlbumPhotos\", \"cloudphoto\");setProtocol(ProtocolType.HTTPS);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public GetThreatIntelSetResult getThreatIntelSet(GetThreatIntelSetRequest request) {request = beforeClientExecution(request);return executeGetThreatIntelSet(request);}",
    "output": "public virtual GetThreatIntelSetResponse GetThreatIntelSet(GetThreatIntelSetRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetThreatIntelSetRequestMarshaller.Instance;options.ResponseUnmarshaller = GetThreatIntelSetResponseUnmarshaller.Instance;return Invoke<GetThreatIntelSetResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual GetThreatIntelSetResponse GetThreatIntelSet(GetThreatIntelSetRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetThreatIntelSetRequestMarshaller.Instance;options.ResponseUnmarshaller = GetThreatIntelSetResponseUnmarshaller.Instance;return Invoke<GetThreatIntelSetResponse>(request, options);}",
    "output": "public GetThreatIntelSetResult getThreatIntelSet(GetThreatIntelSetRequest request) {request = beforeClientExecution(request);return executeGetThreatIntelSet(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public RevFilter clone() {return new Binary(a.clone(), b.clone());}",
    "output": "public override TreeFilter Clone(){return new AndTreeFilter.Binary(a.Clone(), b.Clone());}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override TreeFilter Clone(){return new AndTreeFilter.Binary(a.Clone(), b.Clone());}",
    "output": "public RevFilter clone() {return new Binary(a.clone(), b.clone());}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public boolean equals( Object o ) {return o instanceof ArmenianStemmer;}",
    "output": "public override bool Equals(object o){return o is ArmenianStemmer;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override bool Equals(object o){return o is ArmenianStemmer;}",
    "output": "public boolean equals( Object o ) {return o instanceof ArmenianStemmer;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public final boolean hasArray() {return protectedHasArray();}",
    "output": "public sealed override bool hasArray(){return protectedHasArray();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public sealed override bool hasArray(){return protectedHasArray();}",
    "output": "public final boolean hasArray() {return protectedHasArray();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public UpdateContributorInsightsResult updateContributorInsights(UpdateContributorInsightsRequest request) {request = beforeClientExecution(request);return executeUpdateContributorInsights(request);}",
    "output": "public virtual UpdateContributorInsightsResponse UpdateContributorInsights(UpdateContributorInsightsRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateContributorInsightsRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateContributorInsightsResponseUnmarshaller.Instance;return Invoke<UpdateContributorInsightsResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual UpdateContributorInsightsResponse UpdateContributorInsights(UpdateContributorInsightsRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateContributorInsightsRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateContributorInsightsResponseUnmarshaller.Instance;return Invoke<UpdateContributorInsightsResponse>(request, options);}",
    "output": "public UpdateContributorInsightsResult updateContributorInsights(UpdateContributorInsightsRequest request) {request = beforeClientExecution(request);return executeUpdateContributorInsights(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void unwriteProtectWorkbook() {records.remove(fileShare);records.remove(writeProtect);fileShare = null;writeProtect = null;}",
    "output": "public void UnwriteProtectWorkbook(){records.Remove(fileShare);records.Remove(WriteProtect);fileShare = null;writeProtect = null;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public void UnwriteProtectWorkbook(){records.Remove(fileShare);records.Remove(WriteProtect);fileShare = null;writeProtect = null;}",
    "output": "public void unwriteProtectWorkbook() {records.remove(fileShare);records.remove(writeProtect);fileShare = null;writeProtect = null;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public SolrSynonymParser(boolean dedup, boolean expand, Analyzer analyzer) {super(dedup, analyzer);this.expand = expand;}",
    "output": "public SolrSynonymParser(bool dedup, bool expand, Analyzer analyzer): base(dedup, analyzer){this.expand = expand;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public SolrSynonymParser(bool dedup, bool expand, Analyzer analyzer): base(dedup, analyzer){this.expand = expand;}",
    "output": "public SolrSynonymParser(boolean dedup, boolean expand, Analyzer analyzer) {super(dedup, analyzer);this.expand = expand;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public RequestSpotInstancesResult requestSpotInstances(RequestSpotInstancesRequest request) {request = beforeClientExecution(request);return executeRequestSpotInstances(request);}",
    "output": "public virtual RequestSpotInstancesResponse RequestSpotInstances(RequestSpotInstancesRequest request){var options = new InvokeOptions();options.RequestMarshaller = RequestSpotInstancesRequestMarshaller.Instance;options.ResponseUnmarshaller = RequestSpotInstancesResponseUnmarshaller.Instance;return Invoke<RequestSpotInstancesResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual RequestSpotInstancesResponse RequestSpotInstances(RequestSpotInstancesRequest request){var options = new InvokeOptions();options.RequestMarshaller = RequestSpotInstancesRequestMarshaller.Instance;options.ResponseUnmarshaller = RequestSpotInstancesResponseUnmarshaller.Instance;return Invoke<RequestSpotInstancesResponse>(request, options);}",
    "output": "public RequestSpotInstancesResult requestSpotInstances(RequestSpotInstancesRequest request) {request = beforeClientExecution(request);return executeRequestSpotInstances(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public byte[] getObjectData() {return findObjectRecord().getObjectData();}",
    "output": "public byte[] GetObjectData(){return FindObjectRecord().ObjectData;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public byte[] GetObjectData(){return FindObjectRecord().ObjectData;}",
    "output": "public byte[] getObjectData() {return findObjectRecord().getObjectData();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public GetContactAttributesResult getContactAttributes(GetContactAttributesRequest request) {request = beforeClientExecution(request);return executeGetContactAttributes(request);}",
    "output": "public virtual GetContactAttributesResponse GetContactAttributes(GetContactAttributesRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetContactAttributesRequestMarshaller.Instance;options.ResponseUnmarshaller = GetContactAttributesResponseUnmarshaller.Instance;return Invoke<GetContactAttributesResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual GetContactAttributesResponse GetContactAttributes(GetContactAttributesRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetContactAttributesRequestMarshaller.Instance;options.ResponseUnmarshaller = GetContactAttributesResponseUnmarshaller.Instance;return Invoke<GetContactAttributesResponse>(request, options);}",
    "output": "public GetContactAttributesResult getContactAttributes(GetContactAttributesRequest request) {request = beforeClientExecution(request);return executeGetContactAttributes(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String toString() {return getKey() + \": \" + getValue(); }",
    "output": "public override string ToString(){return GetKey() + \": \" + GetValue();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override string ToString(){return GetKey() + \": \" + GetValue();}",
    "output": "public String toString() {return getKey() + \": \" + getValue(); }"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ListTextTranslationJobsResult listTextTranslationJobs(ListTextTranslationJobsRequest request) {request = beforeClientExecution(request);return executeListTextTranslationJobs(request);}",
    "output": "public virtual ListTextTranslationJobsResponse ListTextTranslationJobs(ListTextTranslationJobsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListTextTranslationJobsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListTextTranslationJobsResponseUnmarshaller.Instance;return Invoke<ListTextTranslationJobsResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual ListTextTranslationJobsResponse ListTextTranslationJobs(ListTextTranslationJobsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListTextTranslationJobsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListTextTranslationJobsResponseUnmarshaller.Instance;return Invoke<ListTextTranslationJobsResponse>(request, options);}",
    "output": "public ListTextTranslationJobsResult listTextTranslationJobs(ListTextTranslationJobsRequest request) {request = beforeClientExecution(request);return executeListTextTranslationJobs(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public GetContactMethodsResult getContactMethods(GetContactMethodsRequest request) {request = beforeClientExecution(request);return executeGetContactMethods(request);}",
    "output": "public virtual GetContactMethodsResponse GetContactMethods(GetContactMethodsRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetContactMethodsRequestMarshaller.Instance;options.ResponseUnmarshaller = GetContactMethodsResponseUnmarshaller.Instance;return Invoke<GetContactMethodsResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual GetContactMethodsResponse GetContactMethods(GetContactMethodsRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetContactMethodsRequestMarshaller.Instance;options.ResponseUnmarshaller = GetContactMethodsResponseUnmarshaller.Instance;return Invoke<GetContactMethodsResponse>(request, options);}",
    "output": "public GetContactMethodsResult getContactMethods(GetContactMethodsRequest request) {request = beforeClientExecution(request);return executeGetContactMethods(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public static short lookupIndexByName(String name) {FunctionMetadata fd = getInstance().getFunctionByNameInternal(name);if (fd == null) {fd = getInstanceCetab().getFunctionByNameInternal(name);if (fd == null) {return -1;}}return (short) fd.getIndex();}",
    "output": "public static short LookupIndexByName(String name){FunctionMetadata fd = GetInstance().GetFunctionByNameInternal(name);if (fd == null){return -1;}return (short)fd.Index;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public static short LookupIndexByName(String name){FunctionMetadata fd = GetInstance().GetFunctionByNameInternal(name);if (fd == null){return -1;}return (short)fd.Index;}",
    "output": "public static short lookupIndexByName(String name) {FunctionMetadata fd = getInstance().getFunctionByNameInternal(name);if (fd == null) {fd = getInstanceCetab().getFunctionByNameInternal(name);if (fd == null) {return -1;}}return (short) fd.getIndex();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DescribeAnomalyDetectorsResult describeAnomalyDetectors(DescribeAnomalyDetectorsRequest request) {request = beforeClientExecution(request);return executeDescribeAnomalyDetectors(request);}",
    "output": "public virtual DescribeAnomalyDetectorsResponse DescribeAnomalyDetectors(DescribeAnomalyDetectorsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeAnomalyDetectorsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeAnomalyDetectorsResponseUnmarshaller.Instance;return Invoke<DescribeAnomalyDetectorsResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DescribeAnomalyDetectorsResponse DescribeAnomalyDetectors(DescribeAnomalyDetectorsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeAnomalyDetectorsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeAnomalyDetectorsResponseUnmarshaller.Instance;return Invoke<DescribeAnomalyDetectorsResponse>(request, options);}",
    "output": "public DescribeAnomalyDetectorsResult describeAnomalyDetectors(DescribeAnomalyDetectorsRequest request) {request = beforeClientExecution(request);return executeDescribeAnomalyDetectors(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public static String insertId(String message, ObjectId changeId) {return insertId(message, changeId, false);}",
    "output": "public static string InsertId(string message, ObjectId changeId){return InsertId(message, changeId, false);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public static string InsertId(string message, ObjectId changeId){return InsertId(message, changeId, false);}",
    "output": "public static String insertId(String message, ObjectId changeId) {return insertId(message, changeId, false);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public long getObjectSize(AnyObjectId objectId, int typeHint)throws MissingObjectException, IncorrectObjectTypeException,IOException {long sz = db.getObjectSize(this, objectId);if (sz < 0) {if (typeHint == OBJ_ANY)throw new MissingObjectException(objectId.copy(),JGitText.get().unknownObjectType2);throw new MissingObjectException(objectId.copy(), typeHint);}return sz;}",
    "output": "public override long GetObjectSize(AnyObjectId objectId, int typeHint){long sz = db.GetObjectSize(this, objectId);if (sz < 0){if (typeHint == OBJ_ANY){throw new MissingObjectException(objectId.Copy(), \"unknown\");}throw new MissingObjectException(objectId.Copy(), typeHint);}return sz;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override long GetObjectSize(AnyObjectId objectId, int typeHint){long sz = db.GetObjectSize(this, objectId);if (sz < 0){if (typeHint == OBJ_ANY){throw new MissingObjectException(objectId.Copy(), \"unknown\");}throw new MissingObjectException(objectId.Copy(), typeHint);}return sz;}",
    "output": "public long getObjectSize(AnyObjectId objectId, int typeHint)throws MissingObjectException, IncorrectObjectTypeException,IOException {long sz = db.getObjectSize(this, objectId);if (sz < 0) {if (typeHint == OBJ_ANY)throw new MissingObjectException(objectId.copy(),JGitText.get().unknownObjectType2);throw new MissingObjectException(objectId.copy(), typeHint);}return sz;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ImportInstallationMediaResult importInstallationMedia(ImportInstallationMediaRequest request) {request = beforeClientExecution(request);return executeImportInstallationMedia(request);}",
    "output": "public virtual ImportInstallationMediaResponse ImportInstallationMedia(ImportInstallationMediaRequest request){var options = new InvokeOptions();options.RequestMarshaller = ImportInstallationMediaRequestMarshaller.Instance;options.ResponseUnmarshaller = ImportInstallationMediaResponseUnmarshaller.Instance;return Invoke<ImportInstallationMediaResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual ImportInstallationMediaResponse ImportInstallationMedia(ImportInstallationMediaRequest request){var options = new InvokeOptions();options.RequestMarshaller = ImportInstallationMediaRequestMarshaller.Instance;options.ResponseUnmarshaller = ImportInstallationMediaResponseUnmarshaller.Instance;return Invoke<ImportInstallationMediaResponse>(request, options);}",
    "output": "public ImportInstallationMediaResult importInstallationMedia(ImportInstallationMediaRequest request) {request = beforeClientExecution(request);return executeImportInstallationMedia(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public PutLifecycleEventHookExecutionStatusResult putLifecycleEventHookExecutionStatus(PutLifecycleEventHookExecutionStatusRequest request) {request = beforeClientExecution(request);return executePutLifecycleEventHookExecutionStatus(request);}",
    "output": "public virtual PutLifecycleEventHookExecutionStatusResponse PutLifecycleEventHookExecutionStatus(PutLifecycleEventHookExecutionStatusRequest request){var options = new InvokeOptions();options.RequestMarshaller = PutLifecycleEventHookExecutionStatusRequestMarshaller.Instance;options.ResponseUnmarshaller = PutLifecycleEventHookExecutionStatusResponseUnmarshaller.Instance;return Invoke<PutLifecycleEventHookExecutionStatusResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual PutLifecycleEventHookExecutionStatusResponse PutLifecycleEventHookExecutionStatus(PutLifecycleEventHookExecutionStatusRequest request){var options = new InvokeOptions();options.RequestMarshaller = PutLifecycleEventHookExecutionStatusRequestMarshaller.Instance;options.ResponseUnmarshaller = PutLifecycleEventHookExecutionStatusResponseUnmarshaller.Instance;return Invoke<PutLifecycleEventHookExecutionStatusResponse>(request, options);}",
    "output": "public PutLifecycleEventHookExecutionStatusResult putLifecycleEventHookExecutionStatus(PutLifecycleEventHookExecutionStatusRequest request) {request = beforeClientExecution(request);return executePutLifecycleEventHookExecutionStatus(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public NumberPtg(LittleEndianInput in)  {this(in.readDouble());}",
    "output": "public NumberPtg(ILittleEndianInput in1){field_1_value = in1.ReadDouble();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public NumberPtg(ILittleEndianInput in1){field_1_value = in1.ReadDouble();}",
    "output": "public NumberPtg(LittleEndianInput in)  {this(in.readDouble());}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public GetFieldLevelEncryptionConfigResult getFieldLevelEncryptionConfig(GetFieldLevelEncryptionConfigRequest request) {request = beforeClientExecution(request);return executeGetFieldLevelEncryptionConfig(request);}",
    "output": "public virtual GetFieldLevelEncryptionConfigResponse GetFieldLevelEncryptionConfig(GetFieldLevelEncryptionConfigRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetFieldLevelEncryptionConfigRequestMarshaller.Instance;options.ResponseUnmarshaller = GetFieldLevelEncryptionConfigResponseUnmarshaller.Instance;return Invoke<GetFieldLevelEncryptionConfigResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual GetFieldLevelEncryptionConfigResponse GetFieldLevelEncryptionConfig(GetFieldLevelEncryptionConfigRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetFieldLevelEncryptionConfigRequestMarshaller.Instance;options.ResponseUnmarshaller = GetFieldLevelEncryptionConfigResponseUnmarshaller.Instance;return Invoke<GetFieldLevelEncryptionConfigResponse>(request, options);}",
    "output": "public GetFieldLevelEncryptionConfigResult getFieldLevelEncryptionConfig(GetFieldLevelEncryptionConfigRequest request) {request = beforeClientExecution(request);return executeGetFieldLevelEncryptionConfig(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DescribeDetectorResult describeDetector(DescribeDetectorRequest request) {request = beforeClientExecution(request);return executeDescribeDetector(request);}",
    "output": "public virtual DescribeDetectorResponse DescribeDetector(DescribeDetectorRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDetectorRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDetectorResponseUnmarshaller.Instance;return Invoke<DescribeDetectorResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DescribeDetectorResponse DescribeDetector(DescribeDetectorRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDetectorRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDetectorResponseUnmarshaller.Instance;return Invoke<DescribeDetectorResponse>(request, options);}",
    "output": "public DescribeDetectorResult describeDetector(DescribeDetectorRequest request) {request = beforeClientExecution(request);return executeDescribeDetector(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ReportInstanceStatusResult reportInstanceStatus(ReportInstanceStatusRequest request) {request = beforeClientExecution(request);return executeReportInstanceStatus(request);}",
    "output": "public virtual ReportInstanceStatusResponse ReportInstanceStatus(ReportInstanceStatusRequest request){var options = new InvokeOptions();options.RequestMarshaller = ReportInstanceStatusRequestMarshaller.Instance;options.ResponseUnmarshaller = ReportInstanceStatusResponseUnmarshaller.Instance;return Invoke<ReportInstanceStatusResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual ReportInstanceStatusResponse ReportInstanceStatus(ReportInstanceStatusRequest request){var options = new InvokeOptions();options.RequestMarshaller = ReportInstanceStatusRequestMarshaller.Instance;options.ResponseUnmarshaller = ReportInstanceStatusResponseUnmarshaller.Instance;return Invoke<ReportInstanceStatusResponse>(request, options);}",
    "output": "public ReportInstanceStatusResult reportInstanceStatus(ReportInstanceStatusRequest request) {request = beforeClientExecution(request);return executeReportInstanceStatus(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DeleteAlarmResult deleteAlarm(DeleteAlarmRequest request) {request = beforeClientExecution(request);return executeDeleteAlarm(request);}",
    "output": "public virtual DeleteAlarmResponse DeleteAlarm(DeleteAlarmRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteAlarmRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteAlarmResponseUnmarshaller.Instance;return Invoke<DeleteAlarmResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DeleteAlarmResponse DeleteAlarm(DeleteAlarmRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteAlarmRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteAlarmResponseUnmarshaller.Instance;return Invoke<DeleteAlarmResponse>(request, options);}",
    "output": "public DeleteAlarmResult deleteAlarm(DeleteAlarmRequest request) {request = beforeClientExecution(request);return executeDeleteAlarm(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public TokenStream create(TokenStream input) {return new PortugueseStemFilter(input);}",
    "output": "public override TokenStream Create(TokenStream input){return new PortugueseStemFilter(input);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override TokenStream Create(TokenStream input){return new PortugueseStemFilter(input);}",
    "output": "public TokenStream create(TokenStream input) {return new PortugueseStemFilter(input);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public FtCblsSubRecord() {reserved = new byte[ENCODED_SIZE];}",
    "output": "public FtCblsSubRecord(){reserved = new byte[ENCODED_SIZE];}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public FtCblsSubRecord(){reserved = new byte[ENCODED_SIZE];}",
    "output": "public FtCblsSubRecord() {reserved = new byte[ENCODED_SIZE];}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "@Override public boolean remove(Object object) {synchronized (mutex) {return c.remove(object);}}",
    "output": "public virtual bool remove(object @object){lock (mutex){return c.remove(@object);}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual bool remove(object @object){lock (mutex){return c.remove(@object);}}",
    "output": "@Override public boolean remove(Object object) {synchronized (mutex) {return c.remove(object);}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public GetDedicatedIpResult getDedicatedIp(GetDedicatedIpRequest request) {request = beforeClientExecution(request);return executeGetDedicatedIp(request);}",
    "output": "public virtual GetDedicatedIpResponse GetDedicatedIp(GetDedicatedIpRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetDedicatedIpRequestMarshaller.Instance;options.ResponseUnmarshaller = GetDedicatedIpResponseUnmarshaller.Instance;return Invoke<GetDedicatedIpResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual GetDedicatedIpResponse GetDedicatedIp(GetDedicatedIpRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetDedicatedIpRequestMarshaller.Instance;options.ResponseUnmarshaller = GetDedicatedIpResponseUnmarshaller.Instance;return Invoke<GetDedicatedIpResponse>(request, options);}",
    "output": "public GetDedicatedIpResult getDedicatedIp(GetDedicatedIpRequest request) {request = beforeClientExecution(request);return executeGetDedicatedIp(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String toString() {return precedence + \" >= _p\";}",
    "output": "public override string ToString(){return precedence + \" >= _p\";}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override string ToString(){return precedence + \" >= _p\";}",
    "output": "public String toString() {return precedence + \" >= _p\";}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ListStreamProcessorsResult listStreamProcessors(ListStreamProcessorsRequest request) {request = beforeClientExecution(request);return executeListStreamProcessors(request);}",
    "output": "public virtual ListStreamProcessorsResponse ListStreamProcessors(ListStreamProcessorsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListStreamProcessorsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListStreamProcessorsResponseUnmarshaller.Instance;return Invoke<ListStreamProcessorsResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual ListStreamProcessorsResponse ListStreamProcessors(ListStreamProcessorsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListStreamProcessorsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListStreamProcessorsResponseUnmarshaller.Instance;return Invoke<ListStreamProcessorsResponse>(request, options);}",
    "output": "public ListStreamProcessorsResult listStreamProcessors(ListStreamProcessorsRequest request) {request = beforeClientExecution(request);return executeListStreamProcessors(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DeleteLoadBalancerPolicyRequest(String loadBalancerName, String policyName) {setLoadBalancerName(loadBalancerName);setPolicyName(policyName);}",
    "output": "public DeleteLoadBalancerPolicyRequest(string loadBalancerName, string policyName){_loadBalancerName = loadBalancerName;_policyName = policyName;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public DeleteLoadBalancerPolicyRequest(string loadBalancerName, string policyName){_loadBalancerName = loadBalancerName;_policyName = policyName;}",
    "output": "public DeleteLoadBalancerPolicyRequest(String loadBalancerName, String policyName) {setLoadBalancerName(loadBalancerName);setPolicyName(policyName);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public WindowProtectRecord(int options) {_options = options;}",
    "output": "public WindowProtectRecord(int options){_options = options;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public WindowProtectRecord(int options){_options = options;}",
    "output": "public WindowProtectRecord(int options) {_options = options;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public UnbufferedCharStream(int bufferSize) {n = 0;data = new int[bufferSize];}",
    "output": "public UnbufferedCharStream(int bufferSize){n = 0;data = new int[bufferSize];}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public UnbufferedCharStream(int bufferSize){n = 0;data = new int[bufferSize];}",
    "output": "public UnbufferedCharStream(int bufferSize) {n = 0;data = new int[bufferSize];}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public GetOperationsResult getOperations(GetOperationsRequest request) {request = beforeClientExecution(request);return executeGetOperations(request);}",
    "output": "public virtual GetOperationsResponse GetOperations(GetOperationsRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetOperationsRequestMarshaller.Instance;options.ResponseUnmarshaller = GetOperationsResponseUnmarshaller.Instance;return Invoke<GetOperationsResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual GetOperationsResponse GetOperations(GetOperationsRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetOperationsRequestMarshaller.Instance;options.ResponseUnmarshaller = GetOperationsResponseUnmarshaller.Instance;return Invoke<GetOperationsResponse>(request, options);}",
    "output": "public GetOperationsResult getOperations(GetOperationsRequest request) {request = beforeClientExecution(request);return executeGetOperations(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void copyRawTo(byte[] b, int o) {NB.encodeInt32(b, o, w1);NB.encodeInt32(b, o + 4, w2);NB.encodeInt32(b, o + 8, w3);NB.encodeInt32(b, o + 12, w4);NB.encodeInt32(b, o + 16, w5);}",
    "output": "public virtual void CopyRawTo(byte[] b, int o){NB.EncodeInt32(b, o, w1);NB.EncodeInt32(b, o + 4, w2);NB.EncodeInt32(b, o + 8, w3);NB.EncodeInt32(b, o + 12, w4);NB.EncodeInt32(b, o + 16, w5);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual void CopyRawTo(byte[] b, int o){NB.EncodeInt32(b, o, w1);NB.EncodeInt32(b, o + 4, w2);NB.EncodeInt32(b, o + 8, w3);NB.EncodeInt32(b, o + 12, w4);NB.EncodeInt32(b, o + 16, w5);}",
    "output": "public void copyRawTo(byte[] b, int o) {NB.encodeInt32(b, o, w1);NB.encodeInt32(b, o + 4, w2);NB.encodeInt32(b, o + 8, w3);NB.encodeInt32(b, o + 12, w4);NB.encodeInt32(b, o + 16, w5);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public WindowOneRecord(RecordInputStream in) {field_1_h_hold            = in.readShort();field_2_v_hold            = in.readShort();field_3_width             = in.readShort();field_4_height            = in.readShort();field_5_options           = in.readShort();field_6_active_sheet      = in.readShort();field_7_first_visible_tab = in.readShort();field_8_num_selected_tabs = in.readShort();field_9_tab_width_ratio   = in.readShort();}",
    "output": "public WindowOneRecord(RecordInputStream in1){field_1_h_hold = in1.ReadShort();field_2_v_hold = in1.ReadShort();field_3_width = in1.ReadShort();field_4_height = in1.ReadShort();field_5_options = in1.ReadShort();field_6_active_sheet = in1.ReadShort();field_7_first_visible_tab = in1.ReadShort();field_8_num_selected_tabs = in1.ReadShort();field_9_tab_width_ratio = in1.ReadShort();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public WindowOneRecord(RecordInputStream in1){field_1_h_hold = in1.ReadShort();field_2_v_hold = in1.ReadShort();field_3_width = in1.ReadShort();field_4_height = in1.ReadShort();field_5_options = in1.ReadShort();field_6_active_sheet = in1.ReadShort();field_7_first_visible_tab = in1.ReadShort();field_8_num_selected_tabs = in1.ReadShort();field_9_tab_width_ratio = in1.ReadShort();}",
    "output": "public WindowOneRecord(RecordInputStream in) {field_1_h_hold            = in.readShort();field_2_v_hold            = in.readShort();field_3_width             = in.readShort();field_4_height            = in.readShort();field_5_options           = in.readShort();field_6_active_sheet      = in.readShort();field_7_first_visible_tab = in.readShort();field_8_num_selected_tabs = in.readShort();field_9_tab_width_ratio   = in.readShort();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public StopWorkspacesResult stopWorkspaces(StopWorkspacesRequest request) {request = beforeClientExecution(request);return executeStopWorkspaces(request);}",
    "output": "public virtual StopWorkspacesResponse StopWorkspaces(StopWorkspacesRequest request){var options = new InvokeOptions();options.RequestMarshaller = StopWorkspacesRequestMarshaller.Instance;options.ResponseUnmarshaller = StopWorkspacesResponseUnmarshaller.Instance;return Invoke<StopWorkspacesResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual StopWorkspacesResponse StopWorkspaces(StopWorkspacesRequest request){var options = new InvokeOptions();options.RequestMarshaller = StopWorkspacesRequestMarshaller.Instance;options.ResponseUnmarshaller = StopWorkspacesResponseUnmarshaller.Instance;return Invoke<StopWorkspacesResponse>(request, options);}",
    "output": "public StopWorkspacesResult stopWorkspaces(StopWorkspacesRequest request) {request = beforeClientExecution(request);return executeStopWorkspaces(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void close() throws IOException {if (isOpen) {isOpen = false;try {dump();} finally {try {channel.truncate(fileLength);} finally {try {channel.close();} finally {fos.close();}}}}}",
    "output": "public void close() throws IOException{if (isOpen){isOpen = false;try{dump();}finally{try{channel.truncate(fileLength);}finally{try{channel.close();}finally{fos.close();}}}}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public void close() throws IOException{if (isOpen){isOpen = false;try{dump();}finally{try{channel.truncate(fileLength);}finally{try{channel.close();}finally{fos.close();}}}}}",
    "output": "public void close() throws IOException {if (isOpen) {isOpen = false;try {dump();} finally {try {channel.truncate(fileLength);} finally {try {channel.close();} finally {fos.close();}}}}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DescribeMatchmakingRuleSetsResult describeMatchmakingRuleSets(DescribeMatchmakingRuleSetsRequest request) {request = beforeClientExecution(request);return executeDescribeMatchmakingRuleSets(request);}",
    "output": "public virtual DescribeMatchmakingRuleSetsResponse DescribeMatchmakingRuleSets(DescribeMatchmakingRuleSetsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeMatchmakingRuleSetsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeMatchmakingRuleSetsResponseUnmarshaller.Instance;return Invoke<DescribeMatchmakingRuleSetsResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DescribeMatchmakingRuleSetsResponse DescribeMatchmakingRuleSets(DescribeMatchmakingRuleSetsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeMatchmakingRuleSetsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeMatchmakingRuleSetsResponseUnmarshaller.Instance;return Invoke<DescribeMatchmakingRuleSetsResponse>(request, options);}",
    "output": "public DescribeMatchmakingRuleSetsResult describeMatchmakingRuleSets(DescribeMatchmakingRuleSetsRequest request) {request = beforeClientExecution(request);return executeDescribeMatchmakingRuleSets(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String getPronunciation(int wordId, char surface[], int off, int len) {return null; }",
    "output": "public string GetPronunciation(int wordId, char[] surface, int off, int len){return null; }"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public string GetPronunciation(int wordId, char[] surface, int off, int len){return null; }",
    "output": "public String getPronunciation(int wordId, char surface[], int off, int len) {return null; }"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String getPath() {return pathStr;}",
    "output": "public virtual string GetPath(){return pathStr;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual string GetPath(){return pathStr;}",
    "output": "public String getPath() {return pathStr;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public static double devsq(double[] v) {double r = Double.NaN;if (v!=null && v.length >= 1) {double m = 0;double s = 0;int n = v.length;for (int i=0; i<n; i++) {s += v[i];}m = s / n;s = 0;for (int i=0; i<n; i++) {s += (v[i]- m) * (v[i] - m);}r = (n == 1)? 0: s;}return r;}",
    "output": "public static double devsq(double[] v){double r = double.NaN;if (v != null && v.Length >= 1){double m = 0;double s = 0;int n = v.Length;for (int i = 0; i < n; i++){s += v[i];}m = s / n;s = 0;for (int i = 0; i < n; i++){s += (v[i] - m) * (v[i] - m);}r = (n == 1)? 0: s;}return r;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public static double devsq(double[] v){double r = double.NaN;if (v != null && v.Length >= 1){double m = 0;double s = 0;int n = v.Length;for (int i = 0; i < n; i++){s += v[i];}m = s / n;s = 0;for (int i = 0; i < n; i++){s += (v[i] - m) * (v[i] - m);}r = (n == 1)? 0: s;}return r;}",
    "output": "public static double devsq(double[] v) {double r = Double.NaN;if (v!=null && v.length >= 1) {double m = 0;double s = 0;int n = v.length;for (int i=0; i<n; i++) {s += v[i];}m = s / n;s = 0;for (int i=0; i<n; i++) {s += (v[i]- m) * (v[i] - m);}r = (n == 1)? 0: s;}return r;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DescribeResizeResult describeResize(DescribeResizeRequest request) {request = beforeClientExecution(request);return executeDescribeResize(request);}",
    "output": "public virtual DescribeResizeResponse DescribeResize(DescribeResizeRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeResizeRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeResizeResponseUnmarshaller.Instance;return Invoke<DescribeResizeResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DescribeResizeResponse DescribeResize(DescribeResizeRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeResizeRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeResizeResponseUnmarshaller.Instance;return Invoke<DescribeResizeResponse>(request, options);}",
    "output": "public DescribeResizeResult describeResize(DescribeResizeRequest request) {request = beforeClientExecution(request);return executeDescribeResize(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public final boolean hasPassedThroughNonGreedyDecision() {return passedThroughNonGreedyDecision;}",
    "output": "public bool hasPassedThroughNonGreedyDecision(){return passedThroughNonGreedyDecision;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public bool hasPassedThroughNonGreedyDecision(){return passedThroughNonGreedyDecision;}",
    "output": "public final boolean hasPassedThroughNonGreedyDecision() {return passedThroughNonGreedyDecision;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public int end() {return end(0);}",
    "output": "public int end(){return end(0);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public int end(){return end(0);}",
    "output": "public int end() {return end(0);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void traverse(CellHandler handler) {int firstRow = range.getFirstRow();int lastRow = range.getLastRow();int firstColumn = range.getFirstColumn();int lastColumn = range.getLastColumn();final int width = lastColumn - firstColumn + 1;SimpleCellWalkContext ctx = new SimpleCellWalkContext();Row currentRow = null;Cell currentCell = null;for (ctx.rowNumber = firstRow; ctx.rowNumber <= lastRow; ++ctx.rowNumber) {currentRow = sheet.getRow(ctx.rowNumber);if (currentRow == null) {continue;}for (ctx.colNumber = firstColumn; ctx.colNumber <= lastColumn; ++ctx.colNumber) {currentCell = currentRow.getCell(ctx.colNumber);if (currentCell == null) {continue;}if (isEmpty(currentCell) && !traverseEmptyCells) {continue;}long rowSize = ArithmeticUtils.mulAndCheck((long)ArithmeticUtils.subAndCheck(ctx.rowNumber, firstRow), (long)width);ctx.ordinalNumber = ArithmeticUtils.addAndCheck(rowSize, (ctx.colNumber - firstColumn + 1));handler.onCell(currentCell, ctx);}}}",
    "output": "public void Traverse(ICellHandler handler){int firstRow = range.FirstRow;int lastRow = range.LastRow;int firstColumn = range.FirstColumn;int lastColumn = range.LastColumn;int width = lastColumn - firstColumn + 1;SimpleCellWalkContext ctx = new SimpleCellWalkContext();IRow currentRow = null;ICell currentCell = null;for (ctx.rowNumber = firstRow; ctx.rowNumber <= lastRow; ++ctx.rowNumber){currentRow = sheet.GetRow(ctx.rowNumber);if (currentRow == null){continue;}for (ctx.colNumber = firstColumn; ctx.colNumber <= lastColumn; ++ctx.colNumber){currentCell = currentRow.GetCell(ctx.colNumber);if (currentCell == null){continue;}if (IsEmpty(currentCell) && !traverseEmptyCells){continue;}ctx.ordinalNumber =(ctx.rowNumber - firstRow) * width +(ctx.colNumber - firstColumn + 1);handler.OnCell(currentCell, ctx);}}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public void Traverse(ICellHandler handler){int firstRow = range.FirstRow;int lastRow = range.LastRow;int firstColumn = range.FirstColumn;int lastColumn = range.LastColumn;int width = lastColumn - firstColumn + 1;SimpleCellWalkContext ctx = new SimpleCellWalkContext();IRow currentRow = null;ICell currentCell = null;for (ctx.rowNumber = firstRow; ctx.rowNumber <= lastRow; ++ctx.rowNumber){currentRow = sheet.GetRow(ctx.rowNumber);if (currentRow == null){continue;}for (ctx.colNumber = firstColumn; ctx.colNumber <= lastColumn; ++ctx.colNumber){currentCell = currentRow.GetCell(ctx.colNumber);if (currentCell == null){continue;}if (IsEmpty(currentCell) && !traverseEmptyCells){continue;}ctx.ordinalNumber =(ctx.rowNumber - firstRow) * width +(ctx.colNumber - firstColumn + 1);handler.OnCell(currentCell, ctx);}}}",
    "output": "public void traverse(CellHandler handler) {int firstRow = range.getFirstRow();int lastRow = range.getLastRow();int firstColumn = range.getFirstColumn();int lastColumn = range.getLastColumn();final int width = lastColumn - firstColumn + 1;SimpleCellWalkContext ctx = new SimpleCellWalkContext();Row currentRow = null;Cell currentCell = null;for (ctx.rowNumber = firstRow; ctx.rowNumber <= lastRow; ++ctx.rowNumber) {currentRow = sheet.getRow(ctx.rowNumber);if (currentRow == null) {continue;}for (ctx.colNumber = firstColumn; ctx.colNumber <= lastColumn; ++ctx.colNumber) {currentCell = currentRow.getCell(ctx.colNumber);if (currentCell == null) {continue;}if (isEmpty(currentCell) && !traverseEmptyCells) {continue;}long rowSize = ArithmeticUtils.mulAndCheck((long)ArithmeticUtils.subAndCheck(ctx.rowNumber, firstRow), (long)width);ctx.ordinalNumber = ArithmeticUtils.addAndCheck(rowSize, (ctx.colNumber - firstColumn + 1));handler.onCell(currentCell, ctx);}}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public int getReadIndex() {return pos;}",
    "output": "public int GetReadIndex(){return _ReadIndex;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public int GetReadIndex(){return _ReadIndex;}",
    "output": "public int getReadIndex() {return pos;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public int compareTo(ScoreTerm other) {if (this.boost == other.boost) return other.bytes.get().compareTo(this.bytes.get());else return Float.compare(this.boost, other.boost);}",
    "output": "public virtual int CompareTo(ScoreTerm other){if (Term.BytesEquals(other.Term)){return 0; }if (this.Boost == other.Boost){return other.Term.CompareTo(this.Term);}else{return this.Boost.CompareTo(other.Boost);}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual int CompareTo(ScoreTerm other){if (Term.BytesEquals(other.Term)){return 0; }if (this.Boost == other.Boost){return other.Term.CompareTo(this.Term);}else{return this.Boost.CompareTo(other.Boost);}}",
    "output": "public int compareTo(ScoreTerm other) {if (this.boost == other.boost) return other.bytes.get().compareTo(this.bytes.get());else return Float.compare(this.boost, other.boost);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public int normalize(char s[], int len) {for (int i = 0; i < len; i++) {switch (s[i]) {case FARSI_YEH:case YEH_BARREE:s[i] = YEH;break;case KEHEH:s[i] = KAF;break;case HEH_YEH:case HEH_GOAL:s[i] = HEH;break;case HAMZA_ABOVE: len = delete(s, i, len);i--;break;default:break;}}return len;}",
    "output": "public virtual int Normalize(char[] s, int len){for (int i = 0; i < len; i++){switch (s[i]){case FARSI_YEH:case YEH_BARREE:s[i] = YEH;break;case KEHEH:s[i] = KAF;break;case HEH_YEH:case HEH_GOAL:s[i] = HEH;break;case HAMZA_ABOVE: len = StemmerUtil.Delete(s, i, len);i--;break;default:break;}}return len;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual int Normalize(char[] s, int len){for (int i = 0; i < len; i++){switch (s[i]){case FARSI_YEH:case YEH_BARREE:s[i] = YEH;break;case KEHEH:s[i] = KAF;break;case HEH_YEH:case HEH_GOAL:s[i] = HEH;break;case HAMZA_ABOVE: len = StemmerUtil.Delete(s, i, len);i--;break;default:break;}}return len;}",
    "output": "public int normalize(char s[], int len) {for (int i = 0; i < len; i++) {switch (s[i]) {case FARSI_YEH:case YEH_BARREE:s[i] = YEH;break;case KEHEH:s[i] = KAF;break;case HEH_YEH:case HEH_GOAL:s[i] = HEH;break;case HAMZA_ABOVE: len = delete(s, i, len);i--;break;default:break;}}return len;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void serialize(LittleEndianOutput out) {out.writeShort(_options);}",
    "output": "public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(_options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(_options);}",
    "output": "public void serialize(LittleEndianOutput out) {out.writeShort(_options);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DiagnosticErrorListener(boolean exactOnly) {this.exactOnly = exactOnly;}",
    "output": "public DiagnosticErrorListener(bool exactOnly){this.exactOnly = exactOnly;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public DiagnosticErrorListener(bool exactOnly){this.exactOnly = exactOnly;}",
    "output": "public DiagnosticErrorListener(boolean exactOnly) {this.exactOnly = exactOnly;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public KeySchemaElement(String attributeName, KeyType keyType) {setAttributeName(attributeName);setKeyType(keyType.toString());}",
    "output": "public KeySchemaElement(string attributeName, KeyType keyType){_attributeName = attributeName;_keyType = keyType;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public KeySchemaElement(string attributeName, KeyType keyType){_attributeName = attributeName;_keyType = keyType;}",
    "output": "public KeySchemaElement(String attributeName, KeyType keyType) {setAttributeName(attributeName);setKeyType(keyType.toString());}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public GetAssignmentResult getAssignment(GetAssignmentRequest request) {request = beforeClientExecution(request);return executeGetAssignment(request);}",
    "output": "public virtual GetAssignmentResponse GetAssignment(GetAssignmentRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetAssignmentRequestMarshaller.Instance;options.ResponseUnmarshaller = GetAssignmentResponseUnmarshaller.Instance;return Invoke<GetAssignmentResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual GetAssignmentResponse GetAssignment(GetAssignmentRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetAssignmentRequestMarshaller.Instance;options.ResponseUnmarshaller = GetAssignmentResponseUnmarshaller.Instance;return Invoke<GetAssignmentResponse>(request, options);}",
    "output": "public GetAssignmentResult getAssignment(GetAssignmentRequest request) {request = beforeClientExecution(request);return executeGetAssignment(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public boolean hasObject(AnyObjectId id) {return findOffset(id) != -1;}",
    "output": "public virtual bool HasObject(AnyObjectId id){return FindOffset(id) != -1;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual bool HasObject(AnyObjectId id){return FindOffset(id) != -1;}",
    "output": "public boolean hasObject(AnyObjectId id) {return findOffset(id) != -1;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public GroupingSearch setAllGroups(boolean allGroups) {this.allGroups = allGroups;return this;}",
    "output": "public virtual GroupingSearch SetAllGroups(bool allGroups){this.allGroups = allGroups;return this;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual GroupingSearch SetAllGroups(bool allGroups){this.allGroups = allGroups;return this;}",
    "output": "public GroupingSearch setAllGroups(boolean allGroups) {this.allGroups = allGroups;return this;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public synchronized void setMultiValued(String dimName, boolean v) {DimConfig ft = fieldTypes.get(dimName);if (ft == null) {ft = new DimConfig();fieldTypes.put(dimName, ft);}ft.multiValued = v;}",
    "output": "public virtual void SetMultiValued(string dimName, bool v){lock (this){if (!fieldTypes.TryGetValue(dimName, out DimConfig fieldType)){fieldTypes[dimName] = new DimConfig { IsMultiValued = v };}else{fieldType.IsMultiValued = v;}}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual void SetMultiValued(string dimName, bool v){lock (this){if (!fieldTypes.TryGetValue(dimName, out DimConfig fieldType)){fieldTypes[dimName] = new DimConfig { IsMultiValued = v };}else{fieldType.IsMultiValued = v;}}}",
    "output": "public synchronized void setMultiValued(String dimName, boolean v) {DimConfig ft = fieldTypes.get(dimName);if (ft == null) {ft = new DimConfig();fieldTypes.put(dimName, ft);}ft.multiValued = v;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public int getCellsVal() {Iterator<Character> i = cells.keySet().iterator();int size = 0;for (; i.hasNext();) {Character c = i.next();Cell e = at(c);if (e.cmd >= 0) {size++;}}return size;}",
    "output": "public int GetCellsVal(){int size = 0;foreach (char c in cells.Keys){Cell e = At(c);if (e.cmd >= 0){size++;}}return size;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public int GetCellsVal(){int size = 0;foreach (char c in cells.Keys){Cell e = At(c);if (e.cmd >= 0){size++;}}return size;}",
    "output": "public int getCellsVal() {Iterator<Character> i = cells.keySet().iterator();int size = 0;for (; i.hasNext();) {Character c = i.next();Cell e = at(c);if (e.cmd >= 0) {size++;}}return size;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DeleteVoiceConnectorResult deleteVoiceConnector(DeleteVoiceConnectorRequest request) {request = beforeClientExecution(request);return executeDeleteVoiceConnector(request);}",
    "output": "public virtual DeleteVoiceConnectorResponse DeleteVoiceConnector(DeleteVoiceConnectorRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteVoiceConnectorRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteVoiceConnectorResponseUnmarshaller.Instance;return Invoke<DeleteVoiceConnectorResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DeleteVoiceConnectorResponse DeleteVoiceConnector(DeleteVoiceConnectorRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteVoiceConnectorRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteVoiceConnectorResponseUnmarshaller.Instance;return Invoke<DeleteVoiceConnectorResponse>(request, options);}",
    "output": "public DeleteVoiceConnectorResult deleteVoiceConnector(DeleteVoiceConnectorRequest request) {request = beforeClientExecution(request);return executeDeleteVoiceConnector(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DeleteLifecyclePolicyResult deleteLifecyclePolicy(DeleteLifecyclePolicyRequest request) {request = beforeClientExecution(request);return executeDeleteLifecyclePolicy(request);}",
    "output": "public virtual DeleteLifecyclePolicyResponse DeleteLifecyclePolicy(DeleteLifecyclePolicyRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteLifecyclePolicyRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteLifecyclePolicyResponseUnmarshaller.Instance;return Invoke<DeleteLifecyclePolicyResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DeleteLifecyclePolicyResponse DeleteLifecyclePolicy(DeleteLifecyclePolicyRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteLifecyclePolicyRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteLifecyclePolicyResponseUnmarshaller.Instance;return Invoke<DeleteLifecyclePolicyResponse>(request, options);}",
    "output": "public DeleteLifecyclePolicyResult deleteLifecyclePolicy(DeleteLifecyclePolicyRequest request) {request = beforeClientExecution(request);return executeDeleteLifecyclePolicy(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void write(byte[] b) {int len = b.length;checkPosition(len);System.arraycopy(b, 0, _buf, _writeIndex, len);_writeIndex += len;}",
    "output": "public void Write(byte[] b){int len = b.Length;CheckPosition(len);System.Array.Copy(b, 0, _buf, _writeIndex, len);_writeIndex += len;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public void Write(byte[] b){int len = b.Length;CheckPosition(len);System.Array.Copy(b, 0, _buf, _writeIndex, len);_writeIndex += len;}",
    "output": "public void write(byte[] b) {int len = b.length;checkPosition(len);System.arraycopy(b, 0, _buf, _writeIndex, len);_writeIndex += len;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public RebaseResult getRebaseResult() {return this.rebaseResult;}",
    "output": "public virtual RebaseResult GetRebaseResult(){return this.rebaseResult;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual RebaseResult GetRebaseResult(){return this.rebaseResult;}",
    "output": "public RebaseResult getRebaseResult() {return this.rebaseResult;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public static int getNearestSetSize(int maxNumberOfValuesExpected,float desiredSaturation) {for (int i = 0; i < usableBitSetSizes.length; i++) {int numSetBitsAtDesiredSaturation = (int) (usableBitSetSizes[i] * desiredSaturation);int estimatedNumUniqueValues = getEstimatedNumberUniqueValuesAllowingForCollisions(usableBitSetSizes[i], numSetBitsAtDesiredSaturation);if (estimatedNumUniqueValues > maxNumberOfValuesExpected) {return usableBitSetSizes[i];}}return -1;}",
    "output": "public static int GetNearestSetSize(int maxNumberOfValuesExpected,float desiredSaturation){foreach (var t in from t in _usableBitSetSizes let numSetBitsAtDesiredSaturation = (int) (t*desiredSaturation)let estimatedNumUniqueValues = GetEstimatedNumberUniqueValuesAllowingForCollisions(t, numSetBitsAtDesiredSaturation) where estimatedNumUniqueValues > maxNumberOfValuesExpected select t){return t;}return -1;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public static int GetNearestSetSize(int maxNumberOfValuesExpected,float desiredSaturation){foreach (var t in from t in _usableBitSetSizes let numSetBitsAtDesiredSaturation = (int) (t*desiredSaturation)let estimatedNumUniqueValues = GetEstimatedNumberUniqueValuesAllowingForCollisions(t, numSetBitsAtDesiredSaturation) where estimatedNumUniqueValues > maxNumberOfValuesExpected select t){return t;}return -1;}",
    "output": "public static int getNearestSetSize(int maxNumberOfValuesExpected,float desiredSaturation) {for (int i = 0; i < usableBitSetSizes.length; i++) {int numSetBitsAtDesiredSaturation = (int) (usableBitSetSizes[i] * desiredSaturation);int estimatedNumUniqueValues = getEstimatedNumberUniqueValuesAllowingForCollisions(usableBitSetSizes[i], numSetBitsAtDesiredSaturation);if (estimatedNumUniqueValues > maxNumberOfValuesExpected) {return usableBitSetSizes[i];}}return -1;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DescribeDashboardResult describeDashboard(DescribeDashboardRequest request) {request = beforeClientExecution(request);return executeDescribeDashboard(request);}",
    "output": "public virtual DescribeDashboardResponse DescribeDashboard(DescribeDashboardRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDashboardRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDashboardResponseUnmarshaller.Instance;return Invoke<DescribeDashboardResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DescribeDashboardResponse DescribeDashboard(DescribeDashboardRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDashboardRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDashboardResponseUnmarshaller.Instance;return Invoke<DescribeDashboardResponse>(request, options);}",
    "output": "public DescribeDashboardResult describeDashboard(DescribeDashboardRequest request) {request = beforeClientExecution(request);return executeDescribeDashboard(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public CreateSegmentResult createSegment(CreateSegmentRequest request) {request = beforeClientExecution(request);return executeCreateSegment(request);}",
    "output": "public virtual CreateSegmentResponse CreateSegment(CreateSegmentRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateSegmentRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateSegmentResponseUnmarshaller.Instance;return Invoke<CreateSegmentResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual CreateSegmentResponse CreateSegment(CreateSegmentRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateSegmentRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateSegmentResponseUnmarshaller.Instance;return Invoke<CreateSegmentResponse>(request, options);}",
    "output": "public CreateSegmentResult createSegment(CreateSegmentRequest request) {request = beforeClientExecution(request);return executeCreateSegment(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String toString() {StringBuilder buffer = new StringBuilder();buffer.append(\"[DBCELL]\\n\");buffer.append(\"    .rowoffset = \").append(HexDump.intToHex(field_1_row_offset)).append(\"\\n\");for (int k = 0; k < field_2_cell_offsets.length; k++) {buffer.append(\"    .cell_\").append(k).append(\" = \").append(HexDump.shortToHex(field_2_cell_offsets[ k ])).append(\"\\n\");}buffer.append(\"[/DBCELL]\\n\");return buffer.toString();}",
    "output": "public override String ToString(){StringBuilder buffer = new StringBuilder();buffer.Append(\"[DBCELL]\\n\");buffer.Append(\"    .rowoffset       = \").Append(StringUtil.ToHexString(RowOffset)).Append(\"\\n\");for (int k = 0; k < field_2_cell_offsets.Length; k++){buffer.Append(\"    .cell_\").Append(k).Append(\" = \").Append(HexDump.ShortToHex(field_2_cell_offsets[k])).Append(\"\\n\");}buffer.Append(\"[/DBCELL]\\n\");return buffer.ToString();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override String ToString(){StringBuilder buffer = new StringBuilder();buffer.Append(\"[DBCELL]\\n\");buffer.Append(\"    .rowoffset       = \").Append(StringUtil.ToHexString(RowOffset)).Append(\"\\n\");for (int k = 0; k < field_2_cell_offsets.Length; k++){buffer.Append(\"    .cell_\").Append(k).Append(\" = \").Append(HexDump.ShortToHex(field_2_cell_offsets[k])).Append(\"\\n\");}buffer.Append(\"[/DBCELL]\\n\");return buffer.ToString();}",
    "output": "public String toString() {StringBuilder buffer = new StringBuilder();buffer.append(\"[DBCELL]\\n\");buffer.append(\"    .rowoffset = \").append(HexDump.intToHex(field_1_row_offset)).append(\"\\n\");for (int k = 0; k < field_2_cell_offsets.length; k++) {buffer.append(\"    .cell_\").append(k).append(\" = \").append(HexDump.shortToHex(field_2_cell_offsets[ k ])).append(\"\\n\");}buffer.append(\"[/DBCELL]\\n\");return buffer.toString();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public List<String> getUndeletedList() {return undeletedList;}",
    "output": "public virtual IList<string> GetUndeletedList(){return undeletedList;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual IList<string> GetUndeletedList(){return undeletedList;}",
    "output": "public List<String> getUndeletedList() {return undeletedList;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String toString() {return \"[INTERFACEEND/]\\n\";}",
    "output": "public override String ToString(){return \"[INTERFACEEND/]\\n\";}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override String ToString(){return \"[INTERFACEEND/]\\n\";}",
    "output": "public String toString() {return \"[INTERFACEEND/]\\n\";}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public MergeScheduler clone() {return this;}",
    "output": "public override object Clone(){return this;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override object Clone(){return this;}",
    "output": "public MergeScheduler clone() {return this;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public PlainTextDictionary(Reader reader) {in = new BufferedReader(reader);}",
    "output": "public PlainTextDictionary(TextReader reader){@in = reader;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public PlainTextDictionary(TextReader reader){@in = reader;}",
    "output": "public PlainTextDictionary(Reader reader) {in = new BufferedReader(reader);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public StringBuilder append(CharSequence csq) {if (csq == null) {appendNull();} else {append0(csq, 0, csq.length());}return this;}",
    "output": "public java.lang.StringBuilder append(java.lang.CharSequence csq){if (csq == null){appendNull();}else{append0(csq, 0, csq.Length);}return this;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public java.lang.StringBuilder append(java.lang.CharSequence csq){if (csq == null){appendNull();}else{append0(csq, 0, csq.Length);}return this;}",
    "output": "public StringBuilder append(CharSequence csq) {if (csq == null) {appendNull();} else {append0(csq, 0, csq.length());}return this;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ListAssociatedStacksResult listAssociatedStacks(ListAssociatedStacksRequest request) {request = beforeClientExecution(request);return executeListAssociatedStacks(request);}",
    "output": "public virtual ListAssociatedStacksResponse ListAssociatedStacks(ListAssociatedStacksRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListAssociatedStacksRequestMarshaller.Instance;options.ResponseUnmarshaller = ListAssociatedStacksResponseUnmarshaller.Instance;return Invoke<ListAssociatedStacksResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual ListAssociatedStacksResponse ListAssociatedStacks(ListAssociatedStacksRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListAssociatedStacksRequestMarshaller.Instance;options.ResponseUnmarshaller = ListAssociatedStacksResponseUnmarshaller.Instance;return Invoke<ListAssociatedStacksResponse>(request, options);}",
    "output": "public ListAssociatedStacksResult listAssociatedStacks(ListAssociatedStacksRequest request) {request = beforeClientExecution(request);return executeListAssociatedStacks(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public static double avedev(double[] v) {double r = 0;double m = 0;double s = 0;for (int i=0, iSize=v.length; i<iSize; i++) {s += v[i];}m = s / v.length;s = 0;for (int i=0, iSize=v.length; i<iSize; i++) {s += Math.abs(v[i]-m);}r = s / v.length;return r;}",
    "output": "public static double avedev(double[] v){double r = 0;double m = 0;double s = 0;for (int i = 0, iSize = v.Length; i < iSize; i++){s += v[i];}m = s / v.Length;s = 0;for (int i = 0, iSize = v.Length; i < iSize; i++){s += Math.Abs(v[i] - m);}r = s / v.Length;return r;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public static double avedev(double[] v){double r = 0;double m = 0;double s = 0;for (int i = 0, iSize = v.Length; i < iSize; i++){s += v[i];}m = s / v.Length;s = 0;for (int i = 0, iSize = v.Length; i < iSize; i++){s += Math.Abs(v[i] - m);}r = s / v.Length;return r;}",
    "output": "public static double avedev(double[] v) {double r = 0;double m = 0;double s = 0;for (int i=0, iSize=v.length; i<iSize; i++) {s += v[i];}m = s / v.length;s = 0;for (int i=0, iSize=v.length; i<iSize; i++) {s += Math.abs(v[i]-m);}r = s / v.length;return r;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DescribeByoipCidrsResult describeByoipCidrs(DescribeByoipCidrsRequest request) {request = beforeClientExecution(request);return executeDescribeByoipCidrs(request);}",
    "output": "public virtual DescribeByoipCidrsResponse DescribeByoipCidrs(DescribeByoipCidrsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeByoipCidrsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeByoipCidrsResponseUnmarshaller.Instance;return Invoke<DescribeByoipCidrsResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DescribeByoipCidrsResponse DescribeByoipCidrs(DescribeByoipCidrsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeByoipCidrsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeByoipCidrsResponseUnmarshaller.Instance;return Invoke<DescribeByoipCidrsResponse>(request, options);}",
    "output": "public DescribeByoipCidrsResult describeByoipCidrs(DescribeByoipCidrsRequest request) {request = beforeClientExecution(request);return executeDescribeByoipCidrs(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public GetDiskResult getDisk(GetDiskRequest request) {request = beforeClientExecution(request);return executeGetDisk(request);}",
    "output": "public virtual GetDiskResponse GetDisk(GetDiskRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetDiskRequestMarshaller.Instance;options.ResponseUnmarshaller = GetDiskResponseUnmarshaller.Instance;return Invoke<GetDiskResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual GetDiskResponse GetDisk(GetDiskRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetDiskRequestMarshaller.Instance;options.ResponseUnmarshaller = GetDiskResponseUnmarshaller.Instance;return Invoke<GetDiskResponse>(request, options);}",
    "output": "public GetDiskResult getDisk(GetDiskRequest request) {request = beforeClientExecution(request);return executeGetDisk(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DBClusterParameterGroup createDBClusterParameterGroup(CreateDBClusterParameterGroupRequest request) {request = beforeClientExecution(request);return executeCreateDBClusterParameterGroup(request);}",
    "output": "public virtual CreateDBClusterParameterGroupResponse CreateDBClusterParameterGroup(CreateDBClusterParameterGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateDBClusterParameterGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateDBClusterParameterGroupResponseUnmarshaller.Instance;return Invoke<CreateDBClusterParameterGroupResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual CreateDBClusterParameterGroupResponse CreateDBClusterParameterGroup(CreateDBClusterParameterGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateDBClusterParameterGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateDBClusterParameterGroupResponseUnmarshaller.Instance;return Invoke<CreateDBClusterParameterGroupResponse>(request, options);}",
    "output": "public DBClusterParameterGroup createDBClusterParameterGroup(CreateDBClusterParameterGroupRequest request) {request = beforeClientExecution(request);return executeCreateDBClusterParameterGroup(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public static CharBuffer wrap(char[] array, int start, int charCount) {Arrays.checkOffsetAndCount(array.length, start, charCount);CharBuffer buf = new ReadWriteCharArrayBuffer(array);buf.position = start;buf.limit = start + charCount;return buf;}",
    "output": "public static java.nio.CharBuffer wrap(char[] array_1, int start, int charCount){java.util.Arrays.checkOffsetAndCount(array_1.Length, start, charCount);java.nio.CharBuffer buf = new java.nio.ReadWriteCharArrayBuffer(array_1);buf._position = start;buf._limit = start + charCount;return buf;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public static java.nio.CharBuffer wrap(char[] array_1, int start, int charCount){java.util.Arrays.checkOffsetAndCount(array_1.Length, start, charCount);java.nio.CharBuffer buf = new java.nio.ReadWriteCharArrayBuffer(array_1);buf._position = start;buf._limit = start + charCount;return buf;}",
    "output": "public static CharBuffer wrap(char[] array, int start, int charCount) {Arrays.checkOffsetAndCount(array.length, start, charCount);CharBuffer buf = new ReadWriteCharArrayBuffer(array);buf.position = start;buf.limit = start + charCount;return buf;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public SubmoduleStatusType getType() {return type;}",
    "output": "public virtual SubmoduleStatusType GetType(){return type;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual SubmoduleStatusType GetType(){return type;}",
    "output": "public SubmoduleStatusType getType() {return type;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DescribeGameServerGroupResult describeGameServerGroup(DescribeGameServerGroupRequest request) {request = beforeClientExecution(request);return executeDescribeGameServerGroup(request);}",
    "output": "public virtual DescribeGameServerGroupResponse DescribeGameServerGroup(DescribeGameServerGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeGameServerGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeGameServerGroupResponseUnmarshaller.Instance;return Invoke<DescribeGameServerGroupResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DescribeGameServerGroupResponse DescribeGameServerGroup(DescribeGameServerGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeGameServerGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeGameServerGroupResponseUnmarshaller.Instance;return Invoke<DescribeGameServerGroupResponse>(request, options);}",
    "output": "public DescribeGameServerGroupResult describeGameServerGroup(DescribeGameServerGroupRequest request) {request = beforeClientExecution(request);return executeDescribeGameServerGroup(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public Pattern pattern() {return pattern;}",
    "output": "public java.util.regex.Pattern pattern(){return _pattern;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public java.util.regex.Pattern pattern(){return _pattern;}",
    "output": "public Pattern pattern() {return pattern;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public V setValue(V object) {throw new UnsupportedOperationException();}",
    "output": "public virtual V setValue(V @object){throw new System.NotSupportedException();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual V setValue(V @object){throw new System.NotSupportedException();}",
    "output": "public V setValue(V object) {throw new UnsupportedOperationException();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public StringBuilder stem(CharSequence word) {CharSequence cmd = stemmer.getLastOnPath(word);if (cmd == null)return null;buffer.setLength(0);buffer.append(word);Diff.apply(buffer, cmd);if (buffer.length() > 0)return buffer;else return null;}",
    "output": "public StringBuilder Stem(string word){string cmd = stemmer.GetLastOnPath(word);if (cmd == null)return null;buffer.Length = 0;buffer.Append(word);Diff.Apply(buffer, cmd);if (buffer.Length > 0)return buffer;else return null;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public StringBuilder Stem(string word){string cmd = stemmer.GetLastOnPath(word);if (cmd == null)return null;buffer.Length = 0;buffer.Append(word);Diff.Apply(buffer, cmd);if (buffer.Length > 0)return buffer;else return null;}",
    "output": "public StringBuilder stem(CharSequence word) {CharSequence cmd = stemmer.getLastOnPath(word);if (cmd == null)return null;buffer.setLength(0);buffer.append(word);Diff.apply(buffer, cmd);if (buffer.length() > 0)return buffer;else return null;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public RenameFaceRequest() {super(\"CloudPhoto\", \"2017-07-11\", \"RenameFace\", \"cloudphoto\");setProtocol(ProtocolType.HTTPS);}",
    "output": "public RenameFaceRequest(): base(\"CloudPhoto\", \"2017-07-11\", \"RenameFace\", \"cloudphoto\", \"openAPI\"){Protocol = ProtocolType.HTTPS;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public RenameFaceRequest(): base(\"CloudPhoto\", \"2017-07-11\", \"RenameFace\", \"cloudphoto\", \"openAPI\"){Protocol = ProtocolType.HTTPS;}",
    "output": "public RenameFaceRequest() {super(\"CloudPhoto\", \"2017-07-11\", \"RenameFace\", \"cloudphoto\");setProtocol(ProtocolType.HTTPS);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public char requireChar(Map<String,String> args, String name) {return require(args, name).charAt(0);}",
    "output": "public virtual char RequireChar(IDictionary<string, string> args, string name){return Require(args, name)[0];}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual char RequireChar(IDictionary<string, string> args, string name){return Require(args, name)[0];}",
    "output": "public char requireChar(Map<String,String> args, String name) {return require(args, name).charAt(0);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public static String toStringTree(Tree t) {return toStringTree(t, (List<String>)null);}",
    "output": "public static string ToStringTree(ITree t){return ToStringTree(t, (IList<string>)null);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public static string ToStringTree(ITree t){return ToStringTree(t, (IList<string>)null);}",
    "output": "public static String toStringTree(Tree t) {return toStringTree(t, (List<String>)null);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String toString() {return \"<deleted/>\";}",
    "output": "public override string ToString(){return \"<deleted/>\";}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override string ToString(){return \"<deleted/>\";}",
    "output": "public String toString() {return \"<deleted/>\";}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public GetRepoWebhookLogListRequest() {super(\"cr\", \"2016-06-07\", \"GetRepoWebhookLogList\", \"cr\");setUriPattern(\"/repos/[RepoNamespace]/[RepoName]/webhooks/[WebhookId]/logs\");setMethod(MethodType.GET);}",
    "output": "public GetRepoWebhookLogListRequest(): base(\"cr\", \"2016-06-07\", \"GetRepoWebhookLogList\", \"cr\", \"openAPI\"){UriPattern = \"/repos/[RepoNamespace]/[RepoName]/webhooks/[WebhookId]/logs\";Method = MethodType.GET;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public GetRepoWebhookLogListRequest(): base(\"cr\", \"2016-06-07\", \"GetRepoWebhookLogList\", \"cr\", \"openAPI\"){UriPattern = \"/repos/[RepoNamespace]/[RepoName]/webhooks/[WebhookId]/logs\";Method = MethodType.GET;}",
    "output": "public GetRepoWebhookLogListRequest() {super(\"cr\", \"2016-06-07\", \"GetRepoWebhookLogList\", \"cr\");setUriPattern(\"/repos/[RepoNamespace]/[RepoName]/webhooks/[WebhookId]/logs\");setMethod(MethodType.GET);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public GetJobUnlockCodeResult getJobUnlockCode(GetJobUnlockCodeRequest request) {request = beforeClientExecution(request);return executeGetJobUnlockCode(request);}",
    "output": "public virtual GetJobUnlockCodeResponse GetJobUnlockCode(GetJobUnlockCodeRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetJobUnlockCodeRequestMarshaller.Instance;options.ResponseUnmarshaller = GetJobUnlockCodeResponseUnmarshaller.Instance;return Invoke<GetJobUnlockCodeResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual GetJobUnlockCodeResponse GetJobUnlockCode(GetJobUnlockCodeRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetJobUnlockCodeRequestMarshaller.Instance;options.ResponseUnmarshaller = GetJobUnlockCodeResponseUnmarshaller.Instance;return Invoke<GetJobUnlockCodeResponse>(request, options);}",
    "output": "public GetJobUnlockCodeResult getJobUnlockCode(GetJobUnlockCodeRequest request) {request = beforeClientExecution(request);return executeGetJobUnlockCode(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public RemoveTagsRequest(String resourceId) {setResourceId(resourceId);}",
    "output": "public RemoveTagsRequest(string resourceId){_resourceId = resourceId;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public RemoveTagsRequest(string resourceId){_resourceId = resourceId;}",
    "output": "public RemoveTagsRequest(String resourceId) {setResourceId(resourceId);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public short getGB2312Id(char ch) {try {byte[] buffer = Character.toString(ch).getBytes(\"GB2312\");if (buffer.length != 2) {return -1;}int b0 = (buffer[0] & 0x0FF) - 161; int b1 = (buffer[1] & 0x0FF) - 161; return (short) (b0 * 94 + b1);} catch (UnsupportedEncodingException e) {throw new RuntimeException(e);}}",
    "output": "public virtual short GetGB2312Id(char ch){try{byte[] buffer = Encoding.GetEncoding(\"GB2312\").GetBytes(ch.ToString());if (buffer.Length != 2){return -1;}int b0 = (buffer[0] & 0x0FF) - 161; int b1 = (buffer[1] & 0x0FF) - 161; return (short)(b0 * 94 + b1);}catch (ArgumentException e) {throw new Exception(e.ToString(), e);}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual short GetGB2312Id(char ch){try{byte[] buffer = Encoding.GetEncoding(\"GB2312\").GetBytes(ch.ToString());if (buffer.Length != 2){return -1;}int b0 = (buffer[0] & 0x0FF) - 161; int b1 = (buffer[1] & 0x0FF) - 161; return (short)(b0 * 94 + b1);}catch (ArgumentException e) {throw new Exception(e.ToString(), e);}}",
    "output": "public short getGB2312Id(char ch) {try {byte[] buffer = Character.toString(ch).getBytes(\"GB2312\");if (buffer.length != 2) {return -1;}int b0 = (buffer[0] & 0x0FF) - 161; int b1 = (buffer[1] & 0x0FF) - 161; return (short) (b0 * 94 + b1);} catch (UnsupportedEncodingException e) {throw new RuntimeException(e);}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public BatchRefUpdate addCommand(Collection<ReceiveCommand> cmd) {commands.addAll(cmd);return this;}",
    "output": "public virtual NGit.BatchRefUpdate AddCommand(ICollection<ReceiveCommand> cmd){Sharpen.Collections.AddAll(commands, cmd);return this;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual NGit.BatchRefUpdate AddCommand(ICollection<ReceiveCommand> cmd){Sharpen.Collections.AddAll(commands, cmd);return this;}",
    "output": "public BatchRefUpdate addCommand(Collection<ReceiveCommand> cmd) {commands.addAll(cmd);return this;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public short checkExternSheet(int sheetNumber){return (short)getOrCreateLinkTable().checkExternSheet(sheetNumber);}",
    "output": "public int CheckExternSheet(int sheetNumber){return OrCreateLinkTable.CheckExternSheet(sheetNumber);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public int CheckExternSheet(int sheetNumber){return OrCreateLinkTable.CheckExternSheet(sheetNumber);}",
    "output": "public short checkExternSheet(int sheetNumber){return (short)getOrCreateLinkTable().checkExternSheet(sheetNumber);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "@Override public boolean equals(Object object) {return c.equals(object);}",
    "output": "public override bool Equals(object @object){return c.Equals(@object);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override bool Equals(object @object){return c.Equals(@object);}",
    "output": "@Override public boolean equals(Object object) {return c.equals(object);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public BooleanQuery build(QueryNode queryNode) throws QueryNodeException {AnyQueryNode andNode = (AnyQueryNode) queryNode;BooleanQuery.Builder bQuery = new BooleanQuery.Builder();List<QueryNode> children = andNode.getChildren();if (children != null) {for (QueryNode child : children) {Object obj = child.getTag(QueryTreeBuilder.QUERY_TREE_BUILDER_TAGID);if (obj != null) {Query query = (Query) obj;try {bQuery.add(query, BooleanClause.Occur.SHOULD);} catch (TooManyClauses ex) {throw new QueryNodeException(new MessageImpl(QueryParserMessages.EMPTY_MESSAGE), ex);}}}}bQuery.setMinimumNumberShouldMatch(andNode.getMinimumMatchingElements());return bQuery.build();}",
    "output": "public virtual Query Build(IQueryNode queryNode){AnyQueryNode andNode = (AnyQueryNode)queryNode;BooleanQuery bQuery = new BooleanQuery();IList<IQueryNode> children = andNode.GetChildren();if (children != null){foreach (IQueryNode child in children){object obj = child.GetTag(QueryTreeBuilder.QUERY_TREE_BUILDER_TAGID);if (obj != null){Query query = (Query)obj;try{bQuery.Add(query, Occur.SHOULD);}catch (BooleanQuery.TooManyClausesException ex){throw new QueryNodeException(new Message(QueryParserMessages.EMPTY_MESSAGE), ex);}}}}bQuery.MinimumNumberShouldMatch = andNode.MinimumMatchingElements;return bQuery;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual Query Build(IQueryNode queryNode){AnyQueryNode andNode = (AnyQueryNode)queryNode;BooleanQuery bQuery = new BooleanQuery();IList<IQueryNode> children = andNode.GetChildren();if (children != null){foreach (IQueryNode child in children){object obj = child.GetTag(QueryTreeBuilder.QUERY_TREE_BUILDER_TAGID);if (obj != null){Query query = (Query)obj;try{bQuery.Add(query, Occur.SHOULD);}catch (BooleanQuery.TooManyClausesException ex){throw new QueryNodeException(new Message(QueryParserMessages.EMPTY_MESSAGE), ex);}}}}bQuery.MinimumNumberShouldMatch = andNode.MinimumMatchingElements;return bQuery;}",
    "output": "public BooleanQuery build(QueryNode queryNode) throws QueryNodeException {AnyQueryNode andNode = (AnyQueryNode) queryNode;BooleanQuery.Builder bQuery = new BooleanQuery.Builder();List<QueryNode> children = andNode.getChildren();if (children != null) {for (QueryNode child : children) {Object obj = child.getTag(QueryTreeBuilder.QUERY_TREE_BUILDER_TAGID);if (obj != null) {Query query = (Query) obj;try {bQuery.add(query, BooleanClause.Occur.SHOULD);} catch (TooManyClauses ex) {throw new QueryNodeException(new MessageImpl(QueryParserMessages.EMPTY_MESSAGE), ex);}}}}bQuery.setMinimumNumberShouldMatch(andNode.getMinimumMatchingElements());return bQuery.build();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DescribeStreamProcessorResult describeStreamProcessor(DescribeStreamProcessorRequest request) {request = beforeClientExecution(request);return executeDescribeStreamProcessor(request);}",
    "output": "public virtual DescribeStreamProcessorResponse DescribeStreamProcessor(DescribeStreamProcessorRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeStreamProcessorRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeStreamProcessorResponseUnmarshaller.Instance;return Invoke<DescribeStreamProcessorResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DescribeStreamProcessorResponse DescribeStreamProcessor(DescribeStreamProcessorRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeStreamProcessorRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeStreamProcessorResponseUnmarshaller.Instance;return Invoke<DescribeStreamProcessorResponse>(request, options);}",
    "output": "public DescribeStreamProcessorResult describeStreamProcessor(DescribeStreamProcessorRequest request) {request = beforeClientExecution(request);return executeDescribeStreamProcessor(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DescribeDashboardPermissionsResult describeDashboardPermissions(DescribeDashboardPermissionsRequest request) {request = beforeClientExecution(request);return executeDescribeDashboardPermissions(request);}",
    "output": "public virtual DescribeDashboardPermissionsResponse DescribeDashboardPermissions(DescribeDashboardPermissionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDashboardPermissionsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDashboardPermissionsResponseUnmarshaller.Instance;return Invoke<DescribeDashboardPermissionsResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DescribeDashboardPermissionsResponse DescribeDashboardPermissions(DescribeDashboardPermissionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDashboardPermissionsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDashboardPermissionsResponseUnmarshaller.Instance;return Invoke<DescribeDashboardPermissionsResponse>(request, options);}",
    "output": "public DescribeDashboardPermissionsResult describeDashboardPermissions(DescribeDashboardPermissionsRequest request) {request = beforeClientExecution(request);return executeDescribeDashboardPermissions(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public Ref peel(Ref ref) {try {return getRefDatabase().peel(ref);} catch (IOException e) {return ref;}}",
    "output": "public virtual Ref Peel(Ref @ref){try{return RefDatabase.Peel(@ref);}catch (IOException){return @ref;}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual Ref Peel(Ref @ref){try{return RefDatabase.Peel(@ref);}catch (IOException){return @ref;}}",
    "output": "public Ref peel(Ref ref) {try {return getRefDatabase().peel(ref);} catch (IOException e) {return ref;}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public long ramBytesUsed() {return RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER+ 2 * Integer.BYTES     + RamUsageEstimator.NUM_BYTES_OBJECT_REF) + RamUsageEstimator.sizeOf(blocks);}",
    "output": "public override long RamBytesUsed(){return RamUsageEstimator.AlignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER+ 2 * RamUsageEstimator.NUM_BYTES_INT32 + RamUsageEstimator.NUM_BYTES_OBJECT_REF) + RamUsageEstimator.SizeOf(blocks);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override long RamBytesUsed(){return RamUsageEstimator.AlignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER+ 2 * RamUsageEstimator.NUM_BYTES_INT32 + RamUsageEstimator.NUM_BYTES_OBJECT_REF) + RamUsageEstimator.SizeOf(blocks);}",
    "output": "public long ramBytesUsed() {return RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER+ 2 * Integer.BYTES     + RamUsageEstimator.NUM_BYTES_OBJECT_REF) + RamUsageEstimator.sizeOf(blocks);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public GetDomainSuggestionsResult getDomainSuggestions(GetDomainSuggestionsRequest request) {request = beforeClientExecution(request);return executeGetDomainSuggestions(request);}",
    "output": "public virtual GetDomainSuggestionsResponse GetDomainSuggestions(GetDomainSuggestionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetDomainSuggestionsRequestMarshaller.Instance;options.ResponseUnmarshaller = GetDomainSuggestionsResponseUnmarshaller.Instance;return Invoke<GetDomainSuggestionsResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual GetDomainSuggestionsResponse GetDomainSuggestions(GetDomainSuggestionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetDomainSuggestionsRequestMarshaller.Instance;options.ResponseUnmarshaller = GetDomainSuggestionsResponseUnmarshaller.Instance;return Invoke<GetDomainSuggestionsResponse>(request, options);}",
    "output": "public GetDomainSuggestionsResult getDomainSuggestions(GetDomainSuggestionsRequest request) {request = beforeClientExecution(request);return executeGetDomainSuggestions(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DescribeStackEventsResult describeStackEvents(DescribeStackEventsRequest request) {request = beforeClientExecution(request);return executeDescribeStackEvents(request);}",
    "output": "public virtual DescribeStackEventsResponse DescribeStackEvents(DescribeStackEventsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeStackEventsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeStackEventsResponseUnmarshaller.Instance;return Invoke<DescribeStackEventsResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DescribeStackEventsResponse DescribeStackEvents(DescribeStackEventsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeStackEventsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeStackEventsResponseUnmarshaller.Instance;return Invoke<DescribeStackEventsResponse>(request, options);}",
    "output": "public DescribeStackEventsResult describeStackEvents(DescribeStackEventsRequest request) {request = beforeClientExecution(request);return executeDescribeStackEvents(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void setRule(int idx, ConditionalFormattingRule cfRule){setRule(idx, (HSSFConditionalFormattingRule)cfRule);}",
    "output": "public void SetRule(int idx, IConditionalFormattingRule cfRule){SetRule(idx, (HSSFConditionalFormattingRule)cfRule);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public void SetRule(int idx, IConditionalFormattingRule cfRule){SetRule(idx, (HSSFConditionalFormattingRule)cfRule);}",
    "output": "public void setRule(int idx, ConditionalFormattingRule cfRule){setRule(idx, (HSSFConditionalFormattingRule)cfRule);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public CreateResolverRuleResult createResolverRule(CreateResolverRuleRequest request) {request = beforeClientExecution(request);return executeCreateResolverRule(request);}",
    "output": "public virtual CreateResolverRuleResponse CreateResolverRule(CreateResolverRuleRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateResolverRuleRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateResolverRuleResponseUnmarshaller.Instance;return Invoke<CreateResolverRuleResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual CreateResolverRuleResponse CreateResolverRule(CreateResolverRuleRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateResolverRuleRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateResolverRuleResponseUnmarshaller.Instance;return Invoke<CreateResolverRuleResponse>(request, options);}",
    "output": "public CreateResolverRuleResult createResolverRule(CreateResolverRuleRequest request) {request = beforeClientExecution(request);return executeCreateResolverRule(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public SeriesIndexRecord(RecordInputStream in) {field_1_index = in.readShort();}",
    "output": "public SeriesIndexRecord(RecordInputStream in1){field_1_index = in1.ReadShort();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public SeriesIndexRecord(RecordInputStream in1){field_1_index = in1.ReadShort();}",
    "output": "public SeriesIndexRecord(RecordInputStream in) {field_1_index = in.readShort();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public GetStylesRequest() {super(\"lubancloud\", \"2018-05-09\", \"GetStyles\", \"luban\");setMethod(MethodType.POST);}",
    "output": "public GetStylesRequest(): base(\"lubancloud\", \"2018-05-09\", \"GetStyles\", \"luban\", \"openAPI\"){Method = MethodType.POST;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public GetStylesRequest(): base(\"lubancloud\", \"2018-05-09\", \"GetStyles\", \"luban\", \"openAPI\"){Method = MethodType.POST;}",
    "output": "public GetStylesRequest() {super(\"lubancloud\", \"2018-05-09\", \"GetStyles\", \"luban\");setMethod(MethodType.POST);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void serialize(LittleEndianOutput out) {out.writeShort(field_1_gridset_flag);}",
    "output": "public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(field_1_gridset_flag);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(field_1_gridset_flag);}",
    "output": "public void serialize(LittleEndianOutput out) {out.writeShort(field_1_gridset_flag);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public boolean equals(Object obj) {if (this == obj) {return true;}if (obj == null) {return false;}if (getClass() != obj.getClass()) {return false;}Toffs other = (Toffs) obj;if (getStartOffset() != other.getStartOffset()) {return false;}if (getEndOffset() != other.getEndOffset()) {return false;}return true;}",
    "output": "public override bool Equals(object obj){if (this == obj){return true;}if (obj == null){return false;}if (GetType() != obj.GetType()){return false;}Toffs other = (Toffs)obj;if (StartOffset != other.StartOffset){return false;}if (EndOffset != other.EndOffset){return false;}return true;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override bool Equals(object obj){if (this == obj){return true;}if (obj == null){return false;}if (GetType() != obj.GetType()){return false;}Toffs other = (Toffs)obj;if (StartOffset != other.StartOffset){return false;}if (EndOffset != other.EndOffset){return false;}return true;}",
    "output": "public boolean equals(Object obj) {if (this == obj) {return true;}if (obj == null) {return false;}if (getClass() != obj.getClass()) {return false;}Toffs other = (Toffs) obj;if (getStartOffset() != other.getStartOffset()) {return false;}if (getEndOffset() != other.getEndOffset()) {return false;}return true;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public CreateGatewayGroupResult createGatewayGroup(CreateGatewayGroupRequest request) {request = beforeClientExecution(request);return executeCreateGatewayGroup(request);}",
    "output": "public virtual CreateGatewayGroupResponse CreateGatewayGroup(CreateGatewayGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateGatewayGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateGatewayGroupResponseUnmarshaller.Instance;return Invoke<CreateGatewayGroupResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual CreateGatewayGroupResponse CreateGatewayGroup(CreateGatewayGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateGatewayGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateGatewayGroupResponseUnmarshaller.Instance;return Invoke<CreateGatewayGroupResponse>(request, options);}",
    "output": "public CreateGatewayGroupResult createGatewayGroup(CreateGatewayGroupRequest request) {request = beforeClientExecution(request);return executeCreateGatewayGroup(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public CreateParticipantConnectionResult createParticipantConnection(CreateParticipantConnectionRequest request) {request = beforeClientExecution(request);return executeCreateParticipantConnection(request);}",
    "output": "public virtual CreateParticipantConnectionResponse CreateParticipantConnection(CreateParticipantConnectionRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateParticipantConnectionRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateParticipantConnectionResponseUnmarshaller.Instance;return Invoke<CreateParticipantConnectionResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual CreateParticipantConnectionResponse CreateParticipantConnection(CreateParticipantConnectionRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateParticipantConnectionRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateParticipantConnectionResponseUnmarshaller.Instance;return Invoke<CreateParticipantConnectionResponse>(request, options);}",
    "output": "public CreateParticipantConnectionResult createParticipantConnection(CreateParticipantConnectionRequest request) {request = beforeClientExecution(request);return executeCreateParticipantConnection(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public static double irr(double[] income) {return irr(income, 0.1d);}",
    "output": "public static double irr(double[] income){return irr(income, 0.1d);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public static double irr(double[] income){return irr(income, 0.1d);}",
    "output": "public static double irr(double[] income) {return irr(income, 0.1d);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public RegisterWorkspaceDirectoryResult registerWorkspaceDirectory(RegisterWorkspaceDirectoryRequest request) {request = beforeClientExecution(request);return executeRegisterWorkspaceDirectory(request);}",
    "output": "public virtual RegisterWorkspaceDirectoryResponse RegisterWorkspaceDirectory(RegisterWorkspaceDirectoryRequest request){var options = new InvokeOptions();options.RequestMarshaller = RegisterWorkspaceDirectoryRequestMarshaller.Instance;options.ResponseUnmarshaller = RegisterWorkspaceDirectoryResponseUnmarshaller.Instance;return Invoke<RegisterWorkspaceDirectoryResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual RegisterWorkspaceDirectoryResponse RegisterWorkspaceDirectory(RegisterWorkspaceDirectoryRequest request){var options = new InvokeOptions();options.RequestMarshaller = RegisterWorkspaceDirectoryRequestMarshaller.Instance;options.ResponseUnmarshaller = RegisterWorkspaceDirectoryResponseUnmarshaller.Instance;return Invoke<RegisterWorkspaceDirectoryResponse>(request, options);}",
    "output": "public RegisterWorkspaceDirectoryResult registerWorkspaceDirectory(RegisterWorkspaceDirectoryRequest request) {request = beforeClientExecution(request);return executeRegisterWorkspaceDirectory(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public RevertCommand include(AnyObjectId commit) {return include(commit.getName(), commit);}",
    "output": "public virtual NGit.Api.RevertCommand Include(Ref commit){CheckCallable();commits.AddItem(commit);return this;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual NGit.Api.RevertCommand Include(Ref commit){CheckCallable();commits.AddItem(commit);return this;}",
    "output": "public RevertCommand include(AnyObjectId commit) {return include(commit.getName(), commit);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval inumberVE) {ValueEval veText1;try {veText1 = OperandResolver.getSingleValue(inumberVE, srcRowIndex, srcColumnIndex);} catch (EvaluationException e) {return e.getErrorEval();}String iNumber = OperandResolver.coerceValueToString(veText1);Matcher m = COMPLEX_NUMBER_PATTERN.matcher(iNumber);boolean result = m.matches();String imaginary = \"\";if (result) {String imaginaryGroup = m.group(5);boolean hasImaginaryPart = imaginaryGroup.equals(\"i\") || imaginaryGroup.equals(\"j\");if (imaginaryGroup.length() == 0) {return new StringEval(String.valueOf(0));}if (hasImaginaryPart) {String sign = \"\";String imaginarySign = m.group(GROUP3_IMAGINARY_SIGN);if (imaginarySign.length() != 0 && !(imaginarySign.equals(\"+\"))) {sign = imaginarySign;}String groupImaginaryNumber = m.group(GROUP4_IMAGINARY_INTEGER_OR_DOUBLE);if (groupImaginaryNumber.length() != 0) {imaginary = sign + groupImaginaryNumber;} else {imaginary = sign + \"1\";}}} else {return ErrorEval.NUM_ERROR;}return new StringEval(imaginary);}",
    "output": "public override ValueEval Evaluate(int srcRowIndex, int srcColumnIndex, ValueEval inumberVE){ValueEval veText1;try{veText1 = OperandResolver.GetSingleValue(inumberVE, srcRowIndex, srcColumnIndex);}catch (EvaluationException e){return e.GetErrorEval();}String iNumber = OperandResolver.CoerceValueToString(veText1);System.Text.RegularExpressions.Match m = COMPLEX_NUMBER_PATTERN.Match(iNumber);bool result = m.Success && m.Groups[0].Length>0;String imaginary = \"\";if (result == true){String imaginaryGroup = m.Groups[5].Value;bool hasImaginaryPart = imaginaryGroup.Equals(\"i\") || imaginaryGroup.Equals(\"j\");if (imaginaryGroup.Length == 0){return new StringEval(Convert.ToString(0));}if (hasImaginaryPart){String sign = \"\";String imaginarySign = m.Groups[(GROUP3_IMAGINARY_SIGN)].Value;if (imaginarySign.Length != 0 && !(imaginarySign.Equals(\"+\"))){sign = imaginarySign;}String groupImaginaryNumber = m.Groups[(GROUP4_IMAGINARY_INTEGER_OR_DOUBLE)].Value;if (groupImaginaryNumber.Length != 0){imaginary = sign + groupImaginaryNumber;}else{imaginary = sign + \"1\";}}}else{return ErrorEval.NUM_ERROR;}return new StringEval(imaginary);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override ValueEval Evaluate(int srcRowIndex, int srcColumnIndex, ValueEval inumberVE){ValueEval veText1;try{veText1 = OperandResolver.GetSingleValue(inumberVE, srcRowIndex, srcColumnIndex);}catch (EvaluationException e){return e.GetErrorEval();}String iNumber = OperandResolver.CoerceValueToString(veText1);System.Text.RegularExpressions.Match m = COMPLEX_NUMBER_PATTERN.Match(iNumber);bool result = m.Success && m.Groups[0].Length>0;String imaginary = \"\";if (result == true){String imaginaryGroup = m.Groups[5].Value;bool hasImaginaryPart = imaginaryGroup.Equals(\"i\") || imaginaryGroup.Equals(\"j\");if (imaginaryGroup.Length == 0){return new StringEval(Convert.ToString(0));}if (hasImaginaryPart){String sign = \"\";String imaginarySign = m.Groups[(GROUP3_IMAGINARY_SIGN)].Value;if (imaginarySign.Length != 0 && !(imaginarySign.Equals(\"+\"))){sign = imaginarySign;}String groupImaginaryNumber = m.Groups[(GROUP4_IMAGINARY_INTEGER_OR_DOUBLE)].Value;if (groupImaginaryNumber.Length != 0){imaginary = sign + groupImaginaryNumber;}else{imaginary = sign + \"1\";}}}else{return ErrorEval.NUM_ERROR;}return new StringEval(imaginary);}",
    "output": "public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval inumberVE) {ValueEval veText1;try {veText1 = OperandResolver.getSingleValue(inumberVE, srcRowIndex, srcColumnIndex);} catch (EvaluationException e) {return e.getErrorEval();}String iNumber = OperandResolver.coerceValueToString(veText1);Matcher m = COMPLEX_NUMBER_PATTERN.matcher(iNumber);boolean result = m.matches();String imaginary = \"\";if (result) {String imaginaryGroup = m.group(5);boolean hasImaginaryPart = imaginaryGroup.equals(\"i\") || imaginaryGroup.equals(\"j\");if (imaginaryGroup.length() == 0) {return new StringEval(String.valueOf(0));}if (hasImaginaryPart) {String sign = \"\";String imaginarySign = m.group(GROUP3_IMAGINARY_SIGN);if (imaginarySign.length() != 0 && !(imaginarySign.equals(\"+\"))) {sign = imaginarySign;}String groupImaginaryNumber = m.group(GROUP4_IMAGINARY_INTEGER_OR_DOUBLE);if (groupImaginaryNumber.length() != 0) {imaginary = sign + groupImaginaryNumber;} else {imaginary = sign + \"1\";}}} else {return ErrorEval.NUM_ERROR;}return new StringEval(imaginary);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public E pollLast() {Map.Entry<E, Object> entry = backingMap.pollLastEntry();return (entry == null) ? null : entry.getKey();}",
    "output": "public virtual E pollLast(){java.util.MapClass.Entry<E, object> entry = backingMap.pollLastEntry();return (entry == null) ? default(E) : entry.getKey();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual E pollLast(){java.util.MapClass.Entry<E, object> entry = backingMap.pollLastEntry();return (entry == null) ? default(E) : entry.getKey();}",
    "output": "public E pollLast() {Map.Entry<E, Object> entry = backingMap.pollLastEntry();return (entry == null) ? null : entry.getKey();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public int readUShort(){int ch1 = readUByte();int ch2 = readUByte();return (ch2 << 8) + (ch1 << 0);}",
    "output": "public int ReadUShort(){int ch1 = ReadUByte();int ch2 = ReadUByte();return (ch2 << 8) + (ch1 << 0);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public int ReadUShort(){int ch1 = ReadUByte();int ch2 = ReadUByte();return (ch2 << 8) + (ch1 << 0);}",
    "output": "public int readUShort(){int ch1 = readUByte();int ch2 = readUByte();return (ch2 << 8) + (ch1 << 0);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ModifySnapshotAttributeRequest(String snapshotId, SnapshotAttributeName attribute, OperationType operationType) {setSnapshotId(snapshotId);setAttribute(attribute.toString());setOperationType(operationType.toString());}",
    "output": "public ModifySnapshotAttributeRequest(string snapshotId, SnapshotAttributeName attribute, OperationType operationType){_snapshotId = snapshotId;_attribute = attribute;_operationType = operationType;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public ModifySnapshotAttributeRequest(string snapshotId, SnapshotAttributeName attribute, OperationType operationType){_snapshotId = snapshotId;_attribute = attribute;_operationType = operationType;}",
    "output": "public ModifySnapshotAttributeRequest(String snapshotId, SnapshotAttributeName attribute, OperationType operationType) {setSnapshotId(snapshotId);setAttribute(attribute.toString());setOperationType(operationType.toString());}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ListBonusPaymentsResult listBonusPayments(ListBonusPaymentsRequest request) {request = beforeClientExecution(request);return executeListBonusPayments(request);}",
    "output": "public virtual ListBonusPaymentsResponse ListBonusPayments(ListBonusPaymentsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListBonusPaymentsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListBonusPaymentsResponseUnmarshaller.Instance;return Invoke<ListBonusPaymentsResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual ListBonusPaymentsResponse ListBonusPayments(ListBonusPaymentsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListBonusPaymentsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListBonusPaymentsResponseUnmarshaller.Instance;return Invoke<ListBonusPaymentsResponse>(request, options);}",
    "output": "public ListBonusPaymentsResult listBonusPayments(ListBonusPaymentsRequest request) {request = beforeClientExecution(request);return executeListBonusPayments(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public V get(CharSequence cs) {if(cs == null)throw new NullPointerException();return null;}",
    "output": "public override V Get(char[] text){if (text == null){throw new ArgumentNullException(\"text\");}return default(V);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override V Get(char[] text){if (text == null){throw new ArgumentNullException(\"text\");}return default(V);}",
    "output": "public V get(CharSequence cs) {if(cs == null)throw new NullPointerException();return null;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public TokenFilter create(TokenStream input) {CommonGramsFilter commonGrams = (CommonGramsFilter) super.create(input);return new CommonGramsQueryFilter(commonGrams);}",
    "output": "public override TokenStream Create(TokenStream input){var commonGrams = (CommonGramsFilter)base.Create(input);return new CommonGramsQueryFilter(commonGrams);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override TokenStream Create(TokenStream input){var commonGrams = (CommonGramsFilter)base.Create(input);return new CommonGramsQueryFilter(commonGrams);}",
    "output": "public TokenFilter create(TokenStream input) {CommonGramsFilter commonGrams = (CommonGramsFilter) super.create(input);return new CommonGramsQueryFilter(commonGrams);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String getPath() {return path;}",
    "output": "public virtual string GetPath(){return path;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual string GetPath(){return path;}",
    "output": "public String getPath() {return path;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public InitiateMultipartUploadResult initiateMultipartUpload(InitiateMultipartUploadRequest request) {request = beforeClientExecution(request);return executeInitiateMultipartUpload(request);}",
    "output": "public virtual InitiateMultipartUploadResponse InitiateMultipartUpload(InitiateMultipartUploadRequest request){var options = new InvokeOptions();options.RequestMarshaller = InitiateMultipartUploadRequestMarshaller.Instance;options.ResponseUnmarshaller = InitiateMultipartUploadResponseUnmarshaller.Instance;return Invoke<InitiateMultipartUploadResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual InitiateMultipartUploadResponse InitiateMultipartUpload(InitiateMultipartUploadRequest request){var options = new InvokeOptions();options.RequestMarshaller = InitiateMultipartUploadRequestMarshaller.Instance;options.ResponseUnmarshaller = InitiateMultipartUploadResponseUnmarshaller.Instance;return Invoke<InitiateMultipartUploadResponse>(request, options);}",
    "output": "public InitiateMultipartUploadResult initiateMultipartUpload(InitiateMultipartUploadRequest request) {request = beforeClientExecution(request);return executeInitiateMultipartUpload(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public StringBuilder insert(int offset, int i) {insert0(offset, Integer.toString(i));return this;}",
    "output": "public java.lang.StringBuilder insert(int offset, int i){insert0(offset, System.Convert.ToString(i));return this;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public java.lang.StringBuilder insert(int offset, int i){insert0(offset, System.Convert.ToString(i));return this;}",
    "output": "public StringBuilder insert(int offset, int i) {insert0(offset, Integer.toString(i));return this;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void decode(long[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {for (int i = 0; i < iterations; ++i) {final long block = blocks[blocksOffset++];for (int shift = 62; shift >= 0; shift -= 2) {values[valuesOffset++] = (int) ((block >>> shift) & 3);}}}",
    "output": "public override void Decode(long[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations){for (int i = 0; i < iterations; ++i){long block = blocks[blocksOffset++];for (int shift = 62; shift >= 0; shift -= 2){values[valuesOffset++] = (int)(((long)((ulong)block >> shift)) & 3);}}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override void Decode(long[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations){for (int i = 0; i < iterations; ++i){long block = blocks[blocksOffset++];for (int shift = 62; shift >= 0; shift -= 2){values[valuesOffset++] = (int)(((long)((ulong)block >> shift)) & 3);}}}",
    "output": "public void decode(long[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {for (int i = 0; i < iterations; ++i) {final long block = blocks[blocksOffset++];for (int shift = 62; shift >= 0; shift -= 2) {values[valuesOffset++] = (int) ((block >>> shift) & 3);}}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public TokenStream create(TokenStream input) {return new ElisionFilter(input, articles);}",
    "output": "public override TokenStream Create(TokenStream input){return new ElisionFilter(input, articles);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override TokenStream Create(TokenStream input){return new ElisionFilter(input, articles);}",
    "output": "public TokenStream create(TokenStream input) {return new ElisionFilter(input, articles);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public boolean eat(Row in, int remap[]) {int sum = 0;for (Iterator<Cell> i = in.cells.values().iterator(); i.hasNext();) {Cell c = i.next();sum += c.cnt;if (c.ref >= 0) {if (remap[c.ref] == 0) {c.ref = -1;}}}int frame = sum / 10;boolean live = false;for (Iterator<Cell> i = in.cells.values().iterator(); i.hasNext();) {Cell c = i.next();if (c.cnt < frame && c.cmd >= 0) {c.cnt = 0;c.cmd = -1;}if (c.cmd >= 0 || c.ref >= 0) {live |= true;}}return !live;}",
    "output": "public bool Eat(Row @in, int[] remap){int sum = 0;foreach (Cell c in @in.cells.Values){sum += c.cnt;if (c.@ref >= 0){if (remap[c.@ref] == 0){c.@ref = -1;}}}int frame = sum / 10;bool live = false;foreach (Cell c in @in.cells.Values){if (c.cnt < frame && c.cmd >= 0){c.cnt = 0;c.cmd = -1;}if (c.cmd >= 0 || c.@ref >= 0){live |= true;}}return !live;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public bool Eat(Row @in, int[] remap){int sum = 0;foreach (Cell c in @in.cells.Values){sum += c.cnt;if (c.@ref >= 0){if (remap[c.@ref] == 0){c.@ref = -1;}}}int frame = sum / 10;bool live = false;foreach (Cell c in @in.cells.Values){if (c.cnt < frame && c.cmd >= 0){c.cnt = 0;c.cmd = -1;}if (c.cmd >= 0 || c.@ref >= 0){live |= true;}}return !live;}",
    "output": "public boolean eat(Row in, int remap[]) {int sum = 0;for (Iterator<Cell> i = in.cells.values().iterator(); i.hasNext();) {Cell c = i.next();sum += c.cnt;if (c.ref >= 0) {if (remap[c.ref] == 0) {c.ref = -1;}}}int frame = sum / 10;boolean live = false;for (Iterator<Cell> i = in.cells.values().iterator(); i.hasNext();) {Cell c = i.next();if (c.cnt < frame && c.cmd >= 0) {c.cnt = 0;c.cmd = -1;}if (c.cmd >= 0 || c.ref >= 0) {live |= true;}}return !live;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "final public Token getToken(int index) {Token t = jj_lookingAhead ? jj_scanpos : token;for (int i = 0; i < index; i++) {if (t.next != null) t = t.next;else t = t.next = token_source.getNextToken();}return t;}",
    "output": "public Token GetToken(int index){Token t = Token;for (int i = 0; i < index; i++){if (t.Next != null) t = t.Next;else t = t.Next = TokenSource.GetNextToken();}return t;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public Token GetToken(int index){Token t = Token;for (int i = 0; i < index; i++){if (t.Next != null) t = t.Next;else t = t.Next = TokenSource.GetNextToken();}return t;}",
    "output": "final public Token getToken(int index) {Token t = jj_lookingAhead ? jj_scanpos : token;for (int i = 0; i < index; i++) {if (t.next != null) t = t.next;else t = t.next = token_source.getNextToken();}return t;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String toString() {StringBuilder sb = new StringBuilder();sb.append(getClass().getName()).append(\" [ARRAY]\\n\");sb.append(\" range=\").append(getRange()).append(\"\\n\");sb.append(\" options=\").append(HexDump.shortToHex(_options)).append(\"\\n\");sb.append(\" notUsed=\").append(HexDump.intToHex(_field3notUsed)).append(\"\\n\");sb.append(\" formula:\").append(\"\\n\");Ptg[] ptgs = _formula.getTokens();for (int i = 0; i < ptgs.length; i++) {Ptg ptg = ptgs[i];sb.append(ptg).append(ptg.getRVAType()).append(\"\\n\");}sb.append(\"]\");return sb.toString();}",
    "output": "public override String ToString(){StringBuilder sb = new StringBuilder();sb.Append(GetType().Name).Append(\" [ARRAY]\\n\");sb.Append(\" range=\").Append(Range.ToString()).Append(\"\\n\");sb.Append(\" options=\").Append(HexDump.ShortToHex(_options)).Append(\"\\n\");sb.Append(\" notUsed=\").Append(HexDump.IntToHex(_field3notUsed)).Append(\"\\n\");sb.Append(\" formula:\").Append(\"\\n\");Ptg[] ptgs = _formula.Tokens;for (int i = 0; i < ptgs.Length; i++){Ptg ptg = ptgs[i];sb.Append(ptg.ToString()).Append(ptg.RVAType).Append(\"\\n\");}sb.Append(\"]\");return sb.ToString();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override String ToString(){StringBuilder sb = new StringBuilder();sb.Append(GetType().Name).Append(\" [ARRAY]\\n\");sb.Append(\" range=\").Append(Range.ToString()).Append(\"\\n\");sb.Append(\" options=\").Append(HexDump.ShortToHex(_options)).Append(\"\\n\");sb.Append(\" notUsed=\").Append(HexDump.IntToHex(_field3notUsed)).Append(\"\\n\");sb.Append(\" formula:\").Append(\"\\n\");Ptg[] ptgs = _formula.Tokens;for (int i = 0; i < ptgs.Length; i++){Ptg ptg = ptgs[i];sb.Append(ptg.ToString()).Append(ptg.RVAType).Append(\"\\n\");}sb.Append(\"]\");return sb.ToString();}",
    "output": "public String toString() {StringBuilder sb = new StringBuilder();sb.append(getClass().getName()).append(\" [ARRAY]\\n\");sb.append(\" range=\").append(getRange()).append(\"\\n\");sb.append(\" options=\").append(HexDump.shortToHex(_options)).append(\"\\n\");sb.append(\" notUsed=\").append(HexDump.intToHex(_field3notUsed)).append(\"\\n\");sb.append(\" formula:\").append(\"\\n\");Ptg[] ptgs = _formula.getTokens();for (int i = 0; i < ptgs.length; i++) {Ptg ptg = ptgs[i];sb.append(ptg).append(ptg.getRVAType()).append(\"\\n\");}sb.append(\"]\");return sb.toString();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public GetFolderResult getFolder(GetFolderRequest request) {request = beforeClientExecution(request);return executeGetFolder(request);}",
    "output": "public virtual GetFolderResponse GetFolder(GetFolderRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetFolderRequestMarshaller.Instance;options.ResponseUnmarshaller = GetFolderResponseUnmarshaller.Instance;return Invoke<GetFolderResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual GetFolderResponse GetFolder(GetFolderRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetFolderRequestMarshaller.Instance;options.ResponseUnmarshaller = GetFolderResponseUnmarshaller.Instance;return Invoke<GetFolderResponse>(request, options);}",
    "output": "public GetFolderResult getFolder(GetFolderRequest request) {request = beforeClientExecution(request);return executeGetFolder(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "@Override public void add(int location, E object) {throw new UnsupportedOperationException();}",
    "output": "public virtual void add(int location, E @object){throw new System.NotSupportedException();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual void add(int location, E @object){throw new System.NotSupportedException();}",
    "output": "@Override public void add(int location, E object) {throw new UnsupportedOperationException();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public PositiveScoresOnlyCollector(Collector in) {super(in);}",
    "output": "public PositiveScoresOnlyCollector(ICollector c){this.c = c;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public PositiveScoresOnlyCollector(ICollector c){this.c = c;}",
    "output": "public PositiveScoresOnlyCollector(Collector in) {super(in);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public CreateRepoBuildRuleRequest() {super(\"cr\", \"2016-06-07\", \"CreateRepoBuildRule\", \"cr\");setUriPattern(\"/repos/[RepoNamespace]/[RepoName]/rules\");setMethod(MethodType.PUT);}",
    "output": "public CreateRepoBuildRuleRequest(): base(\"cr\", \"2016-06-07\", \"CreateRepoBuildRule\", \"cr\", \"openAPI\"){UriPattern = \"/repos/[RepoNamespace]/[RepoName]/rules\";Method = MethodType.PUT;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public CreateRepoBuildRuleRequest(): base(\"cr\", \"2016-06-07\", \"CreateRepoBuildRule\", \"cr\", \"openAPI\"){UriPattern = \"/repos/[RepoNamespace]/[RepoName]/rules\";Method = MethodType.PUT;}",
    "output": "public CreateRepoBuildRuleRequest() {super(\"cr\", \"2016-06-07\", \"CreateRepoBuildRule\", \"cr\");setUriPattern(\"/repos/[RepoNamespace]/[RepoName]/rules\");setMethod(MethodType.PUT);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public BaseRef(AreaEval ae) {_refEval = null;_areaEval = ae;_firstRowIndex = ae.getFirstRow();_firstColumnIndex = ae.getFirstColumn();_height = ae.getLastRow() - ae.getFirstRow() + 1;_width = ae.getLastColumn() - ae.getFirstColumn() + 1;}",
    "output": "public BaseRef(RefEval re){_refEval = re;_areaEval = null;_firstRowIndex = re.Row;_firstColumnIndex = re.Column;_height = 1;_width = 1;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public BaseRef(RefEval re){_refEval = re;_areaEval = null;_firstRowIndex = re.Row;_firstColumnIndex = re.Column;_height = 1;_width = 1;}",
    "output": "public BaseRef(AreaEval ae) {_refEval = null;_areaEval = ae;_firstRowIndex = ae.getFirstRow();_firstColumnIndex = ae.getFirstColumn();_height = ae.getLastRow() - ae.getFirstRow() + 1;_width = ae.getLastColumn() - ae.getFirstColumn() + 1;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DrawingManager2( EscherDggRecord dgg ) {this.dgg = dgg;}",
    "output": "public DrawingManager2(EscherDggRecord dgg){this.dgg = dgg;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public DrawingManager2(EscherDggRecord dgg){this.dgg = dgg;}",
    "output": "public DrawingManager2( EscherDggRecord dgg ) {this.dgg = dgg;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void reset() {if (!first())reset(raw);}",
    "output": "public override void Reset(){if (!First){Reset(raw);}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override void Reset(){if (!First){Reset(raw);}}",
    "output": "public void reset() {if (!first())reset(raw);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public final CharsetDecoder reset() {status = INIT;implReset();return this;}",
    "output": "public java.nio.charset.CharsetDecoder reset(){status = INIT;implReset();return this;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public java.nio.charset.CharsetDecoder reset(){status = INIT;implReset();return this;}",
    "output": "public final CharsetDecoder reset() {status = INIT;implReset();return this;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public BufferedReader(Reader in, int size) {super(in);if (size <= 0) {throw new IllegalArgumentException(\"size <= 0\");}this.in = in;buf = new char[size];}",
    "output": "public BufferedReader(java.io.Reader @in, int size) : base(@in){if (size <= 0){throw new System.ArgumentException(\"size <= 0\");}this.@in = @in;buf = new char[size];}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public BufferedReader(java.io.Reader @in, int size) : base(@in){if (size <= 0){throw new System.ArgumentException(\"size <= 0\");}this.@in = @in;buf = new char[size];}",
    "output": "public BufferedReader(Reader in, int size) {super(in);if (size <= 0) {throw new IllegalArgumentException(\"size <= 0\");}this.in = in;buf = new char[size];}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DescribeCodeRepositoryResult describeCodeRepository(DescribeCodeRepositoryRequest request) {request = beforeClientExecution(request);return executeDescribeCodeRepository(request);}",
    "output": "public virtual DescribeCodeRepositoryResponse DescribeCodeRepository(DescribeCodeRepositoryRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeCodeRepositoryRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeCodeRepositoryResponseUnmarshaller.Instance;return Invoke<DescribeCodeRepositoryResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DescribeCodeRepositoryResponse DescribeCodeRepository(DescribeCodeRepositoryRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeCodeRepositoryRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeCodeRepositoryResponseUnmarshaller.Instance;return Invoke<DescribeCodeRepositoryResponse>(request, options);}",
    "output": "public DescribeCodeRepositoryResult describeCodeRepository(DescribeCodeRepositoryRequest request) {request = beforeClientExecution(request);return executeDescribeCodeRepository(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DBSubnetGroup createDBSubnetGroup(CreateDBSubnetGroupRequest request) {request = beforeClientExecution(request);return executeCreateDBSubnetGroup(request);}",
    "output": "public virtual CreateDBSubnetGroupResponse CreateDBSubnetGroup(CreateDBSubnetGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateDBSubnetGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateDBSubnetGroupResponseUnmarshaller.Instance;return Invoke<CreateDBSubnetGroupResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual CreateDBSubnetGroupResponse CreateDBSubnetGroup(CreateDBSubnetGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateDBSubnetGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateDBSubnetGroupResponseUnmarshaller.Instance;return Invoke<CreateDBSubnetGroupResponse>(request, options);}",
    "output": "public DBSubnetGroup createDBSubnetGroup(CreateDBSubnetGroupRequest request) {request = beforeClientExecution(request);return executeCreateDBSubnetGroup(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public RenameBranchCommand setOldName(String oldName) {checkCallable();this.oldName = oldName;return this;}",
    "output": "public virtual NGit.Api.RenameBranchCommand SetOldName(string oldName){CheckCallable();this.oldName = oldName;return this;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual NGit.Api.RenameBranchCommand SetOldName(string oldName){CheckCallable();this.oldName = oldName;return this;}",
    "output": "public RenameBranchCommand setOldName(String oldName) {checkCallable();this.oldName = oldName;return this;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DeleteBranchCommand setForce(boolean force) {checkCallable();this.force = force;return this;}",
    "output": "public virtual NGit.Api.DeleteBranchCommand SetForce(bool force){CheckCallable();this.force = force;return this;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual NGit.Api.DeleteBranchCommand SetForce(bool force){CheckCallable();this.force = force;return this;}",
    "output": "public DeleteBranchCommand setForce(boolean force) {checkCallable();this.force = force;return this;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public StopCompilationJobResult stopCompilationJob(StopCompilationJobRequest request) {request = beforeClientExecution(request);return executeStopCompilationJob(request);}",
    "output": "public virtual StopCompilationJobResponse StopCompilationJob(StopCompilationJobRequest request){var options = new InvokeOptions();options.RequestMarshaller = StopCompilationJobRequestMarshaller.Instance;options.ResponseUnmarshaller = StopCompilationJobResponseUnmarshaller.Instance;return Invoke<StopCompilationJobResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual StopCompilationJobResponse StopCompilationJob(StopCompilationJobRequest request){var options = new InvokeOptions();options.RequestMarshaller = StopCompilationJobRequestMarshaller.Instance;options.ResponseUnmarshaller = StopCompilationJobResponseUnmarshaller.Instance;return Invoke<StopCompilationJobResponse>(request, options);}",
    "output": "public StopCompilationJobResult stopCompilationJob(StopCompilationJobRequest request) {request = beforeClientExecution(request);return executeStopCompilationJob(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public synchronized final void incrementSecondaryProgressBy(int diff) {setSecondaryProgress(mSecondaryProgress + diff);}",
    "output": "public void incrementSecondaryProgressBy(int diff){lock (this){setSecondaryProgress(mSecondaryProgress + diff);}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public void incrementSecondaryProgressBy(int diff){lock (this){setSecondaryProgress(mSecondaryProgress + diff);}}",
    "output": "public synchronized final void incrementSecondaryProgressBy(int diff) {setSecondaryProgress(mSecondaryProgress + diff);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public int[] clear() {return bytesStart = null;}",
    "output": "public override int[] Clear(){return bytesStart = null;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override int[] Clear(){return bytesStart = null;}",
    "output": "public int[] clear() {return bytesStart = null;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String getRawPath() {return path;}",
    "output": "public string getRawPath(){return path;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public string getRawPath(){return path;}",
    "output": "public String getRawPath() {return path;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public GetUserSourceAccountRequest() {super(\"cr\", \"2016-06-07\", \"GetUserSourceAccount\", \"cr\");setUriPattern(\"/users/sourceAccount\");setMethod(MethodType.GET);}",
    "output": "public GetUserSourceAccountRequest(): base(\"cr\", \"2016-06-07\", \"GetUserSourceAccount\", \"cr\", \"openAPI\"){UriPattern = \"/users/sourceAccount\";Method = MethodType.GET;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public GetUserSourceAccountRequest(): base(\"cr\", \"2016-06-07\", \"GetUserSourceAccount\", \"cr\", \"openAPI\"){UriPattern = \"/users/sourceAccount\";Method = MethodType.GET;}",
    "output": "public GetUserSourceAccountRequest() {super(\"cr\", \"2016-06-07\", \"GetUserSourceAccount\", \"cr\");setUriPattern(\"/users/sourceAccount\");setMethod(MethodType.GET);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public CreateExportJobResult createExportJob(CreateExportJobRequest request) {request = beforeClientExecution(request);return executeCreateExportJob(request);}",
    "output": "public virtual CreateExportJobResponse CreateExportJob(CreateExportJobRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateExportJobRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateExportJobResponseUnmarshaller.Instance;return Invoke<CreateExportJobResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual CreateExportJobResponse CreateExportJob(CreateExportJobRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateExportJobRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateExportJobResponseUnmarshaller.Instance;return Invoke<CreateExportJobResponse>(request, options);}",
    "output": "public CreateExportJobResult createExportJob(CreateExportJobRequest request) {request = beforeClientExecution(request);return executeCreateExportJob(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public CreateDedicatedIpPoolResult createDedicatedIpPool(CreateDedicatedIpPoolRequest request) {request = beforeClientExecution(request);return executeCreateDedicatedIpPool(request);}",
    "output": "public virtual CreateDedicatedIpPoolResponse CreateDedicatedIpPool(CreateDedicatedIpPoolRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateDedicatedIpPoolRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateDedicatedIpPoolResponseUnmarshaller.Instance;return Invoke<CreateDedicatedIpPoolResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual CreateDedicatedIpPoolResponse CreateDedicatedIpPool(CreateDedicatedIpPoolRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateDedicatedIpPoolRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateDedicatedIpPoolResponseUnmarshaller.Instance;return Invoke<CreateDedicatedIpPoolResponse>(request, options);}",
    "output": "public CreateDedicatedIpPoolResult createDedicatedIpPool(CreateDedicatedIpPoolRequest request) {request = beforeClientExecution(request);return executeCreateDedicatedIpPool(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public boolean equals(Object obj) {if (this == obj) {return true;}if (obj == null) {return false;}if (obj instanceof HSSFCellStyle) {final HSSFCellStyle other = (HSSFCellStyle) obj;if (_format == null) {if (other._format != null) {return false;}} else if (!_format.equals(other._format)) {return false;}if (_index != other._index) {return false;}return true;}return false;}",
    "output": "public override bool Equals(Object obj){if (this == obj) return true;if (obj == null) return false;if (obj is HSSFCellStyle){HSSFCellStyle other = (HSSFCellStyle)obj;if (_format == null){if (other._format != null)return false;}else if (!_format.Equals(other._format))return false;if (index != other.index)return false;return true;}return false;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override bool Equals(Object obj){if (this == obj) return true;if (obj == null) return false;if (obj is HSSFCellStyle){HSSFCellStyle other = (HSSFCellStyle)obj;if (_format == null){if (other._format != null)return false;}else if (!_format.Equals(other._format))return false;if (index != other.index)return false;return true;}return false;}",
    "output": "public boolean equals(Object obj) {if (this == obj) {return true;}if (obj == null) {return false;}if (obj instanceof HSSFCellStyle) {final HSSFCellStyle other = (HSSFCellStyle) obj;if (_format == null) {if (other._format != null) {return false;}} else if (!_format.equals(other._format)) {return false;}if (_index != other._index) {return false;}return true;}return false;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ReleaseHostsResult releaseHosts(ReleaseHostsRequest request) {request = beforeClientExecution(request);return executeReleaseHosts(request);}",
    "output": "public virtual ReleaseHostsResponse ReleaseHosts(ReleaseHostsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ReleaseHostsRequestMarshaller.Instance;options.ResponseUnmarshaller = ReleaseHostsResponseUnmarshaller.Instance;return Invoke<ReleaseHostsResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual ReleaseHostsResponse ReleaseHosts(ReleaseHostsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ReleaseHostsRequestMarshaller.Instance;options.ResponseUnmarshaller = ReleaseHostsResponseUnmarshaller.Instance;return Invoke<ReleaseHostsResponse>(request, options);}",
    "output": "public ReleaseHostsResult releaseHosts(ReleaseHostsRequest request) {request = beforeClientExecution(request);return executeReleaseHosts(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public boolean equals(Object object) {if (this == object) {return true;}if (object instanceof Set) {Set<?> s = (Set<?>) object;try {return size() == s.size() && containsAll(s);} catch (NullPointerException ignored) {return false;} catch (ClassCastException ignored) {return false;}}return false;}",
    "output": "public override bool Equals(object @object){if (this == @object){return true;}if (@object is java.util.Set<E>){java.util.Set<E> s = (java.util.Set<E>)@object;try{return size() == s.size() && containsAll(s);}catch (System.ArgumentNullException){return false;}catch (System.InvalidCastException){return false;}}return false;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override bool Equals(object @object){if (this == @object){return true;}if (@object is java.util.Set<E>){java.util.Set<E> s = (java.util.Set<E>)@object;try{return size() == s.size() && containsAll(s);}catch (System.ArgumentNullException){return false;}catch (System.InvalidCastException){return false;}}return false;}",
    "output": "public boolean equals(Object object) {if (this == object) {return true;}if (object instanceof Set) {Set<?> s = (Set<?>) object;try {return size() == s.size() && containsAll(s);} catch (NullPointerException ignored) {return false;} catch (ClassCastException ignored) {return false;}}return false;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void setRefLogMessage(String msg, boolean appendStatus) {customRefLog = true;if (msg == null && !appendStatus) {disableRefLog();} else if (msg == null && appendStatus) {refLogMessage = \"\"; refLogIncludeResult = true;} else {refLogMessage = msg;refLogIncludeResult = appendStatus;}}",
    "output": "public virtual void SetRefLogMessage(string msg, bool appendStatus){if (msg == null && !appendStatus){DisableRefLog();}else{if (msg == null && appendStatus){refLogMessage = string.Empty;refLogIncludeResult = true;}else{refLogMessage = msg;refLogIncludeResult = appendStatus;}}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual void SetRefLogMessage(string msg, bool appendStatus){if (msg == null && !appendStatus){DisableRefLog();}else{if (msg == null && appendStatus){refLogMessage = string.Empty;refLogIncludeResult = true;}else{refLogMessage = msg;refLogIncludeResult = appendStatus;}}}",
    "output": "public void setRefLogMessage(String msg, boolean appendStatus) {customRefLog = true;if (msg == null && !appendStatus) {disableRefLog();} else if (msg == null && appendStatus) {refLogMessage = \"\"; refLogIncludeResult = true;} else {refLogMessage = msg;refLogIncludeResult = appendStatus;}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public StreamIDRecord(RecordInputStream in) {idstm = in.readShort();}",
    "output": "public StreamIDRecord(RecordInputStream in1){idstm = in1.ReadShort();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public StreamIDRecord(RecordInputStream in1){idstm = in1.ReadShort();}",
    "output": "public StreamIDRecord(RecordInputStream in) {idstm = in.readShort();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public RecognizeCarRequest() {super(\"visionai-poc\", \"2020-04-08\", \"RecognizeCar\");setMethod(MethodType.POST);}",
    "output": "public RecognizeCarRequest(): base(\"visionai-poc\", \"2020-04-08\", \"RecognizeCar\"){Method = MethodType.POST;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public RecognizeCarRequest(): base(\"visionai-poc\", \"2020-04-08\", \"RecognizeCar\"){Method = MethodType.POST;}",
    "output": "public RecognizeCarRequest() {super(\"visionai-poc\", \"2020-04-08\", \"RecognizeCar\");setMethod(MethodType.POST);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public final ByteOrder order() {return ByteOrder.nativeOrder();}",
    "output": "public sealed override java.nio.ByteOrder order(){return java.nio.ByteOrder.nativeOrder();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public sealed override java.nio.ByteOrder order(){return java.nio.ByteOrder.nativeOrder();}",
    "output": "public final ByteOrder order() {return ByteOrder.nativeOrder();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public int getAheadCount() {return aheadCount;}",
    "output": "public virtual int GetAheadCount(){return aheadCount;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual int GetAheadCount(){return aheadCount;}",
    "output": "public int getAheadCount() {return aheadCount;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public boolean isNewFragment() {return false;}",
    "output": "public virtual bool IsNewFragment(){return false;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual bool IsNewFragment(){return false;}",
    "output": "public boolean isNewFragment() {return false;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public GetCloudFrontOriginAccessIdentityConfigResult getCloudFrontOriginAccessIdentityConfig(GetCloudFrontOriginAccessIdentityConfigRequest request) {request = beforeClientExecution(request);return executeGetCloudFrontOriginAccessIdentityConfig(request);}",
    "output": "public virtual GetCloudFrontOriginAccessIdentityConfigResponse GetCloudFrontOriginAccessIdentityConfig(GetCloudFrontOriginAccessIdentityConfigRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetCloudFrontOriginAccessIdentityConfigRequestMarshaller.Instance;options.ResponseUnmarshaller = GetCloudFrontOriginAccessIdentityConfigResponseUnmarshaller.Instance;return Invoke<GetCloudFrontOriginAccessIdentityConfigResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual GetCloudFrontOriginAccessIdentityConfigResponse GetCloudFrontOriginAccessIdentityConfig(GetCloudFrontOriginAccessIdentityConfigRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetCloudFrontOriginAccessIdentityConfigRequestMarshaller.Instance;options.ResponseUnmarshaller = GetCloudFrontOriginAccessIdentityConfigResponseUnmarshaller.Instance;return Invoke<GetCloudFrontOriginAccessIdentityConfigResponse>(request, options);}",
    "output": "public GetCloudFrontOriginAccessIdentityConfigResult getCloudFrontOriginAccessIdentityConfig(GetCloudFrontOriginAccessIdentityConfigRequest request) {request = beforeClientExecution(request);return executeGetCloudFrontOriginAccessIdentityConfig(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public boolean matches(int symbol, int minVocabSymbol, int maxVocabSymbol) {return label == symbol;}",
    "output": "public override bool Matches(int symbol, int minVocabSymbol, int maxVocabSymbol){return token == symbol;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override bool Matches(int symbol, int minVocabSymbol, int maxVocabSymbol){return token == symbol;}",
    "output": "public boolean matches(int symbol, int minVocabSymbol, int maxVocabSymbol) {return label == symbol;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DeleteTransitGatewayResult deleteTransitGateway(DeleteTransitGatewayRequest request) {request = beforeClientExecution(request);return executeDeleteTransitGateway(request);}",
    "output": "public virtual DeleteTransitGatewayResponse DeleteTransitGateway(DeleteTransitGatewayRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteTransitGatewayRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteTransitGatewayResponseUnmarshaller.Instance;return Invoke<DeleteTransitGatewayResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DeleteTransitGatewayResponse DeleteTransitGateway(DeleteTransitGatewayRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteTransitGatewayRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteTransitGatewayResponseUnmarshaller.Instance;return Invoke<DeleteTransitGatewayResponse>(request, options);}",
    "output": "public DeleteTransitGatewayResult deleteTransitGateway(DeleteTransitGatewayRequest request) {request = beforeClientExecution(request);return executeDeleteTransitGateway(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public static byte[] grow(byte[] array, int minSize) {assert minSize >= 0: \"size must be positive (got \" + minSize + \"): likely integer overflow?\";if (array.length < minSize) {return growExact(array, oversize(minSize, Byte.BYTES));} else return array;}",
    "output": "public static double[] Grow(double[] array, int minSize){Debug.Assert(minSize >= 0, \"size must be positive (got \" + minSize + \"): likely integer overflow?\");if (array.Length < minSize){double[] newArray = new double[Oversize(minSize, RamUsageEstimator.NUM_BYTES_DOUBLE)];Array.Copy(array, 0, newArray, 0, array.Length);return newArray;}else{return array;}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public static double[] Grow(double[] array, int minSize){Debug.Assert(minSize >= 0, \"size must be positive (got \" + minSize + \"): likely integer overflow?\");if (array.Length < minSize){double[] newArray = new double[Oversize(minSize, RamUsageEstimator.NUM_BYTES_DOUBLE)];Array.Copy(array, 0, newArray, 0, array.Length);return newArray;}else{return array;}}",
    "output": "public static byte[] grow(byte[] array, int minSize) {assert minSize >= 0: \"size must be positive (got \" + minSize + \"): likely integer overflow?\";if (array.length < minSize) {return growExact(array, oversize(minSize, Byte.BYTES));} else return array;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public CreateTransactionRequest() {super(\"CloudPhoto\", \"2017-07-11\", \"CreateTransaction\", \"cloudphoto\");setProtocol(ProtocolType.HTTPS);}",
    "output": "public CreateTransactionRequest(): base(\"CloudPhoto\", \"2017-07-11\", \"CreateTransaction\", \"cloudphoto\", \"openAPI\"){Protocol = ProtocolType.HTTPS;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public CreateTransactionRequest(): base(\"CloudPhoto\", \"2017-07-11\", \"CreateTransaction\", \"cloudphoto\", \"openAPI\"){Protocol = ProtocolType.HTTPS;}",
    "output": "public CreateTransactionRequest() {super(\"CloudPhoto\", \"2017-07-11\", \"CreateTransaction\", \"cloudphoto\");setProtocol(ProtocolType.HTTPS);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public BatchRefUpdate setRefLogIdent(PersonIdent pi) {refLogIdent = pi;return this;}",
    "output": "public virtual NGit.BatchRefUpdate SetRefLogIdent(PersonIdent pi){refLogIdent = pi;return this;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual NGit.BatchRefUpdate SetRefLogIdent(PersonIdent pi){refLogIdent = pi;return this;}",
    "output": "public BatchRefUpdate setRefLogIdent(PersonIdent pi) {refLogIdent = pi;return this;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public GetLaunchTemplateDataResult getLaunchTemplateData(GetLaunchTemplateDataRequest request) {request = beforeClientExecution(request);return executeGetLaunchTemplateData(request);}",
    "output": "public virtual GetLaunchTemplateDataResponse GetLaunchTemplateData(GetLaunchTemplateDataRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetLaunchTemplateDataRequestMarshaller.Instance;options.ResponseUnmarshaller = GetLaunchTemplateDataResponseUnmarshaller.Instance;return Invoke<GetLaunchTemplateDataResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual GetLaunchTemplateDataResponse GetLaunchTemplateData(GetLaunchTemplateDataRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetLaunchTemplateDataRequestMarshaller.Instance;options.ResponseUnmarshaller = GetLaunchTemplateDataResponseUnmarshaller.Instance;return Invoke<GetLaunchTemplateDataResponse>(request, options);}",
    "output": "public GetLaunchTemplateDataResult getLaunchTemplateData(GetLaunchTemplateDataRequest request) {request = beforeClientExecution(request);return executeGetLaunchTemplateData(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ParseInfo(ProfilingATNSimulator atnSimulator) {this.atnSimulator = atnSimulator;}",
    "output": "public ParseInfo(ProfilingATNSimulator atnSimulator){this.atnSimulator = atnSimulator;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public ParseInfo(ProfilingATNSimulator atnSimulator){this.atnSimulator = atnSimulator;}",
    "output": "public ParseInfo(ProfilingATNSimulator atnSimulator) {this.atnSimulator = atnSimulator;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public SimpleQQParser(String qqNames[], String indexField) {this.qqNames = qqNames;this.indexField = indexField;}",
    "output": "public SimpleQQParser(string[] qqNames, string indexField){this.qqNames = qqNames;this.indexField = indexField;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public SimpleQQParser(string[] qqNames, string indexField){this.qqNames = qqNames;this.indexField = indexField;}",
    "output": "public SimpleQQParser(String qqNames[], String indexField) {this.qqNames = qqNames;this.indexField = indexField;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DBCluster promoteReadReplicaDBCluster(PromoteReadReplicaDBClusterRequest request) {request = beforeClientExecution(request);return executePromoteReadReplicaDBCluster(request);}",
    "output": "public virtual PromoteReadReplicaDBClusterResponse PromoteReadReplicaDBCluster(PromoteReadReplicaDBClusterRequest request){var options = new InvokeOptions();options.RequestMarshaller = PromoteReadReplicaDBClusterRequestMarshaller.Instance;options.ResponseUnmarshaller = PromoteReadReplicaDBClusterResponseUnmarshaller.Instance;return Invoke<PromoteReadReplicaDBClusterResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual PromoteReadReplicaDBClusterResponse PromoteReadReplicaDBCluster(PromoteReadReplicaDBClusterRequest request){var options = new InvokeOptions();options.RequestMarshaller = PromoteReadReplicaDBClusterRequestMarshaller.Instance;options.ResponseUnmarshaller = PromoteReadReplicaDBClusterResponseUnmarshaller.Instance;return Invoke<PromoteReadReplicaDBClusterResponse>(request, options);}",
    "output": "public DBCluster promoteReadReplicaDBCluster(PromoteReadReplicaDBClusterRequest request) {request = beforeClientExecution(request);return executePromoteReadReplicaDBCluster(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DescribeCapacityReservationsResult describeCapacityReservations(DescribeCapacityReservationsRequest request) {request = beforeClientExecution(request);return executeDescribeCapacityReservations(request);}",
    "output": "public virtual DescribeCapacityReservationsResponse DescribeCapacityReservations(DescribeCapacityReservationsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeCapacityReservationsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeCapacityReservationsResponseUnmarshaller.Instance;return Invoke<DescribeCapacityReservationsResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DescribeCapacityReservationsResponse DescribeCapacityReservations(DescribeCapacityReservationsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeCapacityReservationsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeCapacityReservationsResponseUnmarshaller.Instance;return Invoke<DescribeCapacityReservationsResponse>(request, options);}",
    "output": "public DescribeCapacityReservationsResult describeCapacityReservations(DescribeCapacityReservationsRequest request) {request = beforeClientExecution(request);return executeDescribeCapacityReservations(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String toString() {return \"IndexSearcher(\" + reader + \"; executor=\" + executor + \"; sliceExecutionControlPlane \" + sliceExecutor + \")\";}",
    "output": "public override string ToString(){return \"IndexSearcher(\" + reader + \"; executor=\" + executor + \")\";}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override string ToString(){return \"IndexSearcher(\" + reader + \"; executor=\" + executor + \")\";}",
    "output": "public String toString() {return \"IndexSearcher(\" + reader + \"; executor=\" + executor + \"; sliceExecutionControlPlane \" + sliceExecutor + \")\";}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public final boolean incrementToken() {return false;}",
    "output": "public override bool IncrementToken(){return false;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override bool IncrementToken(){return false;}",
    "output": "public final boolean incrementToken() {return false;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void serialize(LittleEndianOutput out) {out.writeShort(main + 1);out.writeShort(subFrom);out.writeShort(subTo);}",
    "output": "public void Serialize(ILittleEndianOutput out1){out1.WriteShort(main + 1);out1.WriteShort(subFrom);out1.WriteShort(subTo);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public void Serialize(ILittleEndianOutput out1){out1.WriteShort(main + 1);out1.WriteShort(subFrom);out1.WriteShort(subTo);}",
    "output": "public void serialize(LittleEndianOutput out) {out.writeShort(main + 1);out.writeShort(subFrom);out.writeShort(subTo);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void decode(byte[] blocks, int blocksOffset, int[] values,int valuesOffset, int iterations) {if (bitsPerValue > 32) {throw new UnsupportedOperationException(\"Cannot decode \" + bitsPerValue + \"-bits values into an int[]\");}for (int i = 0; i < iterations; ++i) {final long block = readLong(blocks, blocksOffset);blocksOffset += 8;valuesOffset = decode(block, values, valuesOffset);}}",
    "output": "public override void Decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations){if (bitsPerValue > 32){throw new System.NotSupportedException(\"Cannot decode \" + bitsPerValue + \"-bits values into an int[]\");}for (int i = 0; i < iterations; ++i){long block = ReadInt64(blocks, blocksOffset);blocksOffset += 8;valuesOffset = Decode(block, values, valuesOffset);}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override void Decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations){if (bitsPerValue > 32){throw new System.NotSupportedException(\"Cannot decode \" + bitsPerValue + \"-bits values into an int[]\");}for (int i = 0; i < iterations; ++i){long block = ReadInt64(blocks, blocksOffset);blocksOffset += 8;valuesOffset = Decode(block, values, valuesOffset);}}",
    "output": "public void decode(byte[] blocks, int blocksOffset, int[] values,int valuesOffset, int iterations) {if (bitsPerValue > 32) {throw new UnsupportedOperationException(\"Cannot decode \" + bitsPerValue + \"-bits values into an int[]\");}for (int i = 0; i < iterations; ++i) {final long block = readLong(blocks, blocksOffset);blocksOffset += 8;valuesOffset = decode(block, values, valuesOffset);}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public boolean isExpectedToken(int symbol) {ATN atn = getInterpreter().atn;ParserRuleContext ctx = _ctx;ATNState s = atn.states.get(getState());IntervalSet following = atn.nextTokens(s);if (following.contains(symbol)) {return true;}if ( !following.contains(Token.EPSILON) ) return false;while ( ctx!=null && ctx.invokingState>=0 && following.contains(Token.EPSILON) ) {ATNState invokingState = atn.states.get(ctx.invokingState);RuleTransition rt = (RuleTransition)invokingState.transition(0);following = atn.nextTokens(rt.followState);if (following.contains(symbol)) {return true;}ctx = (ParserRuleContext)ctx.parent;}if ( following.contains(Token.EPSILON) && symbol == Token.EOF ) {return true;}return false;}",
    "output": "public virtual bool IsExpectedToken(int symbol){ATN atn = Interpreter.atn;ParserRuleContext ctx = _ctx;ATNState s = atn.states[State];IntervalSet following = atn.NextTokens(s);if (following.Contains(symbol)){return true;}if (!following.Contains(TokenConstants.EPSILON)){return false;}while (ctx != null && ctx.invokingState >= 0 && following.Contains(TokenConstants.EPSILON)){ATNState invokingState = atn.states[ctx.invokingState];RuleTransition rt = (RuleTransition)invokingState.Transition(0);following = atn.NextTokens(rt.followState);if (following.Contains(symbol)){return true;}ctx = (ParserRuleContext)ctx.Parent;}if (following.Contains(TokenConstants.EPSILON) && symbol == TokenConstants.EOF){return true;}return false;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual bool IsExpectedToken(int symbol){ATN atn = Interpreter.atn;ParserRuleContext ctx = _ctx;ATNState s = atn.states[State];IntervalSet following = atn.NextTokens(s);if (following.Contains(symbol)){return true;}if (!following.Contains(TokenConstants.EPSILON)){return false;}while (ctx != null && ctx.invokingState >= 0 && following.Contains(TokenConstants.EPSILON)){ATNState invokingState = atn.states[ctx.invokingState];RuleTransition rt = (RuleTransition)invokingState.Transition(0);following = atn.NextTokens(rt.followState);if (following.Contains(symbol)){return true;}ctx = (ParserRuleContext)ctx.Parent;}if (following.Contains(TokenConstants.EPSILON) && symbol == TokenConstants.EOF){return true;}return false;}",
    "output": "public boolean isExpectedToken(int symbol) {ATN atn = getInterpreter().atn;ParserRuleContext ctx = _ctx;ATNState s = atn.states.get(getState());IntervalSet following = atn.nextTokens(s);if (following.contains(symbol)) {return true;}if ( !following.contains(Token.EPSILON) ) return false;while ( ctx!=null && ctx.invokingState>=0 && following.contains(Token.EPSILON) ) {ATNState invokingState = atn.states.get(ctx.invokingState);RuleTransition rt = (RuleTransition)invokingState.transition(0);following = atn.nextTokens(rt.followState);if (following.contains(symbol)) {return true;}ctx = (ParserRuleContext)ctx.parent;}if ( following.contains(Token.EPSILON) && symbol == Token.EOF ) {return true;}return false;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public UpdateStreamResult updateStream(UpdateStreamRequest request) {request = beforeClientExecution(request);return executeUpdateStream(request);}",
    "output": "public virtual UpdateStreamResponse UpdateStream(UpdateStreamRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateStreamRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateStreamResponseUnmarshaller.Instance;return Invoke<UpdateStreamResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual UpdateStreamResponse UpdateStream(UpdateStreamRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateStreamRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateStreamResponseUnmarshaller.Instance;return Invoke<UpdateStreamResponse>(request, options);}",
    "output": "public UpdateStreamResult updateStream(UpdateStreamRequest request) {request = beforeClientExecution(request);return executeUpdateStream(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0) {try {OperandResolver.getSingleValue(arg0, srcRowIndex, srcColumnIndex);return ErrorEval.NA;} catch (EvaluationException e) {int result = translateErrorCodeToErrorTypeValue(e.getErrorEval().getErrorCode());return new NumberEval(result);}}",
    "output": "public override ValueEval Evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0){try{OperandResolver.GetSingleValue(arg0, srcRowIndex, srcColumnIndex);return ErrorEval.NA;}catch (EvaluationException e){int result = TranslateErrorCodeToErrorTypeValue(e.GetErrorEval().ErrorCode);return new NumberEval(result);}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override ValueEval Evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0){try{OperandResolver.GetSingleValue(arg0, srcRowIndex, srcColumnIndex);return ErrorEval.NA;}catch (EvaluationException e){int result = TranslateErrorCodeToErrorTypeValue(e.GetErrorEval().ErrorCode);return new NumberEval(result);}}",
    "output": "public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0) {try {OperandResolver.getSingleValue(arg0, srcRowIndex, srcColumnIndex);return ErrorEval.NA;} catch (EvaluationException e) {int result = translateErrorCodeToErrorTypeValue(e.getErrorEval().getErrorCode());return new NumberEval(result);}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String toString() {return getClass().getName() + \" [\" + _index + \" \" + _name + \"]\";}",
    "output": "public override String ToString(){StringBuilder sb = new StringBuilder(64);sb.Append(GetType().Name).Append(\" [\");sb.Append(_index).Append(\" \").Append(_name);sb.Append(\"]\");return sb.ToString();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override String ToString(){StringBuilder sb = new StringBuilder(64);sb.Append(GetType().Name).Append(\" [\");sb.Append(_index).Append(\" \").Append(_name);sb.Append(\"]\");return sb.ToString();}",
    "output": "public String toString() {return getClass().getName() + \" [\" + _index + \" \" + _name + \"]\";}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ListAssignmentsForHITResult listAssignmentsForHIT(ListAssignmentsForHITRequest request) {request = beforeClientExecution(request);return executeListAssignmentsForHIT(request);}",
    "output": "public virtual ListAssignmentsForHITResponse ListAssignmentsForHIT(ListAssignmentsForHITRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListAssignmentsForHITRequestMarshaller.Instance;options.ResponseUnmarshaller = ListAssignmentsForHITResponseUnmarshaller.Instance;return Invoke<ListAssignmentsForHITResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual ListAssignmentsForHITResponse ListAssignmentsForHIT(ListAssignmentsForHITRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListAssignmentsForHITRequestMarshaller.Instance;options.ResponseUnmarshaller = ListAssignmentsForHITResponseUnmarshaller.Instance;return Invoke<ListAssignmentsForHITResponse>(request, options);}",
    "output": "public ListAssignmentsForHITResult listAssignmentsForHIT(ListAssignmentsForHITRequest request) {request = beforeClientExecution(request);return executeListAssignmentsForHIT(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DeleteAccessControlRuleResult deleteAccessControlRule(DeleteAccessControlRuleRequest request) {request = beforeClientExecution(request);return executeDeleteAccessControlRule(request);}",
    "output": "public virtual DeleteAccessControlRuleResponse DeleteAccessControlRule(DeleteAccessControlRuleRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteAccessControlRuleRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteAccessControlRuleResponseUnmarshaller.Instance;return Invoke<DeleteAccessControlRuleResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DeleteAccessControlRuleResponse DeleteAccessControlRule(DeleteAccessControlRuleRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteAccessControlRuleRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteAccessControlRuleResponseUnmarshaller.Instance;return Invoke<DeleteAccessControlRuleResponse>(request, options);}",
    "output": "public DeleteAccessControlRuleResult deleteAccessControlRule(DeleteAccessControlRuleRequest request) {request = beforeClientExecution(request);return executeDeleteAccessControlRule(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public Arc<Long> getFirstArc(FST.Arc<Long> arc) {return fst.getFirstArc(arc);}",
    "output": "public FST.Arc<long?> GetFirstArc(FST.Arc<long?> arc){return fst.GetFirstArc(arc);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public FST.Arc<long?> GetFirstArc(FST.Arc<long?> arc){return fst.GetFirstArc(arc);}",
    "output": "public Arc<Long> getFirstArc(FST.Arc<Long> arc) {return fst.getFirstArc(arc);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void decode(long[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {for (int i = 0; i < iterations; ++i) {final long block = blocks[blocksOffset++];for (int shift = 48; shift >= 0; shift -= 16) {values[valuesOffset++] = (int) ((block >>> shift) & 65535);}}}",
    "output": "public override void Decode(long[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations){for (int i = 0; i < iterations; ++i){long block = blocks[blocksOffset++];for (int shift = 48; shift >= 0; shift -= 16){values[valuesOffset++] = (int)(((long)((ulong)block >> shift)) & 65535);}}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override void Decode(long[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations){for (int i = 0; i < iterations; ++i){long block = blocks[blocksOffset++];for (int shift = 48; shift >= 0; shift -= 16){values[valuesOffset++] = (int)(((long)((ulong)block >> shift)) & 65535);}}}",
    "output": "public void decode(long[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {for (int i = 0; i < iterations; ++i) {final long block = blocks[blocksOffset++];for (int shift = 48; shift >= 0; shift -= 16) {values[valuesOffset++] = (int) ((block >>> shift) & 65535);}}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public long skip(long charCount) throws IOException {if (charCount < 0) {throw new IllegalArgumentException(\"charCount < 0: \" + charCount);}synchronized (lock) {checkNotClosed();if (charCount == 0) {return 0;}long inSkipped;int availableFromBuffer = buf.length - pos;if (availableFromBuffer > 0) {long requiredFromIn = charCount - availableFromBuffer;if (requiredFromIn <= 0) {pos += charCount;return charCount;}pos += availableFromBuffer;inSkipped = in.skip(requiredFromIn);} else {inSkipped = in.skip(charCount);}return inSkipped + availableFromBuffer;}}",
    "output": "public override long skip(long charCount){if (charCount < 0){throw new System.ArgumentException(\"charCount < 0: \" + charCount);}lock (@lock){checkNotClosed();if (charCount == 0){return 0;}long inSkipped;int availableFromBuffer = buf.Length - pos;if (availableFromBuffer > 0){long requiredFromIn = charCount - availableFromBuffer;if (requiredFromIn <= 0){pos += (int)(charCount);return charCount;}pos += availableFromBuffer;inSkipped = @in.skip(requiredFromIn);}else{inSkipped = @in.skip(charCount);}return inSkipped + availableFromBuffer;}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override long skip(long charCount){if (charCount < 0){throw new System.ArgumentException(\"charCount < 0: \" + charCount);}lock (@lock){checkNotClosed();if (charCount == 0){return 0;}long inSkipped;int availableFromBuffer = buf.Length - pos;if (availableFromBuffer > 0){long requiredFromIn = charCount - availableFromBuffer;if (requiredFromIn <= 0){pos += (int)(charCount);return charCount;}pos += availableFromBuffer;inSkipped = @in.skip(requiredFromIn);}else{inSkipped = @in.skip(charCount);}return inSkipped + availableFromBuffer;}}",
    "output": "public long skip(long charCount) throws IOException {if (charCount < 0) {throw new IllegalArgumentException(\"charCount < 0: \" + charCount);}synchronized (lock) {checkNotClosed();if (charCount == 0) {return 0;}long inSkipped;int availableFromBuffer = buf.length - pos;if (availableFromBuffer > 0) {long requiredFromIn = charCount - availableFromBuffer;if (requiredFromIn <= 0) {pos += charCount;return charCount;}pos += availableFromBuffer;inSkipped = in.skip(requiredFromIn);} else {inSkipped = in.skip(charCount);}return inSkipped + availableFromBuffer;}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public Map<String, Ref> getRefsMap() {return advertisedRefs;}",
    "output": "public virtual IDictionary<string, Ref> GetRefsMap(){return advertisedRefs;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual IDictionary<string, Ref> GetRefsMap(){return advertisedRefs;}",
    "output": "public Map<String, Ref> getRefsMap() {return advertisedRefs;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public UpdateApiKeyResult updateApiKey(UpdateApiKeyRequest request) {request = beforeClientExecution(request);return executeUpdateApiKey(request);}",
    "output": "public virtual UpdateApiKeyResponse UpdateApiKey(UpdateApiKeyRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateApiKeyRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateApiKeyResponseUnmarshaller.Instance;return Invoke<UpdateApiKeyResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual UpdateApiKeyResponse UpdateApiKey(UpdateApiKeyRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateApiKeyRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateApiKeyResponseUnmarshaller.Instance;return Invoke<UpdateApiKeyResponse>(request, options);}",
    "output": "public UpdateApiKeyResult updateApiKey(UpdateApiKeyRequest request) {request = beforeClientExecution(request);return executeUpdateApiKey(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ObjectStream openStream() throws MissingObjectException, IOException {PackInputStream packIn;@SuppressWarnings(\"resource\")DfsReader ctx = db.newReader();try {try {packIn = new PackInputStream(pack, objectOffset + headerLength, ctx);ctx = null; } catch (IOException packGone) {ObjectId obj = pack.getReverseIdx(ctx).findObject(objectOffset);return ctx.open(obj, type).openStream();}} finally {if (ctx != null) {ctx.close();}}int bufsz = 8192;InputStream in = new BufferedInputStream(new InflaterInputStream(packIn, packIn.ctx.inflater(), bufsz),bufsz);return new ObjectStream.Filter(type, size, in);}",
    "output": "public override ObjectStream OpenStream(){WindowCursor wc = new WindowCursor(db);InputStream @in;try{@in = new PackInputStream(pack, objectOffset + headerLength, wc);}catch (IOException){return wc.Open(GetObjectId(), type).OpenStream();}@in = new BufferedInputStream(new InflaterInputStream(@in, wc.Inflater(), 8192),8192);return new ObjectStream.Filter(type, size, @in);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override ObjectStream OpenStream(){WindowCursor wc = new WindowCursor(db);InputStream @in;try{@in = new PackInputStream(pack, objectOffset + headerLength, wc);}catch (IOException){return wc.Open(GetObjectId(), type).OpenStream();}@in = new BufferedInputStream(new InflaterInputStream(@in, wc.Inflater(), 8192),8192);return new ObjectStream.Filter(type, size, @in);}",
    "output": "public ObjectStream openStream() throws MissingObjectException, IOException {PackInputStream packIn;@SuppressWarnings(\"resource\")DfsReader ctx = db.newReader();try {try {packIn = new PackInputStream(pack, objectOffset + headerLength, ctx);ctx = null; } catch (IOException packGone) {ObjectId obj = pack.getReverseIdx(ctx).findObject(objectOffset);return ctx.open(obj, type).openStream();}} finally {if (ctx != null) {ctx.close();}}int bufsz = 8192;InputStream in = new BufferedInputStream(new InflaterInputStream(packIn, packIn.ctx.inflater(), bufsz),bufsz);return new ObjectStream.Filter(type, size, in);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ArrayList() {array = EmptyArray.OBJECT;}",
    "output": "public ArrayList(){array = libcore.util.EmptyArray.OBJECT;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public ArrayList(){array = libcore.util.EmptyArray.OBJECT;}",
    "output": "public ArrayList() {array = EmptyArray.OBJECT;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public UpdateDetectorVersionResult updateDetectorVersion(UpdateDetectorVersionRequest request) {request = beforeClientExecution(request);return executeUpdateDetectorVersion(request);}",
    "output": "public virtual UpdateDetectorVersionResponse UpdateDetectorVersion(UpdateDetectorVersionRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateDetectorVersionRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateDetectorVersionResponseUnmarshaller.Instance;return Invoke<UpdateDetectorVersionResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual UpdateDetectorVersionResponse UpdateDetectorVersion(UpdateDetectorVersionRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateDetectorVersionRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateDetectorVersionResponseUnmarshaller.Instance;return Invoke<UpdateDetectorVersionResponse>(request, options);}",
    "output": "public UpdateDetectorVersionResult updateDetectorVersion(UpdateDetectorVersionRequest request) {request = beforeClientExecution(request);return executeUpdateDetectorVersion(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void resize(){resize(Double.MAX_VALUE);}",
    "output": "public void Resize(){Resize(Double.MaxValue);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public void Resize(){Resize(Double.MaxValue);}",
    "output": "public void resize(){resize(Double.MAX_VALUE);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public RevFlagSet(Collection<RevFlag> s) {this();addAll(s);}",
    "output": "public RevFlagSet(ICollection<RevFlag> s) : this(){Sharpen.Collections.AddAll(this, s);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public RevFlagSet(ICollection<RevFlag> s) : this(){Sharpen.Collections.AddAll(this, s);}",
    "output": "public RevFlagSet(Collection<RevFlag> s) {this();addAll(s);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public int size() {return size;}",
    "output": "public override int size(){return this._enclosing.size();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override int size(){return this._enclosing.size();}",
    "output": "public int size() {return size;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public final long getLong() {int newPosition = position + SizeOf.LONG;if (newPosition > limit) {throw new BufferUnderflowException();}long result = Memory.peekLong(backingArray, offset + position, order);position = newPosition;return result;}",
    "output": "public sealed override long getLong(){int newPosition = _position + libcore.io.SizeOf.LONG;if (newPosition > _limit){throw new java.nio.BufferUnderflowException();}long result = libcore.io.Memory.peekLong(backingArray, offset + _position, _order);_position = newPosition;return result;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public sealed override long getLong(){int newPosition = _position + libcore.io.SizeOf.LONG;if (newPosition > _limit){throw new java.nio.BufferUnderflowException();}long result = libcore.io.Memory.peekLong(backingArray, offset + _position, _order);_position = newPosition;return result;}",
    "output": "public final long getLong() {int newPosition = position + SizeOf.LONG;if (newPosition > limit) {throw new BufferUnderflowException();}long result = Memory.peekLong(backingArray, offset + position, order);position = newPosition;return result;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public StringBuilder insert(int offset, long l) {insert0(offset, Long.toString(l));return this;}",
    "output": "public java.lang.StringBuilder insert(int offset, long l){insert0(offset, System.Convert.ToString(l));return this;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public java.lang.StringBuilder insert(int offset, long l){insert0(offset, System.Convert.ToString(l));return this;}",
    "output": "public StringBuilder insert(int offset, long l) {insert0(offset, Long.toString(l));return this;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public TurkishLowerCaseFilter(TokenStream in) {super(in);}",
    "output": "public TurkishLowerCaseFilter(TokenStream @in): base(@in){termAtt = AddAttribute<ICharTermAttribute>();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public TurkishLowerCaseFilter(TokenStream @in): base(@in){termAtt = AddAttribute<ICharTermAttribute>();}",
    "output": "public TurkishLowerCaseFilter(TokenStream in) {super(in);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ParseTreeMatch match(ParseTree tree, ParseTreePattern pattern) {MultiMap<String, ParseTree> labels = new MultiMap<String, ParseTree>();ParseTree mismatchedNode = matchImpl(tree, pattern.getPatternTree(), labels);return new ParseTreeMatch(tree, pattern, labels, mismatchedNode);}",
    "output": "public virtual ParseTreeMatch Match(IParseTree tree, ParseTreePattern pattern){MultiMap<string, IParseTree> labels = new MultiMap<string, IParseTree>();IParseTree mismatchedNode = MatchImpl(tree, pattern.PatternTree, labels);return new ParseTreeMatch(tree, pattern, labels, mismatchedNode);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual ParseTreeMatch Match(IParseTree tree, ParseTreePattern pattern){MultiMap<string, IParseTree> labels = new MultiMap<string, IParseTree>();IParseTree mismatchedNode = MatchImpl(tree, pattern.PatternTree, labels);return new ParseTreeMatch(tree, pattern, labels, mismatchedNode);}",
    "output": "public ParseTreeMatch match(ParseTree tree, ParseTreePattern pattern) {MultiMap<String, ParseTree> labels = new MultiMap<String, ParseTree>();ParseTree mismatchedNode = matchImpl(tree, pattern.getPatternTree(), labels);return new ParseTreeMatch(tree, pattern, labels, mismatchedNode);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void addIfNoOverlap( WeightedPhraseInfo wpi ){for( WeightedPhraseInfo existWpi : getPhraseList() ){if( existWpi.isOffsetOverlap( wpi ) ) {existWpi.getTermsInfos().addAll( wpi.getTermsInfos() );return;}}getPhraseList().add( wpi );}",
    "output": "public virtual void AddIfNoOverlap(WeightedPhraseInfo wpi){foreach (WeightedPhraseInfo existWpi in PhraseList){if (existWpi.IsOffsetOverlap(wpi)){existWpi.TermsInfos.AddRange(wpi.TermsInfos);return;}}PhraseList.Add(wpi);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual void AddIfNoOverlap(WeightedPhraseInfo wpi){foreach (WeightedPhraseInfo existWpi in PhraseList){if (existWpi.IsOffsetOverlap(wpi)){existWpi.TermsInfos.AddRange(wpi.TermsInfos);return;}}PhraseList.Add(wpi);}",
    "output": "public void addIfNoOverlap( WeightedPhraseInfo wpi ){for( WeightedPhraseInfo existWpi : getPhraseList() ){if( existWpi.isOffsetOverlap( wpi ) ) {existWpi.getTermsInfos().addAll( wpi.getTermsInfos() );return;}}getPhraseList().add( wpi );}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ThreeWayMerger newMerger(Repository db) {return new InCoreMerger(db);}",
    "output": "public override Merger NewMerger(Repository db){return new StrategySimpleTwoWayInCore.InCoreMerger(db);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override Merger NewMerger(Repository db){return new StrategySimpleTwoWayInCore.InCoreMerger(db);}",
    "output": "public ThreeWayMerger newMerger(Repository db) {return new InCoreMerger(db);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public float docScore(int docId, String field, int numPayloadsSeen, float payloadScore) {return numPayloadsSeen > 0 ? (payloadScore / numPayloadsSeen) : 1;}",
    "output": "public override float DocScore(int docId, string field, int numPayloadsSeen, float payloadScore){return numPayloadsSeen > 0 ? (payloadScore / numPayloadsSeen) : 1;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override float DocScore(int docId, string field, int numPayloadsSeen, float payloadScore){return numPayloadsSeen > 0 ? (payloadScore / numPayloadsSeen) : 1;}",
    "output": "public float docScore(int docId, String field, int numPayloadsSeen, float payloadScore) {return numPayloadsSeen > 0 ? (payloadScore / numPayloadsSeen) : 1;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public Collection<ParseTree> evaluate(ParseTree t) {return Trees.findAllRuleNodes(t, ruleIndex);}",
    "output": "public override ICollection<IParseTree> Evaluate(IParseTree t){return Trees.FindAllRuleNodes(t, ruleIndex);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override ICollection<IParseTree> Evaluate(IParseTree t){return Trees.FindAllRuleNodes(t, ruleIndex);}",
    "output": "public Collection<ParseTree> evaluate(ParseTree t) {return Trees.findAllRuleNodes(t, ruleIndex);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String toString() {StringBuilder buffer = new StringBuilder();buffer.append(\"[CFRULE]\\n\");buffer.append(\"    .condition_type   =\").append(getConditionType()).append(\"\\n\");buffer.append(\"    OPTION FLAGS=0x\").append(Integer.toHexString(getOptions())).append(\"\\n\");if (containsFontFormattingBlock()) {buffer.append(_fontFormatting).append(\"\\n\");}if (containsBorderFormattingBlock()) {buffer.append(_borderFormatting).append(\"\\n\");}if (containsPatternFormattingBlock()) {buffer.append(_patternFormatting).append(\"\\n\");}buffer.append(\"    Formula 1 =\").append(Arrays.toString(getFormula1().getTokens())).append(\"\\n\");buffer.append(\"    Formula 2 =\").append(Arrays.toString(getFormula2().getTokens())).append(\"\\n\");buffer.append(\"[/CFRULE]\\n\");return buffer.toString();}",
    "output": "public override String ToString(){StringBuilder buffer = new StringBuilder();buffer.Append(\"[CFRULE]\\n\");buffer.Append(\"    .condition_type   =\").Append(field_1_condition_type).Append(\"\\n\");buffer.Append(\"    OPTION FLAGS=0x\").Append(string.Format(\"{0:X}\",Options)).Append(\"\\n\");if (ContainsFontFormattingBlock){buffer.Append(_fontFormatting.ToString()).Append(\"\\n\");}if (ContainsBorderFormattingBlock){buffer.Append(_borderFormatting.ToString()).Append(\"\\n\");}if (ContainsPatternFormattingBlock){buffer.Append(_patternFormatting.ToString()).Append(\"\\n\");}buffer.Append(\"    Formula 1 =\").Append(Arrays.ToString(field_17_formula1.Tokens)).Append(\"\\n\");buffer.Append(\"    Formula 2 =\").Append(Arrays.ToString(field_18_formula2.Tokens)).Append(\"\\n\");buffer.Append(\"[/CFRULE]\\n\");return buffer.ToString();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override String ToString(){StringBuilder buffer = new StringBuilder();buffer.Append(\"[CFRULE]\\n\");buffer.Append(\"    .condition_type   =\").Append(field_1_condition_type).Append(\"\\n\");buffer.Append(\"    OPTION FLAGS=0x\").Append(string.Format(\"{0:X}\",Options)).Append(\"\\n\");if (ContainsFontFormattingBlock){buffer.Append(_fontFormatting.ToString()).Append(\"\\n\");}if (ContainsBorderFormattingBlock){buffer.Append(_borderFormatting.ToString()).Append(\"\\n\");}if (ContainsPatternFormattingBlock){buffer.Append(_patternFormatting.ToString()).Append(\"\\n\");}buffer.Append(\"    Formula 1 =\").Append(Arrays.ToString(field_17_formula1.Tokens)).Append(\"\\n\");buffer.Append(\"    Formula 2 =\").Append(Arrays.ToString(field_18_formula2.Tokens)).Append(\"\\n\");buffer.Append(\"[/CFRULE]\\n\");return buffer.ToString();}",
    "output": "public String toString() {StringBuilder buffer = new StringBuilder();buffer.append(\"[CFRULE]\\n\");buffer.append(\"    .condition_type   =\").append(getConditionType()).append(\"\\n\");buffer.append(\"    OPTION FLAGS=0x\").append(Integer.toHexString(getOptions())).append(\"\\n\");if (containsFontFormattingBlock()) {buffer.append(_fontFormatting).append(\"\\n\");}if (containsBorderFormattingBlock()) {buffer.append(_borderFormatting).append(\"\\n\");}if (containsPatternFormattingBlock()) {buffer.append(_patternFormatting).append(\"\\n\");}buffer.append(\"    Formula 1 =\").append(Arrays.toString(getFormula1().getTokens())).append(\"\\n\");buffer.append(\"    Formula 2 =\").append(Arrays.toString(getFormula2().getTokens())).append(\"\\n\");buffer.append(\"[/CFRULE]\\n\");return buffer.toString();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DescribeServiceUpdatesResult describeServiceUpdates(DescribeServiceUpdatesRequest request) {request = beforeClientExecution(request);return executeDescribeServiceUpdates(request);}",
    "output": "public virtual DescribeServiceUpdatesResponse DescribeServiceUpdates(DescribeServiceUpdatesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeServiceUpdatesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeServiceUpdatesResponseUnmarshaller.Instance;return Invoke<DescribeServiceUpdatesResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DescribeServiceUpdatesResponse DescribeServiceUpdates(DescribeServiceUpdatesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeServiceUpdatesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeServiceUpdatesResponseUnmarshaller.Instance;return Invoke<DescribeServiceUpdatesResponse>(request, options);}",
    "output": "public DescribeServiceUpdatesResult describeServiceUpdates(DescribeServiceUpdatesRequest request) {request = beforeClientExecution(request);return executeDescribeServiceUpdates(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String getNameName(int index){return getNameAt(index).getNameName();}",
    "output": "public String GetNameName(int index){String result = GetNameAt(index).NameName;return result;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public String GetNameName(int index){String result = GetNameAt(index).NameName;return result;}",
    "output": "public String getNameName(int index){return getNameAt(index).getNameName();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DescribeLocationsResult describeLocations() {return describeLocations(new DescribeLocationsRequest());}",
    "output": "public virtual DescribeLocationsResponse DescribeLocations(){return DescribeLocations(new DescribeLocationsRequest());}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DescribeLocationsResponse DescribeLocations(){return DescribeLocations(new DescribeLocationsRequest());}",
    "output": "public DescribeLocationsResult describeLocations() {return describeLocations(new DescribeLocationsRequest());}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String toString() {return \"<phraseslop value='\" + getValueString() + \"'>\" + \"\\n\"+ getChild().toString() + \"\\n</phraseslop>\";}",
    "output": "public override string ToString(){return \"<phraseslop value='\" + GetValueString() + \"'>\" + \"\\n\"+ GetChild().ToString() + \"\\n</phraseslop>\";}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override string ToString(){return \"<phraseslop value='\" + GetValueString() + \"'>\" + \"\\n\"+ GetChild().ToString() + \"\\n</phraseslop>\";}",
    "output": "public String toString() {return \"<phraseslop value='\" + getValueString() + \"'>\" + \"\\n\"+ getChild().toString() + \"\\n</phraseslop>\";}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DirCacheEntry getDirCacheEntry() {return currentSubtree == null ? currentEntry : null;}",
    "output": "public virtual DirCacheEntry GetDirCacheEntry(){return currentSubtree == null ? currentEntry : null;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DirCacheEntry GetDirCacheEntry(){return currentSubtree == null ? currentEntry : null;}",
    "output": "public DirCacheEntry getDirCacheEntry() {return currentSubtree == null ? currentEntry : null;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public IntBuffer put(int[] src, int srcOffset, int intCount) {Arrays.checkOffsetAndCount(src.length, srcOffset, intCount);if (intCount > remaining()) {throw new BufferOverflowException();}for (int i = srcOffset; i < srcOffset + intCount; ++i) {put(src[i]);}return this;}",
    "output": "public virtual java.nio.IntBuffer put(int[] src, int srcOffset, int intCount){java.util.Arrays.checkOffsetAndCount(src.Length, srcOffset, intCount);if (intCount > remaining()){throw new java.nio.BufferOverflowException();}{for (int i = srcOffset; i < srcOffset + intCount; ++i){put(src[i]);}}return this;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual java.nio.IntBuffer put(int[] src, int srcOffset, int intCount){java.util.Arrays.checkOffsetAndCount(src.Length, srcOffset, intCount);if (intCount > remaining()){throw new java.nio.BufferOverflowException();}{for (int i = srcOffset; i < srcOffset + intCount; ++i){put(src[i]);}}return this;}",
    "output": "public IntBuffer put(int[] src, int srcOffset, int intCount) {Arrays.checkOffsetAndCount(src.length, srcOffset, intCount);if (intCount > remaining()) {throw new BufferOverflowException();}for (int i = srcOffset; i < srcOffset + intCount; ++i) {put(src[i]);}return this;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void trimToSize() {int s = size;if (s == array.length) {return;}if (s == 0) {array = EmptyArray.OBJECT;} else {Object[] newArray = new Object[s];System.arraycopy(array, 0, newArray, 0, s);array = newArray;}modCount++;}",
    "output": "public virtual void trimToSize(){int s = _size;if (s == array.Length){return;}if (s == 0){array = libcore.util.EmptyArray.OBJECT;}else{object[] newArray = new object[s];System.Array.Copy(array, 0, newArray, 0, s);array = newArray;}modCount++;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual void trimToSize(){int s = _size;if (s == array.Length){return;}if (s == 0){array = libcore.util.EmptyArray.OBJECT;}else{object[] newArray = new object[s];System.Array.Copy(array, 0, newArray, 0, s);array = newArray;}modCount++;}",
    "output": "public void trimToSize() {int s = size;if (s == array.length) {return;}if (s == 0) {array = EmptyArray.OBJECT;} else {Object[] newArray = new Object[s];System.arraycopy(array, 0, newArray, 0, s);array = newArray;}modCount++;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DescribeLocalGatewayVirtualInterfacesResult describeLocalGatewayVirtualInterfaces(DescribeLocalGatewayVirtualInterfacesRequest request) {request = beforeClientExecution(request);return executeDescribeLocalGatewayVirtualInterfaces(request);}",
    "output": "public virtual DescribeLocalGatewayVirtualInterfacesResponse DescribeLocalGatewayVirtualInterfaces(DescribeLocalGatewayVirtualInterfacesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeLocalGatewayVirtualInterfacesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeLocalGatewayVirtualInterfacesResponseUnmarshaller.Instance;return Invoke<DescribeLocalGatewayVirtualInterfacesResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DescribeLocalGatewayVirtualInterfacesResponse DescribeLocalGatewayVirtualInterfaces(DescribeLocalGatewayVirtualInterfacesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeLocalGatewayVirtualInterfacesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeLocalGatewayVirtualInterfacesResponseUnmarshaller.Instance;return Invoke<DescribeLocalGatewayVirtualInterfacesResponse>(request, options);}",
    "output": "public DescribeLocalGatewayVirtualInterfacesResult describeLocalGatewayVirtualInterfaces(DescribeLocalGatewayVirtualInterfacesRequest request) {request = beforeClientExecution(request);return executeDescribeLocalGatewayVirtualInterfaces(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public TokenStream create(TokenStream input) {return new RussianLightStemFilter(input);}",
    "output": "public override TokenStream Create(TokenStream input){return new RussianLightStemFilter(input);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override TokenStream Create(TokenStream input){return new RussianLightStemFilter(input);}",
    "output": "public TokenStream create(TokenStream input) {return new RussianLightStemFilter(input);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public int [] toArray(final int [] a){int[] rval;if (a.length == _limit){System.arraycopy(_array, 0, a, 0, _limit);rval = a;}else{rval = toArray();}return rval;}",
    "output": "public int[] ToArray(int[] a){int[] rval;if (a.Length == _limit){Array.Copy(_array, 0, a, 0, _limit);rval = a;}else{rval = ToArray();}return rval;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public int[] ToArray(int[] a){int[] rval;if (a.Length == _limit){Array.Copy(_array, 0, a, 0, _limit);rval = a;}else{rval = ToArray();}return rval;}",
    "output": "public int [] toArray(final int [] a){int[] rval;if (a.length == _limit){System.arraycopy(_array, 0, a, 0, _limit);rval = a;}else{rval = toArray();}return rval;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public BasicSessionCredentials(String accessKeyId, String accessKeySecret, String sessionToken,long roleSessionDurationSeconds) {if (accessKeyId == null) {throw new IllegalArgumentException(\"Access key ID cannot be null.\");}if (accessKeySecret == null) {throw new IllegalArgumentException(\"Access key secret cannot be null.\");}this.accessKeyId = accessKeyId;this.accessKeySecret = accessKeySecret;this.sessionToken = sessionToken;this.roleSessionDurationSeconds = roleSessionDurationSeconds;this.sessionStartedTimeInMilliSeconds = System.currentTimeMillis();}",
    "output": "public BasicSessionCredentials(string accessKeyId, string accessKeySecret,string sessionToken, long roleSessionDurationSeconds = 0){if (accessKeyId == null){throw new ArgumentOutOfRangeException(\"Access key ID cannot be null.\");}if (accessKeySecret == null){throw new ArgumentOutOfRangeException(\"Access key secret cannot be null.\");}this.accessKeyId = accessKeyId;this.accessKeySecret = accessKeySecret;this.sessionToken = sessionToken;this.roleSessionDurationSeconds = roleSessionDurationSeconds;sessionStartedTimeInMilliSeconds = DateTime.UtcNow.currentTimeMillis();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public BasicSessionCredentials(string accessKeyId, string accessKeySecret,string sessionToken, long roleSessionDurationSeconds = 0){if (accessKeyId == null){throw new ArgumentOutOfRangeException(\"Access key ID cannot be null.\");}if (accessKeySecret == null){throw new ArgumentOutOfRangeException(\"Access key secret cannot be null.\");}this.accessKeyId = accessKeyId;this.accessKeySecret = accessKeySecret;this.sessionToken = sessionToken;this.roleSessionDurationSeconds = roleSessionDurationSeconds;sessionStartedTimeInMilliSeconds = DateTime.UtcNow.currentTimeMillis();}",
    "output": "public BasicSessionCredentials(String accessKeyId, String accessKeySecret, String sessionToken,long roleSessionDurationSeconds) {if (accessKeyId == null) {throw new IllegalArgumentException(\"Access key ID cannot be null.\");}if (accessKeySecret == null) {throw new IllegalArgumentException(\"Access key secret cannot be null.\");}this.accessKeyId = accessKeyId;this.accessKeySecret = accessKeySecret;this.sessionToken = sessionToken;this.roleSessionDurationSeconds = roleSessionDurationSeconds;this.sessionStartedTimeInMilliSeconds = System.currentTimeMillis();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public final ShortBuffer get(short[] dst, int dstOffset, int shortCount) {if (shortCount > remaining()) {throw new BufferUnderflowException();}System.arraycopy(backingArray, offset + position, dst, dstOffset, shortCount);position += shortCount;return this;}",
    "output": "public sealed override java.nio.ShortBuffer get(short[] dst, int dstOffset, int shortCount){if (shortCount > remaining()){throw new java.nio.BufferUnderflowException();}System.Array.Copy(backingArray, offset + _position, dst, dstOffset, shortCount);_position += shortCount;return this;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public sealed override java.nio.ShortBuffer get(short[] dst, int dstOffset, int shortCount){if (shortCount > remaining()){throw new java.nio.BufferUnderflowException();}System.Array.Copy(backingArray, offset + _position, dst, dstOffset, shortCount);_position += shortCount;return this;}",
    "output": "public final ShortBuffer get(short[] dst, int dstOffset, int shortCount) {if (shortCount > remaining()) {throw new BufferUnderflowException();}System.arraycopy(backingArray, offset + position, dst, dstOffset, shortCount);position += shortCount;return this;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ActivateEventSourceResult activateEventSource(ActivateEventSourceRequest request) {request = beforeClientExecution(request);return executeActivateEventSource(request);}",
    "output": "public virtual ActivateEventSourceResponse ActivateEventSource(ActivateEventSourceRequest request){var options = new InvokeOptions();options.RequestMarshaller = ActivateEventSourceRequestMarshaller.Instance;options.ResponseUnmarshaller = ActivateEventSourceResponseUnmarshaller.Instance;return Invoke<ActivateEventSourceResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual ActivateEventSourceResponse ActivateEventSource(ActivateEventSourceRequest request){var options = new InvokeOptions();options.RequestMarshaller = ActivateEventSourceRequestMarshaller.Instance;options.ResponseUnmarshaller = ActivateEventSourceResponseUnmarshaller.Instance;return Invoke<ActivateEventSourceResponse>(request, options);}",
    "output": "public ActivateEventSourceResult activateEventSource(ActivateEventSourceRequest request) {request = beforeClientExecution(request);return executeActivateEventSource(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DescribeReceiptRuleSetResult describeReceiptRuleSet(DescribeReceiptRuleSetRequest request) {request = beforeClientExecution(request);return executeDescribeReceiptRuleSet(request);}",
    "output": "public virtual DescribeReceiptRuleSetResponse DescribeReceiptRuleSet(DescribeReceiptRuleSetRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeReceiptRuleSetRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeReceiptRuleSetResponseUnmarshaller.Instance;return Invoke<DescribeReceiptRuleSetResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DescribeReceiptRuleSetResponse DescribeReceiptRuleSet(DescribeReceiptRuleSetRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeReceiptRuleSetRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeReceiptRuleSetResponseUnmarshaller.Instance;return Invoke<DescribeReceiptRuleSetResponse>(request, options);}",
    "output": "public DescribeReceiptRuleSetResult describeReceiptRuleSet(DescribeReceiptRuleSetRequest request) {request = beforeClientExecution(request);return executeDescribeReceiptRuleSet(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public Filter(String name) {setName(name);}",
    "output": "public Filter(string name){_name = name;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public Filter(string name){_name = name;}",
    "output": "public Filter(String name) {setName(name);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DoubleBuffer put(double c) {throw new ReadOnlyBufferException();}",
    "output": "public override java.nio.DoubleBuffer put(double c){throw new java.nio.ReadOnlyBufferException();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override java.nio.DoubleBuffer put(double c){throw new java.nio.ReadOnlyBufferException();}",
    "output": "public DoubleBuffer put(double c) {throw new ReadOnlyBufferException();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public CreateTrafficPolicyInstanceResult createTrafficPolicyInstance(CreateTrafficPolicyInstanceRequest request) {request = beforeClientExecution(request);return executeCreateTrafficPolicyInstance(request);}",
    "output": "public virtual CreateTrafficPolicyInstanceResponse CreateTrafficPolicyInstance(CreateTrafficPolicyInstanceRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateTrafficPolicyInstanceRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateTrafficPolicyInstanceResponseUnmarshaller.Instance;return Invoke<CreateTrafficPolicyInstanceResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual CreateTrafficPolicyInstanceResponse CreateTrafficPolicyInstance(CreateTrafficPolicyInstanceRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateTrafficPolicyInstanceRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateTrafficPolicyInstanceResponseUnmarshaller.Instance;return Invoke<CreateTrafficPolicyInstanceResponse>(request, options);}",
    "output": "public CreateTrafficPolicyInstanceResult createTrafficPolicyInstance(CreateTrafficPolicyInstanceRequest request) {request = beforeClientExecution(request);return executeCreateTrafficPolicyInstance(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public JapaneseIterationMarkCharFilter(Reader input, boolean normalizeKanji, boolean normalizeKana) {super(input);this.normalizeKanji = normalizeKanji;this.normalizeKana = normalizeKana;buffer.reset(input);}",
    "output": "public JapaneseIterationMarkCharFilter(TextReader input, bool normalizeKanji, bool normalizeKana): base(input){this.normalizeKanji = normalizeKanji;this.normalizeKana = normalizeKana;buffer.Reset(input);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public JapaneseIterationMarkCharFilter(TextReader input, bool normalizeKanji, bool normalizeKana): base(input){this.normalizeKanji = normalizeKanji;this.normalizeKana = normalizeKana;buffer.Reset(input);}",
    "output": "public JapaneseIterationMarkCharFilter(Reader input, boolean normalizeKanji, boolean normalizeKana) {super(input);this.normalizeKanji = normalizeKanji;this.normalizeKana = normalizeKana;buffer.reset(input);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void writeLong(long v) {writeInt((int)(v >>  0));writeInt((int)(v >> 32));}",
    "output": "public void WriteLong(long v){WriteInt((int)(v >> 0));WriteInt((int)(v >> 32));}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public void WriteLong(long v){WriteInt((int)(v >> 0));WriteInt((int)(v >> 32));}",
    "output": "public void writeLong(long v) {writeInt((int)(v >>  0));writeInt((int)(v >> 32));}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public FileResolver() {exports = new ConcurrentHashMap<>();exportBase = new CopyOnWriteArrayList<>();}",
    "output": "public FileResolver(){exports = new ConcurrentHashMap<string, Repository>();exportBase = new CopyOnWriteArrayList<FilePath>();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public FileResolver(){exports = new ConcurrentHashMap<string, Repository>();exportBase = new CopyOnWriteArrayList<FilePath>();}",
    "output": "public FileResolver() {exports = new ConcurrentHashMap<>();exportBase = new CopyOnWriteArrayList<>();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ValueEval getRef3DEval(Ref3DPxg rptg) {SheetRangeEvaluator sre = createExternSheetRefEvaluator(rptg.getSheetName(), rptg.getLastSheetName(), rptg.getExternalWorkbookNumber());return new LazyRefEval(rptg.getRow(), rptg.getColumn(), sre);}",
    "output": "public ValueEval GetRef3DEval(Ref3DPtg rptg){SheetRangeEvaluator sre = CreateExternSheetRefEvaluator(rptg.ExternSheetIndex);return new LazyRefEval(rptg.Row, rptg.Column, sre);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public ValueEval GetRef3DEval(Ref3DPtg rptg){SheetRangeEvaluator sre = CreateExternSheetRefEvaluator(rptg.ExternSheetIndex);return new LazyRefEval(rptg.Row, rptg.Column, sre);}",
    "output": "public ValueEval getRef3DEval(Ref3DPxg rptg) {SheetRangeEvaluator sre = createExternSheetRefEvaluator(rptg.getSheetName(), rptg.getLastSheetName(), rptg.getExternalWorkbookNumber());return new LazyRefEval(rptg.getRow(), rptg.getColumn(), sre);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DeleteDatasetResult deleteDataset(DeleteDatasetRequest request) {request = beforeClientExecution(request);return executeDeleteDataset(request);}",
    "output": "public virtual DeleteDatasetResponse DeleteDataset(DeleteDatasetRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteDatasetRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteDatasetResponseUnmarshaller.Instance;return Invoke<DeleteDatasetResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DeleteDatasetResponse DeleteDataset(DeleteDatasetRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteDatasetRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteDatasetResponseUnmarshaller.Instance;return Invoke<DeleteDatasetResponse>(request, options);}",
    "output": "public DeleteDatasetResult deleteDataset(DeleteDatasetRequest request) {request = beforeClientExecution(request);return executeDeleteDataset(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public StartRelationalDatabaseResult startRelationalDatabase(StartRelationalDatabaseRequest request) {request = beforeClientExecution(request);return executeStartRelationalDatabase(request);}",
    "output": "public virtual StartRelationalDatabaseResponse StartRelationalDatabase(StartRelationalDatabaseRequest request){var options = new InvokeOptions();options.RequestMarshaller = StartRelationalDatabaseRequestMarshaller.Instance;options.ResponseUnmarshaller = StartRelationalDatabaseResponseUnmarshaller.Instance;return Invoke<StartRelationalDatabaseResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual StartRelationalDatabaseResponse StartRelationalDatabase(StartRelationalDatabaseRequest request){var options = new InvokeOptions();options.RequestMarshaller = StartRelationalDatabaseRequestMarshaller.Instance;options.ResponseUnmarshaller = StartRelationalDatabaseResponseUnmarshaller.Instance;return Invoke<StartRelationalDatabaseResponse>(request, options);}",
    "output": "public StartRelationalDatabaseResult startRelationalDatabase(StartRelationalDatabaseRequest request) {request = beforeClientExecution(request);return executeStartRelationalDatabase(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DescribeReservedCacheNodesOfferingsResult describeReservedCacheNodesOfferings() {return describeReservedCacheNodesOfferings(new DescribeReservedCacheNodesOfferingsRequest());}",
    "output": "public virtual DescribeReservedCacheNodesOfferingsResponse DescribeReservedCacheNodesOfferings(){return DescribeReservedCacheNodesOfferings(new DescribeReservedCacheNodesOfferingsRequest());}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DescribeReservedCacheNodesOfferingsResponse DescribeReservedCacheNodesOfferings(){return DescribeReservedCacheNodesOfferings(new DescribeReservedCacheNodesOfferingsRequest());}",
    "output": "public DescribeReservedCacheNodesOfferingsResult describeReservedCacheNodesOfferings() {return describeReservedCacheNodesOfferings(new DescribeReservedCacheNodesOfferingsRequest());}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "static public double pmt(double r, int nper, double pv, double fv, int type) {return -r * (pv * Math.pow(1 + r, nper) + fv) / ((1 + r*type) * (Math.pow(1 + r, nper) - 1));}",
    "output": "static public double PMT(double r, int nper, double pv, double fv, int type){double pmt = -r * (pv * Math.Pow(1 + r, nper) + fv) / ((1 + r * type) * (Math.Pow(1 + r, nper) - 1));return pmt;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "static public double PMT(double r, int nper, double pv, double fv, int type){double pmt = -r * (pv * Math.Pow(1 + r, nper) + fv) / ((1 + r * type) * (Math.Pow(1 + r, nper) - 1));return pmt;}",
    "output": "static public double pmt(double r, int nper, double pv, double fv, int type) {return -r * (pv * Math.pow(1 + r, nper) + fv) / ((1 + r*type) * (Math.pow(1 + r, nper) - 1));}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DescribeDocumentVersionsResult describeDocumentVersions(DescribeDocumentVersionsRequest request) {request = beforeClientExecution(request);return executeDescribeDocumentVersions(request);}",
    "output": "public virtual DescribeDocumentVersionsResponse DescribeDocumentVersions(DescribeDocumentVersionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDocumentVersionsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDocumentVersionsResponseUnmarshaller.Instance;return Invoke<DescribeDocumentVersionsResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DescribeDocumentVersionsResponse DescribeDocumentVersions(DescribeDocumentVersionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDocumentVersionsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDocumentVersionsResponseUnmarshaller.Instance;return Invoke<DescribeDocumentVersionsResponse>(request, options);}",
    "output": "public DescribeDocumentVersionsResult describeDocumentVersions(DescribeDocumentVersionsRequest request) {request = beforeClientExecution(request);return executeDescribeDocumentVersions(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ListPublishingDestinationsResult listPublishingDestinations(ListPublishingDestinationsRequest request) {request = beforeClientExecution(request);return executeListPublishingDestinations(request);}",
    "output": "public virtual ListPublishingDestinationsResponse ListPublishingDestinations(ListPublishingDestinationsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListPublishingDestinationsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListPublishingDestinationsResponseUnmarshaller.Instance;return Invoke<ListPublishingDestinationsResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual ListPublishingDestinationsResponse ListPublishingDestinations(ListPublishingDestinationsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListPublishingDestinationsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListPublishingDestinationsResponseUnmarshaller.Instance;return Invoke<ListPublishingDestinationsResponse>(request, options);}",
    "output": "public ListPublishingDestinationsResult listPublishingDestinations(ListPublishingDestinationsRequest request) {request = beforeClientExecution(request);return executeListPublishingDestinations(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DeleteAccountAliasRequest(String accountAlias) {setAccountAlias(accountAlias);}",
    "output": "public DeleteAccountAliasRequest(string accountAlias){_accountAlias = accountAlias;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public DeleteAccountAliasRequest(string accountAlias){_accountAlias = accountAlias;}",
    "output": "public DeleteAccountAliasRequest(String accountAlias) {setAccountAlias(accountAlias);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public static long[] grow(long[] array) {return grow(array, 1 + array.length);}",
    "output": "public static float[] Grow(float[] array){return Grow(array, 1 + array.Length);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public static float[] Grow(float[] array){return Grow(array, 1 + array.Length);}",
    "output": "public static long[] grow(long[] array) {return grow(array, 1 + array.length);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String outputToString(Object output) {if (!(output instanceof List)) {return outputs.outputToString((T) output);} else {List<T> outputList = (List<T>) output;StringBuilder b = new StringBuilder();b.append('[');for(int i=0;i<outputList.size();i++) {if (i > 0) {b.append(\", \");}b.append(outputs.outputToString(outputList.get(i)));}b.append(']');return b.toString();}}",
    "output": "public override string OutputToString(object output){if (!(output is IList)){return outputs.OutputToString((T)output);}else{IList outputList = (IList)output;StringBuilder b = new StringBuilder();b.Append('[');for (int i = 0; i < outputList.Count; i++){if (i > 0){b.Append(\", \");}b.Append(outputs.OutputToString((T)outputList[i]));}b.Append(']');return b.ToString();}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override string OutputToString(object output){if (!(output is IList)){return outputs.OutputToString((T)output);}else{IList outputList = (IList)output;StringBuilder b = new StringBuilder();b.Append('[');for (int i = 0; i < outputList.Count; i++){if (i > 0){b.Append(\", \");}b.Append(outputs.OutputToString((T)outputList[i]));}b.Append(']');return b.ToString();}}",
    "output": "public String outputToString(Object output) {if (!(output instanceof List)) {return outputs.outputToString((T) output);} else {List<T> outputList = (List<T>) output;StringBuilder b = new StringBuilder();b.append('[');for(int i=0;i<outputList.size();i++) {if (i > 0) {b.append(\", \");}b.append(outputs.outputToString(outputList.get(i)));}b.append(']');return b.toString();}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void notifyDeleteCell(Cell cell) {_bookEvaluator.notifyDeleteCell(new HSSFEvaluationCell((HSSFCell)cell));}",
    "output": "public void NotifyDeleteCell(ICell cell){_bookEvaluator.NotifyDeleteCell(new HSSFEvaluationCell(cell));}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public void NotifyDeleteCell(ICell cell){_bookEvaluator.NotifyDeleteCell(new HSSFEvaluationCell(cell));}",
    "output": "public void notifyDeleteCell(Cell cell) {_bookEvaluator.notifyDeleteCell(new HSSFEvaluationCell((HSSFCell)cell));}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public StringBuilder replace(int start, int end, String str) {replace0(start, end, str);return this;}",
    "output": "public java.lang.StringBuilder replace(int start, int end, string str){replace0(start, end, str);return this;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public java.lang.StringBuilder replace(int start, int end, string str){replace0(start, end, str);return this;}",
    "output": "public StringBuilder replace(int start, int end, String str) {replace0(start, end, str);return this;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public SetIdentityPoolConfigurationResult setIdentityPoolConfiguration(SetIdentityPoolConfigurationRequest request) {request = beforeClientExecution(request);return executeSetIdentityPoolConfiguration(request);}",
    "output": "public virtual SetIdentityPoolConfigurationResponse SetIdentityPoolConfiguration(SetIdentityPoolConfigurationRequest request){var options = new InvokeOptions();options.RequestMarshaller = SetIdentityPoolConfigurationRequestMarshaller.Instance;options.ResponseUnmarshaller = SetIdentityPoolConfigurationResponseUnmarshaller.Instance;return Invoke<SetIdentityPoolConfigurationResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual SetIdentityPoolConfigurationResponse SetIdentityPoolConfiguration(SetIdentityPoolConfigurationRequest request){var options = new InvokeOptions();options.RequestMarshaller = SetIdentityPoolConfigurationRequestMarshaller.Instance;options.ResponseUnmarshaller = SetIdentityPoolConfigurationResponseUnmarshaller.Instance;return Invoke<SetIdentityPoolConfigurationResponse>(request, options);}",
    "output": "public SetIdentityPoolConfigurationResult setIdentityPoolConfiguration(SetIdentityPoolConfigurationRequest request) {request = beforeClientExecution(request);return executeSetIdentityPoolConfiguration(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public static double kthSmallest(double[] v, int k) {double r = Double.NaN;int index = k-1; if (v!=null && v.length > index && index >= 0) {Arrays.sort(v);r = v[index];}return r;}",
    "output": "public static double kthSmallest(double[] v, int k){double r = double.NaN;k--; if (v != null && v.Length > k && k >= 0){Array.Sort(v);r = v[k];}return r;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public static double kthSmallest(double[] v, int k){double r = double.NaN;k--; if (v != null && v.Length > k && k >= 0){Array.Sort(v);r = v[k];}return r;}",
    "output": "public static double kthSmallest(double[] v, int k) {double r = Double.NaN;int index = k-1; if (v!=null && v.length > index && index >= 0) {Arrays.sort(v);r = v[index];}return r;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void set(int index, long value) {final int o = index >>> 5;final int b = index & 31;final int shift = b << 1;blocks[o] = (blocks[o] & ~(3L << shift)) | (value << shift);}",
    "output": "public override void Set(int index, long value){int o = (int)((uint)index >> 5);int b = index & 31;int shift = b << 1;blocks[o] = (blocks[o] & ~(3L << shift)) | (value << shift);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override void Set(int index, long value){int o = (int)((uint)index >> 5);int b = index & 31;int shift = b << 1;blocks[o] = (blocks[o] & ~(3L << shift)) | (value << shift);}",
    "output": "public void set(int index, long value) {final int o = index >>> 5;final int b = index & 31;final int shift = b << 1;blocks[o] = (blocks[o] & ~(3L << shift)) | (value << shift);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String toString() {if (getChildren() == null || getChildren().size() == 0)return \"<boolean operation='and'/>\";StringBuilder sb = new StringBuilder();sb.append(\"<boolean operation='and'>\");for (QueryNode child : getChildren()) {sb.append(\"\\n\");sb.append(child.toString());}sb.append(\"\\n</boolean>\");return sb.toString();}",
    "output": "public override string ToString(){var children = GetChildren();if (children == null || children.Count == 0)return \"<boolean operation='and'/>\";StringBuilder sb = new StringBuilder();sb.Append(\"<boolean operation='and'>\");foreach (IQueryNode child in children){sb.Append(\"\\n\");sb.Append(child.ToString());}sb.Append(\"\\n</boolean>\");return sb.ToString();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override string ToString(){var children = GetChildren();if (children == null || children.Count == 0)return \"<boolean operation='and'/>\";StringBuilder sb = new StringBuilder();sb.Append(\"<boolean operation='and'>\");foreach (IQueryNode child in children){sb.Append(\"\\n\");sb.Append(child.ToString());}sb.Append(\"\\n</boolean>\");return sb.ToString();}",
    "output": "public String toString() {if (getChildren() == null || getChildren().size() == 0)return \"<boolean operation='and'/>\";StringBuilder sb = new StringBuilder();sb.append(\"<boolean operation='and'>\");for (QueryNode child : getChildren()) {sb.append(\"\\n\");sb.append(child.toString());}sb.append(\"\\n</boolean>\");return sb.toString();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public int sumTokenSizes(int fromIx, int toIx) {int result = 0;for (int i=fromIx; i<toIx; i++) {result += _ptgs[i].getSize();}return result;}",
    "output": "public int SumTokenSizes(int fromIx, int toIx){int result = 0;for (int i = fromIx; i < toIx; i++){result += _ptgs[i].Size;}return result;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public int SumTokenSizes(int fromIx, int toIx){int result = 0;for (int i = fromIx; i < toIx; i++){result += _ptgs[i].Size;}return result;}",
    "output": "public int sumTokenSizes(int fromIx, int toIx) {int result = 0;for (int i=fromIx; i<toIx; i++) {result += _ptgs[i].getSize();}return result;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void setReadonly(boolean readonly) {if ( this.readonly && !readonly ) throw new IllegalStateException(\"can't alter readonly IntervalSet\");this.readonly = readonly;}",
    "output": "public virtual void SetReadonly(bool @readonly){if (this.@readonly && !@readonly){throw new InvalidOperationException(\"can't alter readonly IntervalSet\");}this.@readonly = @readonly;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual void SetReadonly(bool @readonly){if (this.@readonly && !@readonly){throw new InvalidOperationException(\"can't alter readonly IntervalSet\");}this.@readonly = @readonly;}",
    "output": "public void setReadonly(boolean readonly) {if ( this.readonly && !readonly ) throw new IllegalStateException(\"can't alter readonly IntervalSet\");this.readonly = readonly;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public final void clearConsumingCell(FormulaCellCacheEntry cce) {if(!_consumingCells.remove(cce)) {throw new IllegalStateException(\"Specified formula cell is not consumed by this cell\");}}",
    "output": "public void ClearConsumingCell(FormulaCellCacheEntry cce){if (!_consumingCells.Remove(cce)){throw new InvalidOperationException(\"Specified formula cell is not consumed by this cell\");}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public void ClearConsumingCell(FormulaCellCacheEntry cce){if (!_consumingCells.Remove(cce)){throw new InvalidOperationException(\"Specified formula cell is not consumed by this cell\");}}",
    "output": "public final void clearConsumingCell(FormulaCellCacheEntry cce) {if(!_consumingCells.remove(cce)) {throw new IllegalStateException(\"Specified formula cell is not consumed by this cell\");}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "@Override public List<E> subList(int start, int end) {synchronized (mutex) {return new SynchronizedRandomAccessList<E>(list.subList(start, end), mutex);}}",
    "output": "public override java.util.List<E> subList(int start, int end){lock (mutex){return new java.util.Collections.SynchronizedRandomAccessList<E>(list.subList(start, end), mutex);}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override java.util.List<E> subList(int start, int end){lock (mutex){return new java.util.Collections.SynchronizedRandomAccessList<E>(list.subList(start, end), mutex);}}",
    "output": "@Override public List<E> subList(int start, int end) {synchronized (mutex) {return new SynchronizedRandomAccessList<E>(list.subList(start, end), mutex);}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public FileHeader getFileHeader() {return file;}",
    "output": "public virtual FileHeader GetFileHeader(){return file;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual FileHeader GetFileHeader(){return file;}",
    "output": "public FileHeader getFileHeader() {return file;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public AttachLoadBalancersResult attachLoadBalancers(AttachLoadBalancersRequest request) {request = beforeClientExecution(request);return executeAttachLoadBalancers(request);}",
    "output": "public virtual AttachLoadBalancersResponse AttachLoadBalancers(AttachLoadBalancersRequest request){var options = new InvokeOptions();options.RequestMarshaller = AttachLoadBalancersRequestMarshaller.Instance;options.ResponseUnmarshaller = AttachLoadBalancersResponseUnmarshaller.Instance;return Invoke<AttachLoadBalancersResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual AttachLoadBalancersResponse AttachLoadBalancers(AttachLoadBalancersRequest request){var options = new InvokeOptions();options.RequestMarshaller = AttachLoadBalancersRequestMarshaller.Instance;options.ResponseUnmarshaller = AttachLoadBalancersResponseUnmarshaller.Instance;return Invoke<AttachLoadBalancersResponse>(request, options);}",
    "output": "public AttachLoadBalancersResult attachLoadBalancers(AttachLoadBalancersRequest request) {request = beforeClientExecution(request);return executeAttachLoadBalancers(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public InitiateJobRequest(String accountId, String vaultName, JobParameters jobParameters) {setAccountId(accountId);setVaultName(vaultName);setJobParameters(jobParameters);}",
    "output": "public InitiateJobRequest(string accountId, string vaultName, JobParameters jobParameters){_accountId = accountId;_vaultName = vaultName;_jobParameters = jobParameters;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public InitiateJobRequest(string accountId, string vaultName, JobParameters jobParameters){_accountId = accountId;_vaultName = vaultName;_jobParameters = jobParameters;}",
    "output": "public InitiateJobRequest(String accountId, String vaultName, JobParameters jobParameters) {setAccountId(accountId);setVaultName(vaultName);setJobParameters(jobParameters);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String toString() {return \"SPL\";}",
    "output": "public override string ToString(){return \"SPL\";}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override string ToString(){return \"SPL\";}",
    "output": "public String toString() {return \"SPL\";}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ReplaceableAttribute(String name, String value, Boolean replace) {setName(name);setValue(value);setReplace(replace);}",
    "output": "public ReplaceableAttribute(string name, string value, bool replace){_name = name;_value = value;_replace = replace;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public ReplaceableAttribute(string name, string value, bool replace){_name = name;_value = value;_replace = replace;}",
    "output": "public ReplaceableAttribute(String name, String value, Boolean replace) {setName(name);setValue(value);setReplace(replace);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public final void add(IndexableField field) {fields.add(field);}",
    "output": "public void Add(IIndexableField field){fields.Add(field);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public void Add(IIndexableField field){fields.Add(field);}",
    "output": "public final void add(IndexableField field) {fields.add(field);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DeleteStackSetResult deleteStackSet(DeleteStackSetRequest request) {request = beforeClientExecution(request);return executeDeleteStackSet(request);}",
    "output": "public virtual DeleteStackSetResponse DeleteStackSet(DeleteStackSetRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteStackSetRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteStackSetResponseUnmarshaller.Instance;return Invoke<DeleteStackSetResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DeleteStackSetResponse DeleteStackSet(DeleteStackSetRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteStackSetRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteStackSetResponseUnmarshaller.Instance;return Invoke<DeleteStackSetResponse>(request, options);}",
    "output": "public DeleteStackSetResult deleteStackSet(DeleteStackSetRequest request) {request = beforeClientExecution(request);return executeDeleteStackSet(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public GetRepoBuildRuleListRequest() {super(\"cr\", \"2016-06-07\", \"GetRepoBuildRuleList\", \"cr\");setUriPattern(\"/repos/[RepoNamespace]/[RepoName]/rules\");setMethod(MethodType.GET);}",
    "output": "public GetRepoBuildRuleListRequest(): base(\"cr\", \"2016-06-07\", \"GetRepoBuildRuleList\", \"cr\", \"openAPI\"){UriPattern = \"/repos/[RepoNamespace]/[RepoName]/rules\";Method = MethodType.GET;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public GetRepoBuildRuleListRequest(): base(\"cr\", \"2016-06-07\", \"GetRepoBuildRuleList\", \"cr\", \"openAPI\"){UriPattern = \"/repos/[RepoNamespace]/[RepoName]/rules\";Method = MethodType.GET;}",
    "output": "public GetRepoBuildRuleListRequest() {super(\"cr\", \"2016-06-07\", \"GetRepoBuildRuleList\", \"cr\");setUriPattern(\"/repos/[RepoNamespace]/[RepoName]/rules\");setMethod(MethodType.GET);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public SparseArray(int initialCapacity) {initialCapacity = ArrayUtils.idealIntArraySize(initialCapacity);mKeys = new int[initialCapacity];mValues = new Object[initialCapacity];mSize = 0;}",
    "output": "public SparseArray(int initialCapacity){initialCapacity = android.util.@internal.ArrayUtils.idealIntArraySize(initialCapacity);mKeys = new int[initialCapacity];mValues = new object[initialCapacity];mSize = 0;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public SparseArray(int initialCapacity){initialCapacity = android.util.@internal.ArrayUtils.idealIntArraySize(initialCapacity);mKeys = new int[initialCapacity];mValues = new object[initialCapacity];mSize = 0;}",
    "output": "public SparseArray(int initialCapacity) {initialCapacity = ArrayUtils.idealIntArraySize(initialCapacity);mKeys = new int[initialCapacity];mValues = new Object[initialCapacity];mSize = 0;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public InvokeServiceRequest() {super(\"industry-brain\", \"2018-07-12\", \"InvokeService\");setMethod(MethodType.POST);}",
    "output": "public InvokeServiceRequest(): base(\"industry-brain\", \"2018-07-12\", \"InvokeService\"){Method = MethodType.POST;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public InvokeServiceRequest(): base(\"industry-brain\", \"2018-07-12\", \"InvokeService\"){Method = MethodType.POST;}",
    "output": "public InvokeServiceRequest() {super(\"industry-brain\", \"2018-07-12\", \"InvokeService\");setMethod(MethodType.POST);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ListAlbumPhotosRequest() {super(\"CloudPhoto\", \"2017-07-11\", \"ListAlbumPhotos\", \"cloudphoto\");setProtocol(ProtocolType.HTTPS);}",
    "output": "public ListAlbumPhotosRequest(): base(\"CloudPhoto\", \"2017-07-11\", \"ListAlbumPhotos\", \"cloudphoto\", \"openAPI\"){Protocol = ProtocolType.HTTPS;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public ListAlbumPhotosRequest(): base(\"CloudPhoto\", \"2017-07-11\", \"ListAlbumPhotos\", \"cloudphoto\", \"openAPI\"){Protocol = ProtocolType.HTTPS;}",
    "output": "public ListAlbumPhotosRequest() {super(\"CloudPhoto\", \"2017-07-11\", \"ListAlbumPhotos\", \"cloudphoto\");setProtocol(ProtocolType.HTTPS);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public boolean hasPrevious() {return link != list.voidLink;}",
    "output": "public bool hasPrevious(){return link != list.voidLink;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public bool hasPrevious(){return link != list.voidLink;}",
    "output": "public boolean hasPrevious() {return link != list.voidLink;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DeleteHsmConfigurationResult deleteHsmConfiguration(DeleteHsmConfigurationRequest request) {request = beforeClientExecution(request);return executeDeleteHsmConfiguration(request);}",
    "output": "public virtual DeleteHsmConfigurationResponse DeleteHsmConfiguration(DeleteHsmConfigurationRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteHsmConfigurationRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteHsmConfigurationResponseUnmarshaller.Instance;return Invoke<DeleteHsmConfigurationResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DeleteHsmConfigurationResponse DeleteHsmConfiguration(DeleteHsmConfigurationRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteHsmConfigurationRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteHsmConfigurationResponseUnmarshaller.Instance;return Invoke<DeleteHsmConfigurationResponse>(request, options);}",
    "output": "public DeleteHsmConfigurationResult deleteHsmConfiguration(DeleteHsmConfigurationRequest request) {request = beforeClientExecution(request);return executeDeleteHsmConfiguration(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public CreateLoadBalancerRequest(String loadBalancerName) {setLoadBalancerName(loadBalancerName);}",
    "output": "public CreateLoadBalancerRequest(string loadBalancerName){_loadBalancerName = loadBalancerName;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public CreateLoadBalancerRequest(string loadBalancerName){_loadBalancerName = loadBalancerName;}",
    "output": "public CreateLoadBalancerRequest(String loadBalancerName) {setLoadBalancerName(loadBalancerName);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String getUserInfo() {return decode(userInfo);}",
    "output": "public string getUserInfo(){return decode(userInfo);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public string getUserInfo(){return decode(userInfo);}",
    "output": "public String getUserInfo() {return decode(userInfo);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public TagAttendeeResult tagAttendee(TagAttendeeRequest request) {request = beforeClientExecution(request);return executeTagAttendee(request);}",
    "output": "public virtual TagAttendeeResponse TagAttendee(TagAttendeeRequest request){var options = new InvokeOptions();options.RequestMarshaller = TagAttendeeRequestMarshaller.Instance;options.ResponseUnmarshaller = TagAttendeeResponseUnmarshaller.Instance;return Invoke<TagAttendeeResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual TagAttendeeResponse TagAttendee(TagAttendeeRequest request){var options = new InvokeOptions();options.RequestMarshaller = TagAttendeeRequestMarshaller.Instance;options.ResponseUnmarshaller = TagAttendeeResponseUnmarshaller.Instance;return Invoke<TagAttendeeResponse>(request, options);}",
    "output": "public TagAttendeeResult tagAttendee(TagAttendeeRequest request) {request = beforeClientExecution(request);return executeTagAttendee(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String getRefName() {return name;}",
    "output": "public virtual string GetRefName(){return name;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual string GetRefName(){return name;}",
    "output": "public String getRefName() {return name;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public SpanNearQuery build() {return new SpanNearQuery(clauses.toArray(new SpanQuery[clauses.size()]), slop, ordered);}",
    "output": "public override WAH8DocIdSet Build(){if (this.wordNum != -1){AddWord(wordNum, (byte)word);}return base.Build();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override WAH8DocIdSet Build(){if (this.wordNum != -1){AddWord(wordNum, (byte)word);}return base.Build();}",
    "output": "public SpanNearQuery build() {return new SpanNearQuery(clauses.toArray(new SpanQuery[clauses.size()]), slop, ordered);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public boolean isSubTotal(int rowIndex, int columnIndex) {return false;}",
    "output": "public virtual bool IsSubTotal(int rowIndex, int columnIndex){return false;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual bool IsSubTotal(int rowIndex, int columnIndex){return false;}",
    "output": "public boolean isSubTotal(int rowIndex, int columnIndex) {return false;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DescribeDBProxiesResult describeDBProxies(DescribeDBProxiesRequest request) {request = beforeClientExecution(request);return executeDescribeDBProxies(request);}",
    "output": "public virtual DescribeDBProxiesResponse DescribeDBProxies(DescribeDBProxiesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDBProxiesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDBProxiesResponseUnmarshaller.Instance;return Invoke<DescribeDBProxiesResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DescribeDBProxiesResponse DescribeDBProxies(DescribeDBProxiesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDBProxiesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDBProxiesResponseUnmarshaller.Instance;return Invoke<DescribeDBProxiesResponse>(request, options);}",
    "output": "public DescribeDBProxiesResult describeDBProxies(DescribeDBProxiesRequest request) {request = beforeClientExecution(request);return executeDescribeDBProxies(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public GetVoiceConnectorProxyResult getVoiceConnectorProxy(GetVoiceConnectorProxyRequest request) {request = beforeClientExecution(request);return executeGetVoiceConnectorProxy(request);}",
    "output": "public virtual GetVoiceConnectorProxyResponse GetVoiceConnectorProxy(GetVoiceConnectorProxyRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetVoiceConnectorProxyRequestMarshaller.Instance;options.ResponseUnmarshaller = GetVoiceConnectorProxyResponseUnmarshaller.Instance;return Invoke<GetVoiceConnectorProxyResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual GetVoiceConnectorProxyResponse GetVoiceConnectorProxy(GetVoiceConnectorProxyRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetVoiceConnectorProxyRequestMarshaller.Instance;options.ResponseUnmarshaller = GetVoiceConnectorProxyResponseUnmarshaller.Instance;return Invoke<GetVoiceConnectorProxyResponse>(request, options);}",
    "output": "public GetVoiceConnectorProxyResult getVoiceConnectorProxy(GetVoiceConnectorProxyRequest request) {request = beforeClientExecution(request);return executeGetVoiceConnectorProxy(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public WindowCacheConfig fromConfig(Config rc) {setPackedGitUseStrongRefs(rc.getBoolean(CONFIG_CORE_SECTION,CONFIG_KEY_PACKED_GIT_USE_STRONGREFS,isPackedGitUseStrongRefs()));setPackedGitOpenFiles(rc.getInt(CONFIG_CORE_SECTION, null,CONFIG_KEY_PACKED_GIT_OPENFILES, getPackedGitOpenFiles()));setPackedGitLimit(rc.getLong(CONFIG_CORE_SECTION, null,CONFIG_KEY_PACKED_GIT_LIMIT, getPackedGitLimit()));setPackedGitWindowSize(rc.getInt(CONFIG_CORE_SECTION, null,CONFIG_KEY_PACKED_GIT_WINDOWSIZE, getPackedGitWindowSize()));setPackedGitMMAP(rc.getBoolean(CONFIG_CORE_SECTION, null,CONFIG_KEY_PACKED_GIT_MMAP, isPackedGitMMAP()));setDeltaBaseCacheLimit(rc.getInt(CONFIG_CORE_SECTION, null,CONFIG_KEY_DELTA_BASE_CACHE_LIMIT, getDeltaBaseCacheLimit()));long maxMem = Runtime.getRuntime().maxMemory();long sft = rc.getLong(CONFIG_CORE_SECTION, null,CONFIG_KEY_STREAM_FILE_TRESHOLD, getStreamFileThreshold());sft = Math.min(sft, maxMem / 4); sft = Math.min(sft, Integer.MAX_VALUE); setStreamFileThreshold((int) sft);return this;}",
    "output": "public virtual void FromConfig(Config rc){SetPackedGitOpenFiles(rc.GetInt(\"core\", null, \"packedgitopenfiles\", GetPackedGitOpenFiles()));SetPackedGitLimit(rc.GetLong(\"core\", null, \"packedgitlimit\", GetPackedGitLimit()));SetPackedGitWindowSize(rc.GetInt(\"core\", null, \"packedgitwindowsize\", GetPackedGitWindowSize()));SetPackedGitMMAP(rc.GetBoolean(\"core\", null, \"packedgitmmap\", IsPackedGitMMAP()));SetDeltaBaseCacheLimit(rc.GetInt(\"core\", null, \"deltabasecachelimit\", GetDeltaBaseCacheLimit()));long maxMem = Runtime.GetRuntime().MaxMemory();long sft = rc.GetLong(\"core\", null, \"streamfilethreshold\", GetStreamFileThreshold());sft = Math.Min(sft, maxMem / 4);sft = Math.Min(sft, int.MaxValue);SetStreamFileThreshold((int)sft);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual void FromConfig(Config rc){SetPackedGitOpenFiles(rc.GetInt(\"core\", null, \"packedgitopenfiles\", GetPackedGitOpenFiles()));SetPackedGitLimit(rc.GetLong(\"core\", null, \"packedgitlimit\", GetPackedGitLimit()));SetPackedGitWindowSize(rc.GetInt(\"core\", null, \"packedgitwindowsize\", GetPackedGitWindowSize()));SetPackedGitMMAP(rc.GetBoolean(\"core\", null, \"packedgitmmap\", IsPackedGitMMAP()));SetDeltaBaseCacheLimit(rc.GetInt(\"core\", null, \"deltabasecachelimit\", GetDeltaBaseCacheLimit()));long maxMem = Runtime.GetRuntime().MaxMemory();long sft = rc.GetLong(\"core\", null, \"streamfilethreshold\", GetStreamFileThreshold());sft = Math.Min(sft, maxMem / 4);sft = Math.Min(sft, int.MaxValue);SetStreamFileThreshold((int)sft);}",
    "output": "public WindowCacheConfig fromConfig(Config rc) {setPackedGitUseStrongRefs(rc.getBoolean(CONFIG_CORE_SECTION,CONFIG_KEY_PACKED_GIT_USE_STRONGREFS,isPackedGitUseStrongRefs()));setPackedGitOpenFiles(rc.getInt(CONFIG_CORE_SECTION, null,CONFIG_KEY_PACKED_GIT_OPENFILES, getPackedGitOpenFiles()));setPackedGitLimit(rc.getLong(CONFIG_CORE_SECTION, null,CONFIG_KEY_PACKED_GIT_LIMIT, getPackedGitLimit()));setPackedGitWindowSize(rc.getInt(CONFIG_CORE_SECTION, null,CONFIG_KEY_PACKED_GIT_WINDOWSIZE, getPackedGitWindowSize()));setPackedGitMMAP(rc.getBoolean(CONFIG_CORE_SECTION, null,CONFIG_KEY_PACKED_GIT_MMAP, isPackedGitMMAP()));setDeltaBaseCacheLimit(rc.getInt(CONFIG_CORE_SECTION, null,CONFIG_KEY_DELTA_BASE_CACHE_LIMIT, getDeltaBaseCacheLimit()));long maxMem = Runtime.getRuntime().maxMemory();long sft = rc.getLong(CONFIG_CORE_SECTION, null,CONFIG_KEY_STREAM_FILE_TRESHOLD, getStreamFileThreshold());sft = Math.min(sft, maxMem / 4); sft = Math.min(sft, Integer.MAX_VALUE); setStreamFileThreshold((int) sft);return this;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public static Date getJavaDate(double date) {return getJavaDate(date, false, null, false);}",
    "output": "public static DateTime GetJavaDate(double date){return GetJavaDate(date, false);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public static DateTime GetJavaDate(double date){return GetJavaDate(date, false);}",
    "output": "public static Date getJavaDate(double date) {return getJavaDate(date, false, null, false);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public StartPersonTrackingResult startPersonTracking(StartPersonTrackingRequest request) {request = beforeClientExecution(request);return executeStartPersonTracking(request);}",
    "output": "public virtual StartPersonTrackingResponse StartPersonTracking(StartPersonTrackingRequest request){var options = new InvokeOptions();options.RequestMarshaller = StartPersonTrackingRequestMarshaller.Instance;options.ResponseUnmarshaller = StartPersonTrackingResponseUnmarshaller.Instance;return Invoke<StartPersonTrackingResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual StartPersonTrackingResponse StartPersonTracking(StartPersonTrackingRequest request){var options = new InvokeOptions();options.RequestMarshaller = StartPersonTrackingRequestMarshaller.Instance;options.ResponseUnmarshaller = StartPersonTrackingResponseUnmarshaller.Instance;return Invoke<StartPersonTrackingResponse>(request, options);}",
    "output": "public StartPersonTrackingResult startPersonTracking(StartPersonTrackingRequest request) {request = beforeClientExecution(request);return executeStartPersonTracking(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "@Override public int size() {return totalSize;}",
    "output": "public override int size(){return this._enclosing.size();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override int size(){return this._enclosing.size();}",
    "output": "@Override public int size() {return totalSize;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public GetRouteResult getRoute(GetRouteRequest request) {request = beforeClientExecution(request);return executeGetRoute(request);}",
    "output": "public virtual GetRouteResponse GetRoute(GetRouteRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetRouteRequestMarshaller.Instance;options.ResponseUnmarshaller = GetRouteResponseUnmarshaller.Instance;return Invoke<GetRouteResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual GetRouteResponse GetRoute(GetRouteRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetRouteRequestMarshaller.Instance;options.ResponseUnmarshaller = GetRouteResponseUnmarshaller.Instance;return Invoke<GetRouteResponse>(request, options);}",
    "output": "public GetRouteResult getRoute(GetRouteRequest request) {request = beforeClientExecution(request);return executeGetRoute(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DeleteClusterResult deleteCluster(DeleteClusterRequest request) {request = beforeClientExecution(request);return executeDeleteCluster(request);}",
    "output": "public virtual DeleteClusterResponse DeleteCluster(DeleteClusterRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteClusterRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteClusterResponseUnmarshaller.Instance;return Invoke<DeleteClusterResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DeleteClusterResponse DeleteCluster(DeleteClusterRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteClusterRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteClusterResponseUnmarshaller.Instance;return Invoke<DeleteClusterResponse>(request, options);}",
    "output": "public DeleteClusterResult deleteCluster(DeleteClusterRequest request) {request = beforeClientExecution(request);return executeDeleteCluster(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String toString(){StringBuilder buffer = new StringBuilder();buffer.append(\"[MMS]\\n\");buffer.append(\"    .addMenu        = \").append(Integer.toHexString(getAddMenuCount())).append(\"\\n\");buffer.append(\"    .delMenu        = \").append(Integer.toHexString(getDelMenuCount())).append(\"\\n\");buffer.append(\"[/MMS]\\n\");return buffer.toString();}",
    "output": "public override String ToString(){StringBuilder buffer = new StringBuilder();buffer.Append(\"[MMS]\\n\");buffer.Append(\"    .addMenu        = \").Append(StringUtil.ToHexString(AddMenuCount)).Append(\"\\n\");buffer.Append(\"    .delMenu        = \").Append(StringUtil.ToHexString(DelMenuCount)).Append(\"\\n\");buffer.Append(\"[/MMS]\\n\");return buffer.ToString();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override String ToString(){StringBuilder buffer = new StringBuilder();buffer.Append(\"[MMS]\\n\");buffer.Append(\"    .addMenu        = \").Append(StringUtil.ToHexString(AddMenuCount)).Append(\"\\n\");buffer.Append(\"    .delMenu        = \").Append(StringUtil.ToHexString(DelMenuCount)).Append(\"\\n\");buffer.Append(\"[/MMS]\\n\");return buffer.ToString();}",
    "output": "public String toString(){StringBuilder buffer = new StringBuilder();buffer.append(\"[MMS]\\n\");buffer.append(\"    .addMenu        = \").append(Integer.toHexString(getAddMenuCount())).append(\"\\n\");buffer.append(\"    .delMenu        = \").append(Integer.toHexString(getDelMenuCount())).append(\"\\n\");buffer.append(\"[/MMS]\\n\");return buffer.toString();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public FileBasedConfig(Config base, File cfgLocation, FS fs) {super(base);configFile = cfgLocation;this.fs = fs;this.snapshot = FileSnapshot.DIRTY;this.hash = ObjectId.zeroId();}",
    "output": "public FileBasedConfig(Config @base, FilePath cfgLocation, FS fs) : base(@base){configFile = cfgLocation;this.fs = fs;this.snapshot = FileSnapshot.DIRTY;this.hash = ObjectId.ZeroId;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public FileBasedConfig(Config @base, FilePath cfgLocation, FS fs) : base(@base){configFile = cfgLocation;this.fs = fs;this.snapshot = FileSnapshot.DIRTY;this.hash = ObjectId.ZeroId;}",
    "output": "public FileBasedConfig(Config base, File cfgLocation, FS fs) {super(base);configFile = cfgLocation;this.fs = fs;this.snapshot = FileSnapshot.DIRTY;this.hash = ObjectId.zeroId();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public int following(int pos) {if (pos < text.getBeginIndex() || pos > text.getEndIndex()) {throw new IllegalArgumentException(\"offset out of bounds\");} else if (0 == sentenceStarts.length) {text.setIndex(text.getBeginIndex());return DONE;} else if (pos >= sentenceStarts[sentenceStarts.length - 1]) {text.setIndex(text.getEndIndex());currentSentence = sentenceStarts.length - 1;return DONE;} else { currentSentence = (sentenceStarts.length - 1) / 2; moveToSentenceAt(pos, 0, sentenceStarts.length - 2);text.setIndex(sentenceStarts[++currentSentence]);return current();}}",
    "output": "public override int Following(int pos){if (pos < text.BeginIndex || pos > text.EndIndex){throw new ArgumentException(\"offset out of bounds\");}else if (0 == sentenceStarts.Length){text.SetIndex(text.BeginIndex);return Done;}else if (pos >= sentenceStarts[sentenceStarts.Length - 1]){text.SetIndex(text.EndIndex);currentSentence = sentenceStarts.Length - 1;return Done;}else{ currentSentence = (sentenceStarts.Length - 1) / 2; MoveToSentenceAt(pos, 0, sentenceStarts.Length - 2);text.SetIndex(sentenceStarts[++currentSentence]);return Current;}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override int Following(int pos){if (pos < text.BeginIndex || pos > text.EndIndex){throw new ArgumentException(\"offset out of bounds\");}else if (0 == sentenceStarts.Length){text.SetIndex(text.BeginIndex);return Done;}else if (pos >= sentenceStarts[sentenceStarts.Length - 1]){text.SetIndex(text.EndIndex);currentSentence = sentenceStarts.Length - 1;return Done;}else{ currentSentence = (sentenceStarts.Length - 1) / 2; MoveToSentenceAt(pos, 0, sentenceStarts.Length - 2);text.SetIndex(sentenceStarts[++currentSentence]);return Current;}}",
    "output": "public int following(int pos) {if (pos < text.getBeginIndex() || pos > text.getEndIndex()) {throw new IllegalArgumentException(\"offset out of bounds\");} else if (0 == sentenceStarts.length) {text.setIndex(text.getBeginIndex());return DONE;} else if (pos >= sentenceStarts[sentenceStarts.length - 1]) {text.setIndex(text.getEndIndex());currentSentence = sentenceStarts.length - 1;return DONE;} else { currentSentence = (sentenceStarts.length - 1) / 2; moveToSentenceAt(pos, 0, sentenceStarts.length - 2);text.setIndex(sentenceStarts[++currentSentence]);return current();}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public UpdateParameterGroupResult updateParameterGroup(UpdateParameterGroupRequest request) {request = beforeClientExecution(request);return executeUpdateParameterGroup(request);}",
    "output": "public virtual UpdateParameterGroupResponse UpdateParameterGroup(UpdateParameterGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateParameterGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateParameterGroupResponseUnmarshaller.Instance;return Invoke<UpdateParameterGroupResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual UpdateParameterGroupResponse UpdateParameterGroup(UpdateParameterGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateParameterGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateParameterGroupResponseUnmarshaller.Instance;return Invoke<UpdateParameterGroupResponse>(request, options);}",
    "output": "public UpdateParameterGroupResult updateParameterGroup(UpdateParameterGroupRequest request) {request = beforeClientExecution(request);return executeUpdateParameterGroup(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public SeriesChartGroupIndexRecord clone() {return copy();}",
    "output": "public override Object Clone(){SeriesChartGroupIndexRecord rec = new SeriesChartGroupIndexRecord();rec.field_1_chartGroupIndex = field_1_chartGroupIndex;return rec;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override Object Clone(){SeriesChartGroupIndexRecord rec = new SeriesChartGroupIndexRecord();rec.field_1_chartGroupIndex = field_1_chartGroupIndex;return rec;}",
    "output": "public SeriesChartGroupIndexRecord clone() {return copy();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public static double calcDistanceFromErrPct(Shape shape, double distErrPct, SpatialContext ctx) {if (distErrPct < 0 || distErrPct > 0.5) {throw new IllegalArgumentException(\"distErrPct \" + distErrPct + \" must be between [0 to 0.5]\");}if (distErrPct == 0 || shape instanceof Point) {return 0;}Rectangle bbox = shape.getBoundingBox();Point ctr = bbox.getCenter();double y = (ctr.getY() >= 0 ? bbox.getMaxY() : bbox.getMinY());double diagonalDist = ctx.getDistCalc().distance(ctr, bbox.getMaxX(), y);return diagonalDist * distErrPct;}",
    "output": "public static double CalcDistanceFromErrPct(IShape shape, double distErrPct, SpatialContext ctx){if (distErrPct < 0 || distErrPct > 0.5){throw new ArgumentException(\"distErrPct \" + distErrPct + \" must be between [0 to 0.5]\", \"distErrPct\");}if (distErrPct == 0 || shape is IPoint){return 0;}IRectangle bbox = shape.BoundingBox;IPoint ctr = bbox.Center;double y = (ctr.Y >= 0 ? bbox.MaxY : bbox.MinY);double diagonalDist = ctx.DistCalc.Distance(ctr, bbox.MaxX, y);return diagonalDist * distErrPct;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public static double CalcDistanceFromErrPct(IShape shape, double distErrPct, SpatialContext ctx){if (distErrPct < 0 || distErrPct > 0.5){throw new ArgumentException(\"distErrPct \" + distErrPct + \" must be between [0 to 0.5]\", \"distErrPct\");}if (distErrPct == 0 || shape is IPoint){return 0;}IRectangle bbox = shape.BoundingBox;IPoint ctr = bbox.Center;double y = (ctr.Y >= 0 ? bbox.MaxY : bbox.MinY);double diagonalDist = ctx.DistCalc.Distance(ctr, bbox.MaxX, y);return diagonalDist * distErrPct;}",
    "output": "public static double calcDistanceFromErrPct(Shape shape, double distErrPct, SpatialContext ctx) {if (distErrPct < 0 || distErrPct > 0.5) {throw new IllegalArgumentException(\"distErrPct \" + distErrPct + \" must be between [0 to 0.5]\");}if (distErrPct == 0 || shape instanceof Point) {return 0;}Rectangle bbox = shape.getBoundingBox();Point ctr = bbox.getCenter();double y = (ctr.getY() >= 0 ? bbox.getMaxY() : bbox.getMinY());double diagonalDist = ctx.getDistCalc().distance(ctr, bbox.getMaxX(), y);return diagonalDist * distErrPct;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public int codePointAt(int index) {if (index < 0 || index >= count) {throw indexAndLength(index);}return Character.codePointAt(value, index, count);}",
    "output": "public virtual int codePointAt(int index){if (index < 0 || index >= count){throw indexAndLength(index);}return Sharpen.CharHelper.CodePointAt(value, index, count);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual int codePointAt(int index){if (index < 0 || index >= count){throw indexAndLength(index);}return Sharpen.CharHelper.CodePointAt(value, index, count);}",
    "output": "public int codePointAt(int index) {if (index < 0 || index >= count) {throw indexAndLength(index);}return Character.codePointAt(value, index, count);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void setPasswordVerifier(int passwordVerifier) {this.passwordVerifier = passwordVerifier;}",
    "output": "public void SetPasswordVerifier(int passwordVerifier){this.passwordVerifier = passwordVerifier;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public void SetPasswordVerifier(int passwordVerifier){this.passwordVerifier = passwordVerifier;}",
    "output": "public void setPasswordVerifier(int passwordVerifier) {this.passwordVerifier = passwordVerifier;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ListVaultsRequest(String accountId) {setAccountId(accountId);}",
    "output": "public ListVaultsRequest(string accountId){_accountId = accountId;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public ListVaultsRequest(string accountId){_accountId = accountId;}",
    "output": "public ListVaultsRequest(String accountId) {setAccountId(accountId);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public SquashMessageFormatter() {dateFormatter = new GitDateFormatter(Format.DEFAULT);}",
    "output": "public SquashMessageFormatter(){dateFormatter = new GitDateFormatter(GitDateFormatter.Format.DEFAULT);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public SquashMessageFormatter(){dateFormatter = new GitDateFormatter(GitDateFormatter.Format.DEFAULT);}",
    "output": "public SquashMessageFormatter() {dateFormatter = new GitDateFormatter(Format.DEFAULT);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public GetVideoCoverRequest() {super(\"CloudPhoto\", \"2017-07-11\", \"GetVideoCover\", \"cloudphoto\");setProtocol(ProtocolType.HTTPS);}",
    "output": "public GetVideoCoverRequest(): base(\"CloudPhoto\", \"2017-07-11\", \"GetVideoCover\", \"cloudphoto\", \"openAPI\"){Protocol = ProtocolType.HTTPS;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public GetVideoCoverRequest(): base(\"CloudPhoto\", \"2017-07-11\", \"GetVideoCover\", \"cloudphoto\", \"openAPI\"){Protocol = ProtocolType.HTTPS;}",
    "output": "public GetVideoCoverRequest() {super(\"CloudPhoto\", \"2017-07-11\", \"GetVideoCover\", \"cloudphoto\");setProtocol(ProtocolType.HTTPS);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public int lastIndexOf(Object object) {int pos = size;Link<E> link = voidLink.previous;if (object != null) {while (link != voidLink) {pos--;if (object.equals(link.data)) {return pos;}link = link.previous;}} else {while (link != voidLink) {pos--;if (link.data == null) {return pos;}link = link.previous;}}return -1;}",
    "output": "public override int lastIndexOf(object @object){int pos = _size;java.util.LinkedList.Link<E> link = voidLink.previous;if (@object != null){while (link != voidLink){pos--;if (@object.Equals(link.data)){return pos;}link = link.previous;}}else{while (link != voidLink){pos--;if ((object)link.data == null){return pos;}link = link.previous;}}return -1;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override int lastIndexOf(object @object){int pos = _size;java.util.LinkedList.Link<E> link = voidLink.previous;if (@object != null){while (link != voidLink){pos--;if (@object.Equals(link.data)){return pos;}link = link.previous;}}else{while (link != voidLink){pos--;if ((object)link.data == null){return pos;}link = link.previous;}}return -1;}",
    "output": "public int lastIndexOf(Object object) {int pos = size;Link<E> link = voidLink.previous;if (object != null) {while (link != voidLink) {pos--;if (object.equals(link.data)) {return pos;}link = link.previous;}} else {while (link != voidLink) {pos--;if (link.data == null) {return pos;}link = link.previous;}}return -1;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DescribeSpotFleetRequestsResult describeSpotFleetRequests(DescribeSpotFleetRequestsRequest request) {request = beforeClientExecution(request);return executeDescribeSpotFleetRequests(request);}",
    "output": "public virtual DescribeSpotFleetRequestsResponse DescribeSpotFleetRequests(DescribeSpotFleetRequestsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeSpotFleetRequestsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeSpotFleetRequestsResponseUnmarshaller.Instance;return Invoke<DescribeSpotFleetRequestsResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DescribeSpotFleetRequestsResponse DescribeSpotFleetRequests(DescribeSpotFleetRequestsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeSpotFleetRequestsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeSpotFleetRequestsResponseUnmarshaller.Instance;return Invoke<DescribeSpotFleetRequestsResponse>(request, options);}",
    "output": "public DescribeSpotFleetRequestsResult describeSpotFleetRequests(DescribeSpotFleetRequestsRequest request) {request = beforeClientExecution(request);return executeDescribeSpotFleetRequests(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public IndexFacesResult indexFaces(IndexFacesRequest request) {request = beforeClientExecution(request);return executeIndexFaces(request);}",
    "output": "public virtual IndexFacesResponse IndexFaces(IndexFacesRequest request){var options = new InvokeOptions();options.RequestMarshaller = IndexFacesRequestMarshaller.Instance;options.ResponseUnmarshaller = IndexFacesResponseUnmarshaller.Instance;return Invoke<IndexFacesResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual IndexFacesResponse IndexFaces(IndexFacesRequest request){var options = new InvokeOptions();options.RequestMarshaller = IndexFacesRequestMarshaller.Instance;options.ResponseUnmarshaller = IndexFacesResponseUnmarshaller.Instance;return Invoke<IndexFacesResponse>(request, options);}",
    "output": "public IndexFacesResult indexFaces(IndexFacesRequest request) {request = beforeClientExecution(request);return executeIndexFaces(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public RuleBasedBreakIterator getBreakIterator(int script) {switch(script) {case UScript.JAPANESE: return (RuleBasedBreakIterator)cjkBreakIterator.clone();case UScript.MYANMAR:if (myanmarAsWords) {return (RuleBasedBreakIterator)defaultBreakIterator.clone();} else {return (RuleBasedBreakIterator)myanmarSyllableIterator.clone();}default: return (RuleBasedBreakIterator)defaultBreakIterator.clone();}}",
    "output": "public override BreakIterator GetBreakIterator(int script){switch (script){case UScript.Japanese: return (BreakIterator)cjkBreakIterator.Clone();case UScript.Myanmar:if (myanmarAsWords){return (BreakIterator)defaultBreakIterator.Clone();}else{return (BreakIterator)myanmarSyllableIterator.Clone();}default: return (BreakIterator)defaultBreakIterator.Clone();}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override BreakIterator GetBreakIterator(int script){switch (script){case UScript.Japanese: return (BreakIterator)cjkBreakIterator.Clone();case UScript.Myanmar:if (myanmarAsWords){return (BreakIterator)defaultBreakIterator.Clone();}else{return (BreakIterator)myanmarSyllableIterator.Clone();}default: return (BreakIterator)defaultBreakIterator.Clone();}}",
    "output": "public RuleBasedBreakIterator getBreakIterator(int script) {switch(script) {case UScript.JAPANESE: return (RuleBasedBreakIterator)cjkBreakIterator.clone();case UScript.MYANMAR:if (myanmarAsWords) {return (RuleBasedBreakIterator)defaultBreakIterator.clone();} else {return (RuleBasedBreakIterator)myanmarSyllableIterator.clone();}default: return (RuleBasedBreakIterator)defaultBreakIterator.clone();}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String toString(){StringBuilder b = new StringBuilder();b.append(\"[DCONREF]\\n\");b.append(\"    .ref\\n\");b.append(\"        .firstrow   = \").append(firstRow).append(\"\\n\");b.append(\"        .lastrow    = \").append(lastRow).append(\"\\n\");b.append(\"        .firstcol   = \").append(firstCol).append(\"\\n\");b.append(\"        .lastcol    = \").append(lastCol).append(\"\\n\");b.append(\"    .cch            = \").append(charCount).append(\"\\n\");b.append(\"    .stFile\\n\");b.append(\"        .h          = \").append(charType).append(\"\\n\");b.append(\"        .rgb        = \").append(getReadablePath()).append(\"\\n\");b.append(\"[/DCONREF]\\n\");return b.toString();}",
    "output": "public override String ToString(){StringBuilder b = new StringBuilder();b.Append(\"[DCONREF]\\n\");b.Append(\"    .ref\\n\");b.Append(\"        .firstrow   = \").Append(firstRow).Append(\"\\n\");b.Append(\"        .lastrow    = \").Append(lastRow).Append(\"\\n\");b.Append(\"        .firstcol   = \").Append(firstCol).Append(\"\\n\");b.Append(\"        .lastcol    = \").Append(lastCol).Append(\"\\n\");b.Append(\"    .cch            = \").Append(charCount).Append(\"\\n\");b.Append(\"    .stFile\\n\");b.Append(\"        .h          = \").Append(charType).Append(\"\\n\");b.Append(\"        .rgb        = \").Append(ReadablePath).Append(\"\\n\");b.Append(\"[/DCONREF]\\n\");return b.ToString();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override String ToString(){StringBuilder b = new StringBuilder();b.Append(\"[DCONREF]\\n\");b.Append(\"    .ref\\n\");b.Append(\"        .firstrow   = \").Append(firstRow).Append(\"\\n\");b.Append(\"        .lastrow    = \").Append(lastRow).Append(\"\\n\");b.Append(\"        .firstcol   = \").Append(firstCol).Append(\"\\n\");b.Append(\"        .lastcol    = \").Append(lastCol).Append(\"\\n\");b.Append(\"    .cch            = \").Append(charCount).Append(\"\\n\");b.Append(\"    .stFile\\n\");b.Append(\"        .h          = \").Append(charType).Append(\"\\n\");b.Append(\"        .rgb        = \").Append(ReadablePath).Append(\"\\n\");b.Append(\"[/DCONREF]\\n\");return b.ToString();}",
    "output": "public String toString(){StringBuilder b = new StringBuilder();b.append(\"[DCONREF]\\n\");b.append(\"    .ref\\n\");b.append(\"        .firstrow   = \").append(firstRow).append(\"\\n\");b.append(\"        .lastrow    = \").append(lastRow).append(\"\\n\");b.append(\"        .firstcol   = \").append(firstCol).append(\"\\n\");b.append(\"        .lastcol    = \").append(lastCol).append(\"\\n\");b.append(\"    .cch            = \").append(charCount).append(\"\\n\");b.append(\"    .stFile\\n\");b.append(\"        .h          = \").append(charType).append(\"\\n\");b.append(\"        .rgb        = \").append(getReadablePath()).append(\"\\n\");b.append(\"[/DCONREF]\\n\");return b.toString();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public int getPackedGitOpenFiles() {return packedGitOpenFiles;}",
    "output": "public virtual int GetPackedGitOpenFiles(){return packedGitOpenFiles;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual int GetPackedGitOpenFiles(){return packedGitOpenFiles;}",
    "output": "public int getPackedGitOpenFiles() {return packedGitOpenFiles;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String toString() {StringBuilder buffer = new StringBuilder();buffer.append(\"[FEATURE HEADER]\\n\");buffer.append(\"[/FEATURE HEADER]\\n\");return buffer.toString();}",
    "output": "public override String ToString(){StringBuilder buffer = new StringBuilder();buffer.Append(\"[FEATURE HEADER]\\n\");buffer.Append(\"[/FEATURE HEADER]\\n\");return buffer.ToString();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override String ToString(){StringBuilder buffer = new StringBuilder();buffer.Append(\"[FEATURE HEADER]\\n\");buffer.Append(\"[/FEATURE HEADER]\\n\");return buffer.ToString();}",
    "output": "public String toString() {StringBuilder buffer = new StringBuilder();buffer.append(\"[FEATURE HEADER]\\n\");buffer.append(\"[/FEATURE HEADER]\\n\");return buffer.toString();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public static byte[] getToUnicodeLE(String string) {return string.getBytes(UTF16LE);}",
    "output": "public static byte[] GetToUnicodeLE(String string1){return UTF16LE.GetBytes(string1);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public static byte[] GetToUnicodeLE(String string1){return UTF16LE.GetBytes(string1);}",
    "output": "public static byte[] getToUnicodeLE(String string) {return string.getBytes(UTF16LE);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public final List<String> getFooterLines(String keyName) {return getFooterLines(new FooterKey(keyName));}",
    "output": "public IList<string> GetFooterLines(string keyName){return GetFooterLines(new FooterKey(keyName));}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public IList<string> GetFooterLines(string keyName){return GetFooterLines(new FooterKey(keyName));}",
    "output": "public final List<String> getFooterLines(String keyName) {return getFooterLines(new FooterKey(keyName));}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void refresh() {super.refresh();clearReferences();}",
    "output": "public override void Refresh(){base.Refresh();Rescan();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override void Refresh(){base.Refresh();Rescan();}",
    "output": "public void refresh() {super.refresh();clearReferences();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public float get(int index) {checkIndex(index);return byteBuffer.getFloat(index * SizeOf.FLOAT);}",
    "output": "public override float get(int index){checkIndex(index);return byteBuffer.getFloat(index * libcore.io.SizeOf.FLOAT);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override float get(int index){checkIndex(index);return byteBuffer.getFloat(index * libcore.io.SizeOf.FLOAT);}",
    "output": "public float get(int index) {checkIndex(index);return byteBuffer.getFloat(index * SizeOf.FLOAT);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DeleteDetectorResult deleteDetector(DeleteDetectorRequest request) {request = beforeClientExecution(request);return executeDeleteDetector(request);}",
    "output": "public virtual DeleteDetectorResponse DeleteDetector(DeleteDetectorRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteDetectorRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteDetectorResponseUnmarshaller.Instance;return Invoke<DeleteDetectorResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DeleteDetectorResponse DeleteDetector(DeleteDetectorRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteDetectorRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteDetectorResponseUnmarshaller.Instance;return Invoke<DeleteDetectorResponse>(request, options);}",
    "output": "public DeleteDetectorResult deleteDetector(DeleteDetectorRequest request) {request = beforeClientExecution(request);return executeDeleteDetector(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public int[] grow() {assert bytesStart != null;return bytesStart = ArrayUtil.grow(bytesStart, bytesStart.length + 1);}",
    "output": "public override int[] Grow(){Debug.Assert(bytesStart != null);return bytesStart = ArrayUtil.Grow(bytesStart, bytesStart.Length + 1);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override int[] Grow(){Debug.Assert(bytesStart != null);return bytesStart = ArrayUtil.Grow(bytesStart, bytesStart.Length + 1);}",
    "output": "public int[] grow() {assert bytesStart != null;return bytesStart = ArrayUtil.grow(bytesStart, bytesStart.length + 1);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ListExclusionsResult listExclusions(ListExclusionsRequest request) {request = beforeClientExecution(request);return executeListExclusions(request);}",
    "output": "public virtual ListExclusionsResponse ListExclusions(ListExclusionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListExclusionsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListExclusionsResponseUnmarshaller.Instance;return Invoke<ListExclusionsResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual ListExclusionsResponse ListExclusions(ListExclusionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListExclusionsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListExclusionsResponseUnmarshaller.Instance;return Invoke<ListExclusionsResponse>(request, options);}",
    "output": "public ListExclusionsResult listExclusions(ListExclusionsRequest request) {request = beforeClientExecution(request);return executeListExclusions(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public static SpatialStrategy getSpatialStrategy(int roundNumber) {SpatialStrategy result = spatialStrategyCache.get(roundNumber);if (result == null) {throw new IllegalStateException(\"Strategy should have been init'ed by SpatialDocMaker by now\");}return result;}",
    "output": "public static SpatialStrategy GetSpatialStrategy(int roundNumber){SpatialStrategy result;if (!spatialStrategyCache.TryGetValue(roundNumber, out result) || result == null){throw new InvalidOperationException(\"Strategy should have been init'ed by SpatialDocMaker by now\");}return result;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public static SpatialStrategy GetSpatialStrategy(int roundNumber){SpatialStrategy result;if (!spatialStrategyCache.TryGetValue(roundNumber, out result) || result == null){throw new InvalidOperationException(\"Strategy should have been init'ed by SpatialDocMaker by now\");}return result;}",
    "output": "public static SpatialStrategy getSpatialStrategy(int roundNumber) {SpatialStrategy result = spatialStrategyCache.get(roundNumber);if (result == null) {throw new IllegalStateException(\"Strategy should have been init'ed by SpatialDocMaker by now\");}return result;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DBCluster restoreDBClusterToPointInTime(RestoreDBClusterToPointInTimeRequest request) {request = beforeClientExecution(request);return executeRestoreDBClusterToPointInTime(request);}",
    "output": "public virtual RestoreDBClusterToPointInTimeResponse RestoreDBClusterToPointInTime(RestoreDBClusterToPointInTimeRequest request){var options = new InvokeOptions();options.RequestMarshaller = RestoreDBClusterToPointInTimeRequestMarshaller.Instance;options.ResponseUnmarshaller = RestoreDBClusterToPointInTimeResponseUnmarshaller.Instance;return Invoke<RestoreDBClusterToPointInTimeResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual RestoreDBClusterToPointInTimeResponse RestoreDBClusterToPointInTime(RestoreDBClusterToPointInTimeRequest request){var options = new InvokeOptions();options.RequestMarshaller = RestoreDBClusterToPointInTimeRequestMarshaller.Instance;options.ResponseUnmarshaller = RestoreDBClusterToPointInTimeResponseUnmarshaller.Instance;return Invoke<RestoreDBClusterToPointInTimeResponse>(request, options);}",
    "output": "public DBCluster restoreDBClusterToPointInTime(RestoreDBClusterToPointInTimeRequest request) {request = beforeClientExecution(request);return executeRestoreDBClusterToPointInTime(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void serialize(LittleEndianOutput out) {out.writeShort(field_1_categoryDataType);out.writeShort(field_2_valuesDataType);out.writeShort(field_3_numCategories);out.writeShort(field_4_numValues);out.writeShort(field_5_bubbleSeriesType);out.writeShort(field_6_numBubbleValues);}",
    "output": "public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(field_1_categoryDataType);out1.WriteShort(field_2_valuesDataType);out1.WriteShort(field_3_numCategories);out1.WriteShort(field_4_numValues);out1.WriteShort(field_5_bubbleSeriesType);out1.WriteShort(field_6_numBubbleValues);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(field_1_categoryDataType);out1.WriteShort(field_2_valuesDataType);out1.WriteShort(field_3_numCategories);out1.WriteShort(field_4_numValues);out1.WriteShort(field_5_bubbleSeriesType);out1.WriteShort(field_6_numBubbleValues);}",
    "output": "public void serialize(LittleEndianOutput out) {out.writeShort(field_1_categoryDataType);out.writeShort(field_2_valuesDataType);out.writeShort(field_3_numCategories);out.writeShort(field_4_numValues);out.writeShort(field_5_bubbleSeriesType);out.writeShort(field_6_numBubbleValues);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public PostAgentProfileResult postAgentProfile(PostAgentProfileRequest request) {request = beforeClientExecution(request);return executePostAgentProfile(request);}",
    "output": "public virtual PostAgentProfileResponse PostAgentProfile(PostAgentProfileRequest request){var options = new InvokeOptions();options.RequestMarshaller = PostAgentProfileRequestMarshaller.Instance;options.ResponseUnmarshaller = PostAgentProfileResponseUnmarshaller.Instance;return Invoke<PostAgentProfileResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual PostAgentProfileResponse PostAgentProfile(PostAgentProfileRequest request){var options = new InvokeOptions();options.RequestMarshaller = PostAgentProfileRequestMarshaller.Instance;options.ResponseUnmarshaller = PostAgentProfileResponseUnmarshaller.Instance;return Invoke<PostAgentProfileResponse>(request, options);}",
    "output": "public PostAgentProfileResult postAgentProfile(PostAgentProfileRequest request) {request = beforeClientExecution(request);return executePostAgentProfile(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ParseTreePattern compileParseTreePattern(String pattern, int patternRuleIndex) {if ( getTokenStream()!=null ) {TokenSource tokenSource = getTokenStream().getTokenSource();if ( tokenSource instanceof Lexer ) {Lexer lexer = (Lexer)tokenSource;return compileParseTreePattern(pattern, patternRuleIndex, lexer);}}throw new UnsupportedOperationException(\"Parser can't discover a lexer to use\");}",
    "output": "public virtual ParseTreePattern CompileParseTreePattern(string pattern, int patternRuleIndex){if (((ITokenStream)InputStream) != null){ITokenSource tokenSource = ((ITokenStream)InputStream).TokenSource;if (tokenSource is Lexer){Lexer lexer = (Lexer)tokenSource;return CompileParseTreePattern(pattern, patternRuleIndex, lexer);}}throw new NotSupportedException(\"Parser can't discover a lexer to use\");}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual ParseTreePattern CompileParseTreePattern(string pattern, int patternRuleIndex){if (((ITokenStream)InputStream) != null){ITokenSource tokenSource = ((ITokenStream)InputStream).TokenSource;if (tokenSource is Lexer){Lexer lexer = (Lexer)tokenSource;return CompileParseTreePattern(pattern, patternRuleIndex, lexer);}}throw new NotSupportedException(\"Parser can't discover a lexer to use\");}",
    "output": "public ParseTreePattern compileParseTreePattern(String pattern, int patternRuleIndex) {if ( getTokenStream()!=null ) {TokenSource tokenSource = getTokenStream().getTokenSource();if ( tokenSource instanceof Lexer ) {Lexer lexer = (Lexer)tokenSource;return compileParseTreePattern(pattern, patternRuleIndex, lexer);}}throw new UnsupportedOperationException(\"Parser can't discover a lexer to use\");}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public BacktrackDBClusterResult backtrackDBCluster(BacktrackDBClusterRequest request) {request = beforeClientExecution(request);return executeBacktrackDBCluster(request);}",
    "output": "public virtual BacktrackDBClusterResponse BacktrackDBCluster(BacktrackDBClusterRequest request){var options = new InvokeOptions();options.RequestMarshaller = BacktrackDBClusterRequestMarshaller.Instance;options.ResponseUnmarshaller = BacktrackDBClusterResponseUnmarshaller.Instance;return Invoke<BacktrackDBClusterResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual BacktrackDBClusterResponse BacktrackDBCluster(BacktrackDBClusterRequest request){var options = new InvokeOptions();options.RequestMarshaller = BacktrackDBClusterRequestMarshaller.Instance;options.ResponseUnmarshaller = BacktrackDBClusterResponseUnmarshaller.Instance;return Invoke<BacktrackDBClusterResponse>(request, options);}",
    "output": "public BacktrackDBClusterResult backtrackDBCluster(BacktrackDBClusterRequest request) {request = beforeClientExecution(request);return executeBacktrackDBCluster(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String getName() {return strategyName;}",
    "output": "public override string GetName(){return strategyName;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override string GetName(){return strategyName;}",
    "output": "public String getName() {return strategyName;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void copyTo(byte[] b, int o) {formatHexByte(b, o + 0, w1);formatHexByte(b, o + 8, w2);formatHexByte(b, o + 16, w3);formatHexByte(b, o + 24, w4);formatHexByte(b, o + 32, w5);}",
    "output": "public virtual void CopyTo(byte[] b, int o){FormatHexByte(b, o + 0, w1);FormatHexByte(b, o + 8, w2);FormatHexByte(b, o + 16, w3);FormatHexByte(b, o + 24, w4);FormatHexByte(b, o + 32, w5);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual void CopyTo(byte[] b, int o){FormatHexByte(b, o + 0, w1);FormatHexByte(b, o + 8, w2);FormatHexByte(b, o + 16, w3);FormatHexByte(b, o + 24, w4);FormatHexByte(b, o + 32, w5);}",
    "output": "public void copyTo(byte[] b, int o) {formatHexByte(b, o + 0, w1);formatHexByte(b, o + 8, w2);formatHexByte(b, o + 16, w3);formatHexByte(b, o + 24, w4);formatHexByte(b, o + 32, w5);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public static final IntList lineMap(byte[] buf, int ptr, int end) {IntList map = new IntList((end - ptr) / 36);map.fillTo(1, Integer.MIN_VALUE);for (; ptr < end; ptr = nextLF(buf, ptr)) {map.add(ptr);}map.add(end);return map;}",
    "output": "public static IntList LineMap(byte[] buf, int ptr, int end){IntList map = new IntList((end - ptr) / 36);map.FillTo(1, int.MinValue);for (; ptr < end; ptr = NextLF(buf, ptr)){map.Add(ptr);}map.Add(end);return map;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public static IntList LineMap(byte[] buf, int ptr, int end){IntList map = new IntList((end - ptr) / 36);map.FillTo(1, int.MinValue);for (; ptr < end; ptr = NextLF(buf, ptr)){map.Add(ptr);}map.Add(end);return map;}",
    "output": "public static final IntList lineMap(byte[] buf, int ptr, int end) {IntList map = new IntList((end - ptr) / 36);map.fillTo(1, Integer.MIN_VALUE);for (; ptr < end; ptr = nextLF(buf, ptr)) {map.add(ptr);}map.add(end);return map;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public Set<ObjectId> getAdditionalHaves() {return Collections.emptySet();}",
    "output": "public virtual ICollection<ObjectId> GetAdditionalHaves(){return Sharpen.Collections.EmptySet<ObjectId>();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual ICollection<ObjectId> GetAdditionalHaves(){return Sharpen.Collections.EmptySet<ObjectId>();}",
    "output": "public Set<ObjectId> getAdditionalHaves() {return Collections.emptySet();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public synchronized long ramBytesUsed() {long sizeInBytes = BASE_RAM_BYTES_USED + fields.size() * 2 * RamUsageEstimator.NUM_BYTES_OBJECT_REF;for(SimpleTextTerms simpleTextTerms : termsCache.values()) {sizeInBytes += (simpleTextTerms!=null) ? simpleTextTerms.ramBytesUsed() : 0;}return sizeInBytes;}",
    "output": "public override long RamBytesUsed(){return _termsCache.Values.Sum(simpleTextTerms => (simpleTextTerms != null) ? simpleTextTerms.RamBytesUsed() : 0);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override long RamBytesUsed(){return _termsCache.Values.Sum(simpleTextTerms => (simpleTextTerms != null) ? simpleTextTerms.RamBytesUsed() : 0);}",
    "output": "public synchronized long ramBytesUsed() {long sizeInBytes = BASE_RAM_BYTES_USED + fields.size() * 2 * RamUsageEstimator.NUM_BYTES_OBJECT_REF;for(SimpleTextTerms simpleTextTerms : termsCache.values()) {sizeInBytes += (simpleTextTerms!=null) ? simpleTextTerms.ramBytesUsed() : 0;}return sizeInBytes;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String toXml(String tab) {StringBuilder builder = new StringBuilder();builder.append(tab).append(\"<\").append(getRecordName()).append(\">\\n\");for (EscherRecord escherRecord : getEscherRecords()) {builder.append(escherRecord.toXml(tab + \"\\t\"));}builder.append(tab).append(\"</\").append(getRecordName()).append(\">\\n\");return builder.toString();}",
    "output": "public String ToXml(String tab){StringBuilder builder = new StringBuilder();builder.Append(tab).Append(\"<\").Append(RecordName).Append(\">\\n\");for (IEnumerator iterator = EscherRecords.GetEnumerator(); iterator.MoveNext(); ){EscherRecord escherRecord = (EscherRecord)iterator.Current;builder.Append(escherRecord.ToXml(tab + \"\\t\"));}builder.Append(tab).Append(\"</\").Append(RecordName).Append(\">\\n\");return builder.ToString();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public String ToXml(String tab){StringBuilder builder = new StringBuilder();builder.Append(tab).Append(\"<\").Append(RecordName).Append(\">\\n\");for (IEnumerator iterator = EscherRecords.GetEnumerator(); iterator.MoveNext(); ){EscherRecord escherRecord = (EscherRecord)iterator.Current;builder.Append(escherRecord.ToXml(tab + \"\\t\"));}builder.Append(tab).Append(\"</\").Append(RecordName).Append(\">\\n\");return builder.ToString();}",
    "output": "public String toXml(String tab) {StringBuilder builder = new StringBuilder();builder.append(tab).append(\"<\").append(getRecordName()).append(\">\\n\");for (EscherRecord escherRecord : getEscherRecords()) {builder.append(escherRecord.toXml(tab + \"\\t\"));}builder.append(tab).append(\"</\").append(getRecordName()).append(\">\\n\");return builder.toString();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public TokenStream create(TokenStream input) {return new GalicianMinimalStemFilter(input);}",
    "output": "public override TokenStream Create(TokenStream input){return new GalicianMinimalStemFilter(input);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override TokenStream Create(TokenStream input){return new GalicianMinimalStemFilter(input);}",
    "output": "public TokenStream create(TokenStream input) {return new GalicianMinimalStemFilter(input);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String toString() {StringBuilder r = new StringBuilder();r.append(\"Commit\");r.append(\"={\\n\");r.append(\"tree \");r.append(treeId != null ? treeId.name() : \"NOT_SET\");r.append(\"\\n\");for (ObjectId p : parentIds) {r.append(\"parent \");r.append(p.name());r.append(\"\\n\");}r.append(\"author \");r.append(author != null ? author.toString() : \"NOT_SET\");r.append(\"\\n\");r.append(\"committer \");r.append(committer != null ? committer.toString() : \"NOT_SET\");r.append(\"\\n\");r.append(\"gpgSignature \");r.append(gpgSignature != null ? gpgSignature.toString() : \"NOT_SET\");r.append(\"\\n\");if (encoding != null && !References.isSameObject(encoding, UTF_8)) {r.append(\"encoding \");r.append(encoding.name());r.append(\"\\n\");}r.append(\"\\n\");r.append(message != null ? message : \"\");r.append(\"}\");return r.toString();}",
    "output": "public override string ToString(){StringBuilder r = new StringBuilder();r.Append(\"Commit\");r.Append(\"={\\n\");r.Append(\"tree \");r.Append(treeId != null ? treeId.Name : \"NOT_SET\");r.Append(\"\\n\");foreach (ObjectId p in parentIds){r.Append(\"parent \");r.Append(p.Name);r.Append(\"\\n\");}r.Append(\"author \");r.Append(author != null ? author.ToString() : \"NOT_SET\");r.Append(\"\\n\");r.Append(\"committer \");r.Append(committer != null ? committer.ToString() : \"NOT_SET\");r.Append(\"\\n\");if (encoding != null && encoding != Constants.CHARSET){r.Append(\"encoding \");r.Append(encoding.Name());r.Append(\"\\n\");}r.Append(\"\\n\");r.Append(message != null ? message : string.Empty);r.Append(\"}\");return r.ToString();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override string ToString(){StringBuilder r = new StringBuilder();r.Append(\"Commit\");r.Append(\"={\\n\");r.Append(\"tree \");r.Append(treeId != null ? treeId.Name : \"NOT_SET\");r.Append(\"\\n\");foreach (ObjectId p in parentIds){r.Append(\"parent \");r.Append(p.Name);r.Append(\"\\n\");}r.Append(\"author \");r.Append(author != null ? author.ToString() : \"NOT_SET\");r.Append(\"\\n\");r.Append(\"committer \");r.Append(committer != null ? committer.ToString() : \"NOT_SET\");r.Append(\"\\n\");if (encoding != null && encoding != Constants.CHARSET){r.Append(\"encoding \");r.Append(encoding.Name());r.Append(\"\\n\");}r.Append(\"\\n\");r.Append(message != null ? message : string.Empty);r.Append(\"}\");return r.ToString();}",
    "output": "public String toString() {StringBuilder r = new StringBuilder();r.append(\"Commit\");r.append(\"={\\n\");r.append(\"tree \");r.append(treeId != null ? treeId.name() : \"NOT_SET\");r.append(\"\\n\");for (ObjectId p : parentIds) {r.append(\"parent \");r.append(p.name());r.append(\"\\n\");}r.append(\"author \");r.append(author != null ? author.toString() : \"NOT_SET\");r.append(\"\\n\");r.append(\"committer \");r.append(committer != null ? committer.toString() : \"NOT_SET\");r.append(\"\\n\");r.append(\"gpgSignature \");r.append(gpgSignature != null ? gpgSignature.toString() : \"NOT_SET\");r.append(\"\\n\");if (encoding != null && !References.isSameObject(encoding, UTF_8)) {r.append(\"encoding \");r.append(encoding.name());r.append(\"\\n\");}r.append(\"\\n\");r.append(message != null ? message : \"\");r.append(\"}\");return r.toString();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public IndicNormalizationFilterFactory(Map<String,String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException(\"Unknown parameters: \" + args);}}",
    "output": "public IndicNormalizationFilterFactory(IDictionary<string, string> args) : base(args){if (args.Count > 0){throw new System.ArgumentException(\"Unknown parameters: \" + args);}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public IndicNormalizationFilterFactory(IDictionary<string, string> args) : base(args){if (args.Count > 0){throw new System.ArgumentException(\"Unknown parameters: \" + args);}}",
    "output": "public IndicNormalizationFilterFactory(Map<String,String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException(\"Unknown parameters: \" + args);}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public OptionGroup createOptionGroup(CreateOptionGroupRequest request) {request = beforeClientExecution(request);return executeCreateOptionGroup(request);}",
    "output": "public virtual CreateOptionGroupResponse CreateOptionGroup(CreateOptionGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateOptionGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateOptionGroupResponseUnmarshaller.Instance;return Invoke<CreateOptionGroupResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual CreateOptionGroupResponse CreateOptionGroup(CreateOptionGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateOptionGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateOptionGroupResponseUnmarshaller.Instance;return Invoke<CreateOptionGroupResponse>(request, options);}",
    "output": "public OptionGroup createOptionGroup(CreateOptionGroupRequest request) {request = beforeClientExecution(request);return executeCreateOptionGroup(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public AssociateMemberAccountResult associateMemberAccount(AssociateMemberAccountRequest request) {request = beforeClientExecution(request);return executeAssociateMemberAccount(request);}",
    "output": "public virtual AssociateMemberAccountResponse AssociateMemberAccount(AssociateMemberAccountRequest request){var options = new InvokeOptions();options.RequestMarshaller = AssociateMemberAccountRequestMarshaller.Instance;options.ResponseUnmarshaller = AssociateMemberAccountResponseUnmarshaller.Instance;return Invoke<AssociateMemberAccountResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual AssociateMemberAccountResponse AssociateMemberAccount(AssociateMemberAccountRequest request){var options = new InvokeOptions();options.RequestMarshaller = AssociateMemberAccountRequestMarshaller.Instance;options.ResponseUnmarshaller = AssociateMemberAccountResponseUnmarshaller.Instance;return Invoke<AssociateMemberAccountResponse>(request, options);}",
    "output": "public AssociateMemberAccountResult associateMemberAccount(AssociateMemberAccountRequest request) {request = beforeClientExecution(request);return executeAssociateMemberAccount(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void run() {doRefreshProgress(mId, mProgress, mFromUser, true);mRefreshProgressRunnable = this;}",
    "output": "public virtual void run(){this._enclosing.doRefreshProgress(this.mId, this.mProgress, this.mFromUser, true);this._enclosing.mRefreshProgressRunnable = this;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual void run(){this._enclosing.doRefreshProgress(this.mId, this.mProgress, this.mFromUser, true);this._enclosing.mRefreshProgressRunnable = this;}",
    "output": "public void run() {doRefreshProgress(mId, mProgress, mFromUser, true);mRefreshProgressRunnable = this;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public SetTerminationProtectionResult setTerminationProtection(SetTerminationProtectionRequest request) {request = beforeClientExecution(request);return executeSetTerminationProtection(request);}",
    "output": "public virtual SetTerminationProtectionResponse SetTerminationProtection(SetTerminationProtectionRequest request){var options = new InvokeOptions();options.RequestMarshaller = SetTerminationProtectionRequestMarshaller.Instance;options.ResponseUnmarshaller = SetTerminationProtectionResponseUnmarshaller.Instance;return Invoke<SetTerminationProtectionResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual SetTerminationProtectionResponse SetTerminationProtection(SetTerminationProtectionRequest request){var options = new InvokeOptions();options.RequestMarshaller = SetTerminationProtectionRequestMarshaller.Instance;options.ResponseUnmarshaller = SetTerminationProtectionResponseUnmarshaller.Instance;return Invoke<SetTerminationProtectionResponse>(request, options);}",
    "output": "public SetTerminationProtectionResult setTerminationProtection(SetTerminationProtectionRequest request) {request = beforeClientExecution(request);return executeSetTerminationProtection(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String getErrorHeader(RecognitionException e) {int line = e.getOffendingToken().getLine();int charPositionInLine = e.getOffendingToken().getCharPositionInLine();return \"line \"+line+\":\"+charPositionInLine;}",
    "output": "public virtual string GetErrorHeader(RecognitionException e){int line = e.OffendingToken.Line;int charPositionInLine = e.OffendingToken.Column;return \"line \" + line + \":\" + charPositionInLine;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual string GetErrorHeader(RecognitionException e){int line = e.OffendingToken.Line;int charPositionInLine = e.OffendingToken.Column;return \"line \" + line + \":\" + charPositionInLine;}",
    "output": "public String getErrorHeader(RecognitionException e) {int line = e.getOffendingToken().getLine();int charPositionInLine = e.getOffendingToken().getCharPositionInLine();return \"line \"+line+\":\"+charPositionInLine;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public CharBuffer asReadOnlyBuffer() {CharToByteBufferAdapter buf = new CharToByteBufferAdapter(byteBuffer.asReadOnlyBuffer());buf.limit = limit;buf.position = position;buf.mark = mark;buf.byteBuffer.order = byteBuffer.order;return buf;}",
    "output": "public override java.nio.CharBuffer asReadOnlyBuffer(){java.nio.CharToByteBufferAdapter buf = new java.nio.CharToByteBufferAdapter(byteBuffer.asReadOnlyBuffer());buf._limit = _limit;buf._position = _position;buf._mark = _mark;buf.byteBuffer._order = byteBuffer._order;return buf;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override java.nio.CharBuffer asReadOnlyBuffer(){java.nio.CharToByteBufferAdapter buf = new java.nio.CharToByteBufferAdapter(byteBuffer.asReadOnlyBuffer());buf._limit = _limit;buf._position = _position;buf._mark = _mark;buf.byteBuffer._order = byteBuffer._order;return buf;}",
    "output": "public CharBuffer asReadOnlyBuffer() {CharToByteBufferAdapter buf = new CharToByteBufferAdapter(byteBuffer.asReadOnlyBuffer());buf.limit = limit;buf.position = position;buf.mark = mark;buf.byteBuffer.order = byteBuffer.order;return buf;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public StopSentimentDetectionJobResult stopSentimentDetectionJob(StopSentimentDetectionJobRequest request) {request = beforeClientExecution(request);return executeStopSentimentDetectionJob(request);}",
    "output": "public virtual StopSentimentDetectionJobResponse StopSentimentDetectionJob(StopSentimentDetectionJobRequest request){var options = new InvokeOptions();options.RequestMarshaller = StopSentimentDetectionJobRequestMarshaller.Instance;options.ResponseUnmarshaller = StopSentimentDetectionJobResponseUnmarshaller.Instance;return Invoke<StopSentimentDetectionJobResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual StopSentimentDetectionJobResponse StopSentimentDetectionJob(StopSentimentDetectionJobRequest request){var options = new InvokeOptions();options.RequestMarshaller = StopSentimentDetectionJobRequestMarshaller.Instance;options.ResponseUnmarshaller = StopSentimentDetectionJobResponseUnmarshaller.Instance;return Invoke<StopSentimentDetectionJobResponse>(request, options);}",
    "output": "public StopSentimentDetectionJobResult stopSentimentDetectionJob(StopSentimentDetectionJobRequest request) {request = beforeClientExecution(request);return executeStopSentimentDetectionJob(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ObjectIdSubclassMap<ObjectId> getNewObjectIds() {if (newObjectIds != null)return newObjectIds;return new ObjectIdSubclassMap<>();}",
    "output": "public virtual ObjectIdSubclassMap<ObjectId> GetNewObjectIds(){if (newObjectIds != null){return newObjectIds;}return new ObjectIdSubclassMap<ObjectId>();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual ObjectIdSubclassMap<ObjectId> GetNewObjectIds(){if (newObjectIds != null){return newObjectIds;}return new ObjectIdSubclassMap<ObjectId>();}",
    "output": "public ObjectIdSubclassMap<ObjectId> getNewObjectIds() {if (newObjectIds != null)return newObjectIds;return new ObjectIdSubclassMap<>();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void clear() {hash = hash(new byte[0]);super.clear();}",
    "output": "protected internal override void Clear(){hash = Hash(new byte[0]);base.Clear();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "protected internal override void Clear(){hash = Hash(new byte[0]);base.Clear();}",
    "output": "public void clear() {hash = hash(new byte[0]);super.clear();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void reset() throws IOException {synchronized (lock) {checkNotClosed();if (mark == -1) {throw new IOException(\"Invalid mark\");}pos = mark;}}",
    "output": "public override void reset(){lock (@lock){checkNotClosed();if (_mark == -1){throw new System.IO.IOException(\"Invalid mark\");}pos = _mark;}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override void reset(){lock (@lock){checkNotClosed();if (_mark == -1){throw new System.IO.IOException(\"Invalid mark\");}pos = _mark;}}",
    "output": "public void reset() throws IOException {synchronized (lock) {checkNotClosed();if (mark == -1) {throw new IOException(\"Invalid mark\");}pos = mark;}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public RefErrorPtg(LittleEndianInput in)  {field_1_reserved = in.readInt();}",
    "output": "public RefErrorPtg(ILittleEndianInput in1){field_1_reserved = in1.ReadInt();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public RefErrorPtg(ILittleEndianInput in1){field_1_reserved = in1.ReadInt();}",
    "output": "public RefErrorPtg(LittleEndianInput in)  {field_1_reserved = in.readInt();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public SuspendGameServerGroupResult suspendGameServerGroup(SuspendGameServerGroupRequest request) {request = beforeClientExecution(request);return executeSuspendGameServerGroup(request);}",
    "output": "public virtual SuspendGameServerGroupResponse SuspendGameServerGroup(SuspendGameServerGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = SuspendGameServerGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = SuspendGameServerGroupResponseUnmarshaller.Instance;return Invoke<SuspendGameServerGroupResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual SuspendGameServerGroupResponse SuspendGameServerGroup(SuspendGameServerGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = SuspendGameServerGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = SuspendGameServerGroupResponseUnmarshaller.Instance;return Invoke<SuspendGameServerGroupResponse>(request, options);}",
    "output": "public SuspendGameServerGroupResult suspendGameServerGroup(SuspendGameServerGroupRequest request) {request = beforeClientExecution(request);return executeSuspendGameServerGroup(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public final ValueEval evaluate(ValueEval[] args, int srcRowIndex, int srcColumnIndex) {if (args.length != 3) {return ErrorEval.VALUE_INVALID;}return evaluate(srcRowIndex, srcColumnIndex, args[0], args[1], args[2]);}",
    "output": "public ValueEval Evaluate(ValueEval[] args, int srcRowIndex, int srcColumnIndex){if (args.Length != 3){return ErrorEval.VALUE_INVALID;}return Evaluate(srcRowIndex, srcColumnIndex, args[0], args[1], args[2]);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public ValueEval Evaluate(ValueEval[] args, int srcRowIndex, int srcColumnIndex){if (args.Length != 3){return ErrorEval.VALUE_INVALID;}return Evaluate(srcRowIndex, srcColumnIndex, args[0], args[1], args[2]);}",
    "output": "public final ValueEval evaluate(ValueEval[] args, int srcRowIndex, int srcColumnIndex) {if (args.length != 3) {return ErrorEval.VALUE_INVALID;}return evaluate(srcRowIndex, srcColumnIndex, args[0], args[1], args[2]);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public GetRepoRequest() {super(\"cr\", \"2016-06-07\", \"GetRepo\", \"cr\");setUriPattern(\"/repos/[RepoNamespace]/[RepoName]\");setMethod(MethodType.GET);}",
    "output": "public GetRepoRequest(): base(\"cr\", \"2016-06-07\", \"GetRepo\", \"cr\", \"openAPI\"){UriPattern = \"/repos/[RepoNamespace]/[RepoName]\";Method = MethodType.GET;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public GetRepoRequest(): base(\"cr\", \"2016-06-07\", \"GetRepo\", \"cr\", \"openAPI\"){UriPattern = \"/repos/[RepoNamespace]/[RepoName]\";Method = MethodType.GET;}",
    "output": "public GetRepoRequest() {super(\"cr\", \"2016-06-07\", \"GetRepo\", \"cr\");setUriPattern(\"/repos/[RepoNamespace]/[RepoName]\");setMethod(MethodType.GET);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void setDate(Date date) {if (date != null) {setDate(DateTools.dateToString(date, DateTools.Resolution.SECOND));} else {this.date = null;}}",
    "output": "public virtual void SetDate(DateTime? date){if (date.HasValue){SetDate(DateTools.DateToString(date.Value, DateTools.Resolution.SECOND));}else{this.date = null;}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual void SetDate(DateTime? date){if (date.HasValue){SetDate(DateTools.DateToString(date.Value, DateTools.Resolution.SECOND));}else{this.date = null;}}",
    "output": "public void setDate(Date date) {if (date != null) {setDate(DateTools.dateToString(date, DateTools.Resolution.SECOND));} else {this.date = null;}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public TokenStream create(TokenStream input) {return new GermanMinimalStemFilter(input);}",
    "output": "public override TokenStream Create(TokenStream input){return new GermanMinimalStemFilter(input);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override TokenStream Create(TokenStream input){return new GermanMinimalStemFilter(input);}",
    "output": "public TokenStream create(TokenStream input) {return new GermanMinimalStemFilter(input);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public Object[] toArray() {return a.clone();}",
    "output": "public override object[] toArray(){return (object[])a.Clone();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override object[] toArray(){return (object[])a.Clone();}",
    "output": "public Object[] toArray() {return a.clone();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void write(char[] buffer, int offset, int len) {Arrays.checkOffsetAndCount(buffer.length, offset, len);synchronized (lock) {expand(len);System.arraycopy(buffer, offset, this.buf, this.count, len);this.count += len;}}",
    "output": "public override void write(char[] buffer, int offset, int len){java.util.Arrays.checkOffsetAndCount(buffer.Length, offset, len);lock (@lock){expand(len);System.Array.Copy(buffer, offset, this.buf, this.count, len);this.count += len;}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override void write(char[] buffer, int offset, int len){java.util.Arrays.checkOffsetAndCount(buffer.Length, offset, len);lock (@lock){expand(len);System.Array.Copy(buffer, offset, this.buf, this.count, len);this.count += len;}}",
    "output": "public void write(char[] buffer, int offset, int len) {Arrays.checkOffsetAndCount(buffer.length, offset, len);synchronized (lock) {expand(len);System.arraycopy(buffer, offset, this.buf, this.count, len);this.count += len;}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public static final RevFilter after(Date ts) {return after(ts.getTime());}",
    "output": "public static RevFilter After(long ts){return new CommitTimeRevFilterAfter(ts);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public static RevFilter After(long ts){return new CommitTimeRevFilterAfter(ts);}",
    "output": "public static final RevFilter after(Date ts) {return after(ts.getTime());}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DeleteGroupPolicyRequest(String groupName, String policyName) {setGroupName(groupName);setPolicyName(policyName);}",
    "output": "public DeleteGroupPolicyRequest(string groupName, string policyName){_groupName = groupName;_policyName = policyName;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public DeleteGroupPolicyRequest(string groupName, string policyName){_groupName = groupName;_policyName = policyName;}",
    "output": "public DeleteGroupPolicyRequest(String groupName, String policyName) {setGroupName(groupName);setPolicyName(policyName);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DeregisterTransitGatewayMulticastGroupMembersResult deregisterTransitGatewayMulticastGroupMembers(DeregisterTransitGatewayMulticastGroupMembersRequest request) {request = beforeClientExecution(request);return executeDeregisterTransitGatewayMulticastGroupMembers(request);}",
    "output": "public virtual DeregisterTransitGatewayMulticastGroupMembersResponse DeregisterTransitGatewayMulticastGroupMembers(DeregisterTransitGatewayMulticastGroupMembersRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeregisterTransitGatewayMulticastGroupMembersRequestMarshaller.Instance;options.ResponseUnmarshaller = DeregisterTransitGatewayMulticastGroupMembersResponseUnmarshaller.Instance;return Invoke<DeregisterTransitGatewayMulticastGroupMembersResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DeregisterTransitGatewayMulticastGroupMembersResponse DeregisterTransitGatewayMulticastGroupMembers(DeregisterTransitGatewayMulticastGroupMembersRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeregisterTransitGatewayMulticastGroupMembersRequestMarshaller.Instance;options.ResponseUnmarshaller = DeregisterTransitGatewayMulticastGroupMembersResponseUnmarshaller.Instance;return Invoke<DeregisterTransitGatewayMulticastGroupMembersResponse>(request, options);}",
    "output": "public DeregisterTransitGatewayMulticastGroupMembersResult deregisterTransitGatewayMulticastGroupMembers(DeregisterTransitGatewayMulticastGroupMembersRequest request) {request = beforeClientExecution(request);return executeDeregisterTransitGatewayMulticastGroupMembers(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public BatchDeleteScheduledActionResult batchDeleteScheduledAction(BatchDeleteScheduledActionRequest request) {request = beforeClientExecution(request);return executeBatchDeleteScheduledAction(request);}",
    "output": "public virtual BatchDeleteScheduledActionResponse BatchDeleteScheduledAction(BatchDeleteScheduledActionRequest request){var options = new InvokeOptions();options.RequestMarshaller = BatchDeleteScheduledActionRequestMarshaller.Instance;options.ResponseUnmarshaller = BatchDeleteScheduledActionResponseUnmarshaller.Instance;return Invoke<BatchDeleteScheduledActionResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual BatchDeleteScheduledActionResponse BatchDeleteScheduledAction(BatchDeleteScheduledActionRequest request){var options = new InvokeOptions();options.RequestMarshaller = BatchDeleteScheduledActionRequestMarshaller.Instance;options.ResponseUnmarshaller = BatchDeleteScheduledActionResponseUnmarshaller.Instance;return Invoke<BatchDeleteScheduledActionResponse>(request, options);}",
    "output": "public BatchDeleteScheduledActionResult batchDeleteScheduledAction(BatchDeleteScheduledActionRequest request) {request = beforeClientExecution(request);return executeBatchDeleteScheduledAction(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public CreateAlgorithmResult createAlgorithm(CreateAlgorithmRequest request) {request = beforeClientExecution(request);return executeCreateAlgorithm(request);}",
    "output": "public virtual CreateAlgorithmResponse CreateAlgorithm(CreateAlgorithmRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateAlgorithmRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateAlgorithmResponseUnmarshaller.Instance;return Invoke<CreateAlgorithmResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual CreateAlgorithmResponse CreateAlgorithm(CreateAlgorithmRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateAlgorithmRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateAlgorithmResponseUnmarshaller.Instance;return Invoke<CreateAlgorithmResponse>(request, options);}",
    "output": "public CreateAlgorithmResult createAlgorithm(CreateAlgorithmRequest request) {request = beforeClientExecution(request);return executeCreateAlgorithm(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public int readUByte() {return readByte() & 0x00FF;}",
    "output": "public int ReadUByte(){CheckPosition(1);return _buf[_ReadIndex++] & 0xFF;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public int ReadUByte(){CheckPosition(1);return _buf[_ReadIndex++] & 0xFF;}",
    "output": "public int readUByte() {return readByte() & 0x00FF;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void setLength(int sz) {NB.encodeInt32(info, infoOffset + P_SIZE, sz);}",
    "output": "public virtual void SetLength(int sz){NB.EncodeInt32(info, infoOffset + P_SIZE, sz);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual void SetLength(int sz){NB.EncodeInt32(info, infoOffset + P_SIZE, sz);}",
    "output": "public void setLength(int sz) {NB.encodeInt32(info, infoOffset + P_SIZE, sz);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DescribeScalingProcessTypesResult describeScalingProcessTypes() {return describeScalingProcessTypes(new DescribeScalingProcessTypesRequest());}",
    "output": "public virtual DescribeScalingProcessTypesResponse DescribeScalingProcessTypes(){return DescribeScalingProcessTypes(new DescribeScalingProcessTypesRequest());}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DescribeScalingProcessTypesResponse DescribeScalingProcessTypes(){return DescribeScalingProcessTypes(new DescribeScalingProcessTypesRequest());}",
    "output": "public DescribeScalingProcessTypesResult describeScalingProcessTypes() {return describeScalingProcessTypes(new DescribeScalingProcessTypesRequest());}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ListResourceRecordSetsResult listResourceRecordSets(ListResourceRecordSetsRequest request) {request = beforeClientExecution(request);return executeListResourceRecordSets(request);}",
    "output": "public virtual ListResourceRecordSetsResponse ListResourceRecordSets(ListResourceRecordSetsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListResourceRecordSetsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListResourceRecordSetsResponseUnmarshaller.Instance;return Invoke<ListResourceRecordSetsResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual ListResourceRecordSetsResponse ListResourceRecordSets(ListResourceRecordSetsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListResourceRecordSetsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListResourceRecordSetsResponseUnmarshaller.Instance;return Invoke<ListResourceRecordSetsResponse>(request, options);}",
    "output": "public ListResourceRecordSetsResult listResourceRecordSets(ListResourceRecordSetsRequest request) {request = beforeClientExecution(request);return executeListResourceRecordSets(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public Token recoverInline(Parser recognizer)throws RecognitionException{InputMismatchException e = new InputMismatchException(recognizer);for (ParserRuleContext context = recognizer.getContext(); context != null; context = context.getParent()) {context.exception = e;}throw new ParseCancellationException(e);}",
    "output": "public override IToken RecoverInline(Parser recognizer){InputMismatchException e = new InputMismatchException(recognizer);for (ParserRuleContext context = recognizer.Context; context != null; context = ((ParserRuleContext)context.Parent)){context.exception = e;}throw new ParseCanceledException(e);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override IToken RecoverInline(Parser recognizer){InputMismatchException e = new InputMismatchException(recognizer);for (ParserRuleContext context = recognizer.Context; context != null; context = ((ParserRuleContext)context.Parent)){context.exception = e;}throw new ParseCanceledException(e);}",
    "output": "public Token recoverInline(Parser recognizer)throws RecognitionException{InputMismatchException e = new InputMismatchException(recognizer);for (ParserRuleContext context = recognizer.getContext(); context != null; context = context.getParent()) {context.exception = e;}throw new ParseCancellationException(e);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public SetTagsForResourceResult setTagsForResource(SetTagsForResourceRequest request) {request = beforeClientExecution(request);return executeSetTagsForResource(request);}",
    "output": "public virtual SetTagsForResourceResponse SetTagsForResource(SetTagsForResourceRequest request){var options = new InvokeOptions();options.RequestMarshaller = SetTagsForResourceRequestMarshaller.Instance;options.ResponseUnmarshaller = SetTagsForResourceResponseUnmarshaller.Instance;return Invoke<SetTagsForResourceResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual SetTagsForResourceResponse SetTagsForResource(SetTagsForResourceRequest request){var options = new InvokeOptions();options.RequestMarshaller = SetTagsForResourceRequestMarshaller.Instance;options.ResponseUnmarshaller = SetTagsForResourceResponseUnmarshaller.Instance;return Invoke<SetTagsForResourceResponse>(request, options);}",
    "output": "public SetTagsForResourceResult setTagsForResource(SetTagsForResourceRequest request) {request = beforeClientExecution(request);return executeSetTagsForResource(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ModifyStrategyRequest() {super(\"CloudCallCenter\", \"2017-07-05\", \"ModifyStrategy\", \"CloudCallCenter\", \"innerAPI\");}",
    "output": "public ModifyStrategyRequest(): base(\"aegis\", \"2016-11-11\", \"ModifyStrategy\", \"vipaegis\", \"openAPI\"){Method = MethodType.POST;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public ModifyStrategyRequest(): base(\"aegis\", \"2016-11-11\", \"ModifyStrategy\", \"vipaegis\", \"openAPI\"){Method = MethodType.POST;}",
    "output": "public ModifyStrategyRequest() {super(\"CloudCallCenter\", \"2017-07-05\", \"ModifyStrategy\", \"CloudCallCenter\", \"innerAPI\");}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DescribeVpcEndpointServicesResult describeVpcEndpointServices(DescribeVpcEndpointServicesRequest request) {request = beforeClientExecution(request);return executeDescribeVpcEndpointServices(request);}",
    "output": "public virtual DescribeVpcEndpointServicesResponse DescribeVpcEndpointServices(DescribeVpcEndpointServicesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeVpcEndpointServicesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeVpcEndpointServicesResponseUnmarshaller.Instance;return Invoke<DescribeVpcEndpointServicesResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DescribeVpcEndpointServicesResponse DescribeVpcEndpointServices(DescribeVpcEndpointServicesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeVpcEndpointServicesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeVpcEndpointServicesResponseUnmarshaller.Instance;return Invoke<DescribeVpcEndpointServicesResponse>(request, options);}",
    "output": "public DescribeVpcEndpointServicesResult describeVpcEndpointServices(DescribeVpcEndpointServicesRequest request) {request = beforeClientExecution(request);return executeDescribeVpcEndpointServices(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public EnableLoggingResult enableLogging(EnableLoggingRequest request) {request = beforeClientExecution(request);return executeEnableLogging(request);}",
    "output": "public virtual EnableLoggingResponse EnableLogging(EnableLoggingRequest request){var options = new InvokeOptions();options.RequestMarshaller = EnableLoggingRequestMarshaller.Instance;options.ResponseUnmarshaller = EnableLoggingResponseUnmarshaller.Instance;return Invoke<EnableLoggingResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual EnableLoggingResponse EnableLogging(EnableLoggingRequest request){var options = new InvokeOptions();options.RequestMarshaller = EnableLoggingRequestMarshaller.Instance;options.ResponseUnmarshaller = EnableLoggingResponseUnmarshaller.Instance;return Invoke<EnableLoggingResponse>(request, options);}",
    "output": "public EnableLoggingResult enableLogging(EnableLoggingRequest request) {request = beforeClientExecution(request);return executeEnableLogging(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public boolean contains(Object o) {return ConcurrentHashMap.this.containsValue(o);}",
    "output": "public override bool contains(object o){return this._enclosing.containsValue(o);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override bool contains(object o){return this._enclosing.containsValue(o);}",
    "output": "public boolean contains(Object o) {return ConcurrentHashMap.this.containsValue(o);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public SheetRangeIdentifier(String bookName, NameIdentifier firstSheetIdentifier, NameIdentifier lastSheetIdentifier) {super(bookName, firstSheetIdentifier);_lastSheetIdentifier = lastSheetIdentifier;}",
    "output": "public SheetRangeIdentifier(String bookName, NameIdentifier firstSheetIdentifier, NameIdentifier lastSheetIdentifier): base(bookName, firstSheetIdentifier){_lastSheetIdentifier = lastSheetIdentifier;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public SheetRangeIdentifier(String bookName, NameIdentifier firstSheetIdentifier, NameIdentifier lastSheetIdentifier): base(bookName, firstSheetIdentifier){_lastSheetIdentifier = lastSheetIdentifier;}",
    "output": "public SheetRangeIdentifier(String bookName, NameIdentifier firstSheetIdentifier, NameIdentifier lastSheetIdentifier) {super(bookName, firstSheetIdentifier);_lastSheetIdentifier = lastSheetIdentifier;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DomainMetadataRequest(String domainName) {setDomainName(domainName);}",
    "output": "public DomainMetadataRequest(string domainName){_domainName = domainName;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public DomainMetadataRequest(string domainName){_domainName = domainName;}",
    "output": "public DomainMetadataRequest(String domainName) {setDomainName(domainName);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ParseException(Token currentTokenVal,int[][] expectedTokenSequencesVal, String[] tokenImageVal) {super(new MessageImpl(QueryParserMessages.INVALID_SYNTAX, initialise(currentTokenVal, expectedTokenSequencesVal, tokenImageVal)));this.currentToken = currentTokenVal;this.expectedTokenSequences = expectedTokenSequencesVal;this.tokenImage = tokenImageVal;}",
    "output": "public ParseException(Token currentToken,int[][] expectedTokenSequences,string[] tokenImage): base(Initialize(currentToken, expectedTokenSequences, tokenImage)){this.CurrentToken = currentToken;this.ExpectedTokenSequences = expectedTokenSequences;this.TokenImage = tokenImage;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public ParseException(Token currentToken,int[][] expectedTokenSequences,string[] tokenImage): base(Initialize(currentToken, expectedTokenSequences, tokenImage)){this.CurrentToken = currentToken;this.ExpectedTokenSequences = expectedTokenSequences;this.TokenImage = tokenImage;}",
    "output": "public ParseException(Token currentTokenVal,int[][] expectedTokenSequencesVal, String[] tokenImageVal) {super(new MessageImpl(QueryParserMessages.INVALID_SYNTAX, initialise(currentTokenVal, expectedTokenSequencesVal, tokenImageVal)));this.currentToken = currentTokenVal;this.expectedTokenSequences = expectedTokenSequencesVal;this.tokenImage = tokenImageVal;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public FetchPhotosRequest() {super(\"CloudPhoto\", \"2017-07-11\", \"FetchPhotos\", \"cloudphoto\");setProtocol(ProtocolType.HTTPS);}",
    "output": "public FetchPhotosRequest(): base(\"CloudPhoto\", \"2017-07-11\", \"FetchPhotos\", \"cloudphoto\", \"openAPI\"){Protocol = ProtocolType.HTTPS;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public FetchPhotosRequest(): base(\"CloudPhoto\", \"2017-07-11\", \"FetchPhotos\", \"cloudphoto\", \"openAPI\"){Protocol = ProtocolType.HTTPS;}",
    "output": "public FetchPhotosRequest() {super(\"CloudPhoto\", \"2017-07-11\", \"FetchPhotos\", \"cloudphoto\");setProtocol(ProtocolType.HTTPS);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public PrintWriter writer() {return writer;}",
    "output": "public java.io.PrintWriter writer(){return _writer;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public java.io.PrintWriter writer(){return _writer;}",
    "output": "public PrintWriter writer() {return writer;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public NGramTokenizerFactory(Map<String, String> args) {super(args);minGramSize = getInt(args, \"minGramSize\", NGramTokenizer.DEFAULT_MIN_NGRAM_SIZE);maxGramSize = getInt(args, \"maxGramSize\", NGramTokenizer.DEFAULT_MAX_NGRAM_SIZE);if (!args.isEmpty()) {throw new IllegalArgumentException(\"Unknown parameters: \" + args);}}",
    "output": "public NGramTokenizerFactory(IDictionary<string, string> args): base(args){minGramSize = GetInt32(args, \"minGramSize\", NGramTokenizer.DEFAULT_MIN_NGRAM_SIZE);maxGramSize = GetInt32(args, \"maxGramSize\", NGramTokenizer.DEFAULT_MAX_NGRAM_SIZE);if (args.Count > 0){throw new System.ArgumentException(\"Unknown parameters: \" + args);}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public NGramTokenizerFactory(IDictionary<string, string> args): base(args){minGramSize = GetInt32(args, \"minGramSize\", NGramTokenizer.DEFAULT_MIN_NGRAM_SIZE);maxGramSize = GetInt32(args, \"maxGramSize\", NGramTokenizer.DEFAULT_MAX_NGRAM_SIZE);if (args.Count > 0){throw new System.ArgumentException(\"Unknown parameters: \" + args);}}",
    "output": "public NGramTokenizerFactory(Map<String, String> args) {super(args);minGramSize = getInt(args, \"minGramSize\", NGramTokenizer.DEFAULT_MIN_NGRAM_SIZE);maxGramSize = getInt(args, \"maxGramSize\", NGramTokenizer.DEFAULT_MAX_NGRAM_SIZE);if (!args.isEmpty()) {throw new IllegalArgumentException(\"Unknown parameters: \" + args);}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public boolean isDirectoryFileConflict() {return dfConflict != null;}",
    "output": "public virtual bool IsDirectoryFileConflict(){return dfConflict != null;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual bool IsDirectoryFileConflict(){return dfConflict != null;}",
    "output": "public boolean isDirectoryFileConflict() {return dfConflict != null;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public IndonesianStemFilter(TokenStream input, boolean stemDerivational) {super(input);this.stemDerivational = stemDerivational;}",
    "output": "public IndonesianStemFilter(TokenStream input, bool stemDerivational): base(input){this.stemDerivational = stemDerivational;termAtt = AddAttribute<ICharTermAttribute>();keywordAtt = AddAttribute<IKeywordAttribute>();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public IndonesianStemFilter(TokenStream input, bool stemDerivational): base(input){this.stemDerivational = stemDerivational;termAtt = AddAttribute<ICharTermAttribute>();keywordAtt = AddAttribute<IKeywordAttribute>();}",
    "output": "public IndonesianStemFilter(TokenStream input, boolean stemDerivational) {super(input);this.stemDerivational = stemDerivational;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public CreateTrafficPolicyResult createTrafficPolicy(CreateTrafficPolicyRequest request) {request = beforeClientExecution(request);return executeCreateTrafficPolicy(request);}",
    "output": "public virtual CreateTrafficPolicyResponse CreateTrafficPolicy(CreateTrafficPolicyRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateTrafficPolicyRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateTrafficPolicyResponseUnmarshaller.Instance;return Invoke<CreateTrafficPolicyResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual CreateTrafficPolicyResponse CreateTrafficPolicy(CreateTrafficPolicyRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateTrafficPolicyRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateTrafficPolicyResponseUnmarshaller.Instance;return Invoke<CreateTrafficPolicyResponse>(request, options);}",
    "output": "public CreateTrafficPolicyResult createTrafficPolicy(CreateTrafficPolicyRequest request) {request = beforeClientExecution(request);return executeCreateTrafficPolicy(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void serialize(LittleEndianOutput out) {out.writeInt(fSD);out.writeInt(passwordVerifier);StringUtil.writeUnicodeString(out, title);out.write(securityDescriptor);}",
    "output": "public void Serialize(ILittleEndianOutput out1){out1.WriteInt(fSD);out1.WriteInt(passwordVerifier);StringUtil.WriteUnicodeString(out1, title);out1.Write(securityDescriptor);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public void Serialize(ILittleEndianOutput out1){out1.WriteInt(fSD);out1.WriteInt(passwordVerifier);StringUtil.WriteUnicodeString(out1, title);out1.Write(securityDescriptor);}",
    "output": "public void serialize(LittleEndianOutput out) {out.writeInt(fSD);out.writeInt(passwordVerifier);StringUtil.writeUnicodeString(out, title);out.write(securityDescriptor);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public static double floor(double n, double s) {if (s==0 && n!=0) {return Double.NaN;} else {return (n==0 || s==0) ? 0 : Math.floor(n/s) * s;}}",
    "output": "public static double Floor(double n, double s){double f;if ((n < 0 && s > 0) || (n > 0 && s < 0) || (s == 0 && n != 0)){f = double.NaN;}else{f = (n == 0 || s == 0) ? 0 : Math.Floor(n / s) * s;}return f;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public static double Floor(double n, double s){double f;if ((n < 0 && s > 0) || (n > 0 && s < 0) || (s == 0 && n != 0)){f = double.NaN;}else{f = (n == 0 || s == 0) ? 0 : Math.Floor(n / s) * s;}return f;}",
    "output": "public static double floor(double n, double s) {if (s==0 && n!=0) {return Double.NaN;} else {return (n==0 || s==0) ? 0 : Math.floor(n/s) * s;}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ByteArrayDataOutput(byte[] bytes, int offset, int len) {reset(bytes, offset, len);}",
    "output": "public ByteArrayDataOutput(byte[] bytes, int offset, int len){Reset(bytes, offset, len);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public ByteArrayDataOutput(byte[] bytes, int offset, int len){Reset(bytes, offset, len);}",
    "output": "public ByteArrayDataOutput(byte[] bytes, int offset, int len) {reset(bytes, offset, len);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public static List<Tree> getChildren(Tree t) {List<Tree> kids = new ArrayList<Tree>();for (int i=0; i<t.getChildCount(); i++) {kids.add(t.getChild(i));}return kids;}",
    "output": "public static IList<ITree> GetChildren(ITree t){IList<ITree> kids = new List<ITree>();for (int i = 0; i < t.ChildCount; i++){kids.Add(t.GetChild(i));}return kids;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public static IList<ITree> GetChildren(ITree t){IList<ITree> kids = new List<ITree>();for (int i = 0; i < t.ChildCount; i++){kids.Add(t.GetChild(i));}return kids;}",
    "output": "public static List<Tree> getChildren(Tree t) {List<Tree> kids = new ArrayList<Tree>();for (int i=0; i<t.getChildCount(); i++) {kids.add(t.getChild(i));}return kids;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void clear() {Hashtable.this.clear();}",
    "output": "public override void clear(){this._enclosing.clear();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override void clear(){this._enclosing.clear();}",
    "output": "public void clear() {Hashtable.this.clear();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public RefreshAllRecord(boolean refreshAll) {this(0);setRefreshAll(refreshAll);}",
    "output": "public RefreshAllRecord(bool refreshAll): this(0){RefreshAll = (refreshAll);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public RefreshAllRecord(bool refreshAll): this(0){RefreshAll = (refreshAll);}",
    "output": "public RefreshAllRecord(boolean refreshAll) {this(0);setRefreshAll(refreshAll);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DeleteNamedQueryResult deleteNamedQuery(DeleteNamedQueryRequest request) {request = beforeClientExecution(request);return executeDeleteNamedQuery(request);}",
    "output": "public virtual DeleteNamedQueryResponse DeleteNamedQuery(DeleteNamedQueryRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteNamedQueryRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteNamedQueryResponseUnmarshaller.Instance;return Invoke<DeleteNamedQueryResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DeleteNamedQueryResponse DeleteNamedQuery(DeleteNamedQueryRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteNamedQueryRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteNamedQueryResponseUnmarshaller.Instance;return Invoke<DeleteNamedQueryResponse>(request, options);}",
    "output": "public DeleteNamedQueryResult deleteNamedQuery(DeleteNamedQueryRequest request) {request = beforeClientExecution(request);return executeDeleteNamedQuery(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public GraphvizFormatter(ConnectionCosts costs) {this.costs = costs;this.bestPathMap = new HashMap<>();sb.append(formatHeader());sb.append(\"  init [style=invis]\\n\");sb.append(\"  init -> 0.0 [label=\\\"\" + BOS_LABEL + \"\\\"]\\n\");}",
    "output": "public GraphvizFormatter(ConnectionCosts costs){this.costs = costs;this.bestPathMap = new Dictionary<string, string>();sb.Append(FormatHeader());sb.Append(\"  init [style=invis]\\n\");sb.Append(\"  init -> 0.0 [label=\\\"\" + BOS_LABEL + \"\\\"]\\n\");}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public GraphvizFormatter(ConnectionCosts costs){this.costs = costs;this.bestPathMap = new Dictionary<string, string>();sb.Append(FormatHeader());sb.Append(\"  init [style=invis]\\n\");sb.Append(\"  init -> 0.0 [label=\\\"\" + BOS_LABEL + \"\\\"]\\n\");}",
    "output": "public GraphvizFormatter(ConnectionCosts costs) {this.costs = costs;this.bestPathMap = new HashMap<>();sb.append(formatHeader());sb.append(\"  init [style=invis]\\n\");sb.append(\"  init -> 0.0 [label=\\\"\" + BOS_LABEL + \"\\\"]\\n\");}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public CheckMultiagentRequest() {super(\"visionai-poc\", \"2020-04-08\", \"CheckMultiagent\");setMethod(MethodType.POST);}",
    "output": "public CheckMultiagentRequest(): base(\"visionai-poc\", \"2020-04-08\", \"CheckMultiagent\"){Method = MethodType.POST;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public CheckMultiagentRequest(): base(\"visionai-poc\", \"2020-04-08\", \"CheckMultiagent\"){Method = MethodType.POST;}",
    "output": "public CheckMultiagentRequest() {super(\"visionai-poc\", \"2020-04-08\", \"CheckMultiagent\");setMethod(MethodType.POST);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ListUserProfilesResult listUserProfiles(ListUserProfilesRequest request) {request = beforeClientExecution(request);return executeListUserProfiles(request);}",
    "output": "public virtual ListUserProfilesResponse ListUserProfiles(ListUserProfilesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListUserProfilesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListUserProfilesResponseUnmarshaller.Instance;return Invoke<ListUserProfilesResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual ListUserProfilesResponse ListUserProfiles(ListUserProfilesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListUserProfilesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListUserProfilesResponseUnmarshaller.Instance;return Invoke<ListUserProfilesResponse>(request, options);}",
    "output": "public ListUserProfilesResult listUserProfiles(ListUserProfilesRequest request) {request = beforeClientExecution(request);return executeListUserProfiles(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public CreateRelationalDatabaseFromSnapshotResult createRelationalDatabaseFromSnapshot(CreateRelationalDatabaseFromSnapshotRequest request) {request = beforeClientExecution(request);return executeCreateRelationalDatabaseFromSnapshot(request);}",
    "output": "public virtual CreateRelationalDatabaseFromSnapshotResponse CreateRelationalDatabaseFromSnapshot(CreateRelationalDatabaseFromSnapshotRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateRelationalDatabaseFromSnapshotRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateRelationalDatabaseFromSnapshotResponseUnmarshaller.Instance;return Invoke<CreateRelationalDatabaseFromSnapshotResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual CreateRelationalDatabaseFromSnapshotResponse CreateRelationalDatabaseFromSnapshot(CreateRelationalDatabaseFromSnapshotRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateRelationalDatabaseFromSnapshotRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateRelationalDatabaseFromSnapshotResponseUnmarshaller.Instance;return Invoke<CreateRelationalDatabaseFromSnapshotResponse>(request, options);}",
    "output": "public CreateRelationalDatabaseFromSnapshotResult createRelationalDatabaseFromSnapshot(CreateRelationalDatabaseFromSnapshotRequest request) {request = beforeClientExecution(request);return executeCreateRelationalDatabaseFromSnapshot(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public StartTaskResult startTask(StartTaskRequest request) {request = beforeClientExecution(request);return executeStartTask(request);}",
    "output": "public virtual StartTaskResponse StartTask(StartTaskRequest request){var options = new InvokeOptions();options.RequestMarshaller = StartTaskRequestMarshaller.Instance;options.ResponseUnmarshaller = StartTaskResponseUnmarshaller.Instance;return Invoke<StartTaskResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual StartTaskResponse StartTask(StartTaskRequest request){var options = new InvokeOptions();options.RequestMarshaller = StartTaskRequestMarshaller.Instance;options.ResponseUnmarshaller = StartTaskResponseUnmarshaller.Instance;return Invoke<StartTaskResponse>(request, options);}",
    "output": "public StartTaskResult startTask(StartTaskRequest request) {request = beforeClientExecution(request);return executeStartTask(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public Set<String> getIgnoredPaths() {return ignoredPaths;}",
    "output": "public virtual ICollection<string> GetIgnoredPaths(){return ignoredPaths;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual ICollection<string> GetIgnoredPaths(){return ignoredPaths;}",
    "output": "public Set<String> getIgnoredPaths() {return ignoredPaths;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public FeatSmartTag(RecordInputStream in) {data = in.readRemainder();}",
    "output": "public FeatSmartTag(RecordInputStream in1){data = in1.ReadRemainder();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public FeatSmartTag(RecordInputStream in1){data = in1.ReadRemainder();}",
    "output": "public FeatSmartTag(RecordInputStream in) {data = in.readRemainder();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public Change(ChangeAction action, ResourceRecordSet resourceRecordSet) {setAction(action.toString());setResourceRecordSet(resourceRecordSet);}",
    "output": "public Change(ChangeAction action, ResourceRecordSet resourceRecordSet){_action = action;_resourceRecordSet = resourceRecordSet;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public Change(ChangeAction action, ResourceRecordSet resourceRecordSet){_action = action;_resourceRecordSet = resourceRecordSet;}",
    "output": "public Change(ChangeAction action, ResourceRecordSet resourceRecordSet) {setAction(action.toString());setResourceRecordSet(resourceRecordSet);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DeleteImageResult deleteImage(DeleteImageRequest request) {request = beforeClientExecution(request);return executeDeleteImage(request);}",
    "output": "public virtual DeleteImageResponse DeleteImage(DeleteImageRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteImageRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteImageResponseUnmarshaller.Instance;return Invoke<DeleteImageResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DeleteImageResponse DeleteImage(DeleteImageRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteImageRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteImageResponseUnmarshaller.Instance;return Invoke<DeleteImageResponse>(request, options);}",
    "output": "public DeleteImageResult deleteImage(DeleteImageRequest request) {request = beforeClientExecution(request);return executeDeleteImage(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public CreateConfigurationSetResult createConfigurationSet(CreateConfigurationSetRequest request) {request = beforeClientExecution(request);return executeCreateConfigurationSet(request);}",
    "output": "public virtual CreateConfigurationSetResponse CreateConfigurationSet(CreateConfigurationSetRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateConfigurationSetRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateConfigurationSetResponseUnmarshaller.Instance;return Invoke<CreateConfigurationSetResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual CreateConfigurationSetResponse CreateConfigurationSet(CreateConfigurationSetRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateConfigurationSetRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateConfigurationSetResponseUnmarshaller.Instance;return Invoke<CreateConfigurationSetResponse>(request, options);}",
    "output": "public CreateConfigurationSetResult createConfigurationSet(CreateConfigurationSetRequest request) {request = beforeClientExecution(request);return executeCreateConfigurationSet(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public Iterator<E> iterator() {Object[] snapshot = elements;return new CowIterator<E>(snapshot, 0, snapshot.length);}",
    "output": "public virtual java.util.Iterator<E> iterator(){object[] snapshot = elements;return new java.util.concurrent.CopyOnWriteArrayList.CowIterator<E>(snapshot, 0,snapshot.Length);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual java.util.Iterator<E> iterator(){object[] snapshot = elements;return new java.util.concurrent.CopyOnWriteArrayList.CowIterator<E>(snapshot, 0,snapshot.Length);}",
    "output": "public Iterator<E> iterator() {Object[] snapshot = elements;return new CowIterator<E>(snapshot, 0, snapshot.length);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void visitContainedRecords(RecordVisitor rv) {if (_recs.isEmpty()) {return;}rv.visitRecord(_bofRec);for (int i = 0; i < _recs.size(); i++) {RecordBase rb = _recs.get(i);if (rb instanceof RecordAggregate) {((RecordAggregate) rb).visitContainedRecords(rv);} else {rv.visitRecord((org.apache.poi.hssf.record.Record) rb);}}rv.visitRecord(EOFRecord.instance);}",
    "output": "public override void VisitContainedRecords(RecordVisitor rv){if (_recs.Count==0){return;}rv.VisitRecord(_bofRec);for (int i = 0; i < _recs.Count; i++){RecordBase rb = _recs[i];if (rb is RecordAggregate){((RecordAggregate)rb).VisitContainedRecords(rv);}else{rv.VisitRecord((Record)rb);}}rv.VisitRecord(EOFRecord.instance);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override void VisitContainedRecords(RecordVisitor rv){if (_recs.Count==0){return;}rv.VisitRecord(_bofRec);for (int i = 0; i < _recs.Count; i++){RecordBase rb = _recs[i];if (rb is RecordAggregate){((RecordAggregate)rb).VisitContainedRecords(rv);}else{rv.VisitRecord((Record)rb);}}rv.VisitRecord(EOFRecord.instance);}",
    "output": "public void visitContainedRecords(RecordVisitor rv) {if (_recs.isEmpty()) {return;}rv.visitRecord(_bofRec);for (int i = 0; i < _recs.size(); i++) {RecordBase rb = _recs.get(i);if (rb instanceof RecordAggregate) {((RecordAggregate) rb).visitContainedRecords(rv);} else {rv.visitRecord((org.apache.poi.hssf.record.Record) rb);}}rv.visitRecord(EOFRecord.instance);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String toString(){StringBuilder buffer = new StringBuilder();buffer.append(\"[FtCbls ]\").append(\"\\n\");buffer.append(\"  size     = \").append(getDataSize()).append(\"\\n\");buffer.append(\"  reserved = \").append(HexDump.toHex(reserved)).append(\"\\n\");buffer.append(\"[/FtCbls ]\").append(\"\\n\");return buffer.toString();}",
    "output": "public override String ToString(){StringBuilder buffer = new StringBuilder();buffer.Append(\"[FtCbls ]\").Append(\"\\n\");buffer.Append(\"  size     = \").Append(DataSize).Append(\"\\n\");buffer.Append(\"  reserved = \").Append(HexDump.ToHex(reserved)).Append(\"\\n\");buffer.Append(\"[/FtCbls ]\").Append(\"\\n\");return buffer.ToString();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override String ToString(){StringBuilder buffer = new StringBuilder();buffer.Append(\"[FtCbls ]\").Append(\"\\n\");buffer.Append(\"  size     = \").Append(DataSize).Append(\"\\n\");buffer.Append(\"  reserved = \").Append(HexDump.ToHex(reserved)).Append(\"\\n\");buffer.Append(\"[/FtCbls ]\").Append(\"\\n\");return buffer.ToString();}",
    "output": "public String toString(){StringBuilder buffer = new StringBuilder();buffer.append(\"[FtCbls ]\").append(\"\\n\");buffer.append(\"  size     = \").append(getDataSize()).append(\"\\n\");buffer.append(\"  reserved = \").append(HexDump.toHex(reserved)).append(\"\\n\");buffer.append(\"[/FtCbls ]\").append(\"\\n\");return buffer.toString();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public static BATBlock createEmptyBATBlock(final POIFSBigBlockSize bigBlockSize, boolean isXBAT) {BATBlock block = new BATBlock(bigBlockSize);if(isXBAT) {final int _entries_per_xbat_block = bigBlockSize.getXBATEntriesPerBlock();block._values[ _entries_per_xbat_block ] = POIFSConstants.END_OF_CHAIN;}return block;}",
    "output": "public static BATBlock CreateEmptyBATBlock(POIFSBigBlockSize bigBlockSize, bool isXBAT){BATBlock block = new BATBlock(bigBlockSize);if (isXBAT){block.SetXBATChain(bigBlockSize, POIFSConstants.END_OF_CHAIN);}return block;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public static BATBlock CreateEmptyBATBlock(POIFSBigBlockSize bigBlockSize, bool isXBAT){BATBlock block = new BATBlock(bigBlockSize);if (isXBAT){block.SetXBATChain(bigBlockSize, POIFSConstants.END_OF_CHAIN);}return block;}",
    "output": "public static BATBlock createEmptyBATBlock(final POIFSBigBlockSize bigBlockSize, boolean isXBAT) {BATBlock block = new BATBlock(bigBlockSize);if(isXBAT) {final int _entries_per_xbat_block = bigBlockSize.getXBATEntriesPerBlock();block._values[ _entries_per_xbat_block ] = POIFSConstants.END_OF_CHAIN;}return block;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public TagResourceResult tagResource(TagResourceRequest request) {request = beforeClientExecution(request);return executeTagResource(request);}",
    "output": "public virtual TagResourceResponse TagResource(TagResourceRequest request){var options = new InvokeOptions();options.RequestMarshaller = TagResourceRequestMarshaller.Instance;options.ResponseUnmarshaller = TagResourceResponseUnmarshaller.Instance;return Invoke<TagResourceResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual TagResourceResponse TagResource(TagResourceRequest request){var options = new InvokeOptions();options.RequestMarshaller = TagResourceRequestMarshaller.Instance;options.ResponseUnmarshaller = TagResourceResponseUnmarshaller.Instance;return Invoke<TagResourceResponse>(request, options);}",
    "output": "public TagResourceResult tagResource(TagResourceRequest request) {request = beforeClientExecution(request);return executeTagResource(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DeleteMailboxPermissionsResult deleteMailboxPermissions(DeleteMailboxPermissionsRequest request) {request = beforeClientExecution(request);return executeDeleteMailboxPermissions(request);}",
    "output": "public virtual DeleteMailboxPermissionsResponse DeleteMailboxPermissions(DeleteMailboxPermissionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteMailboxPermissionsRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteMailboxPermissionsResponseUnmarshaller.Instance;return Invoke<DeleteMailboxPermissionsResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DeleteMailboxPermissionsResponse DeleteMailboxPermissions(DeleteMailboxPermissionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteMailboxPermissionsRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteMailboxPermissionsResponseUnmarshaller.Instance;return Invoke<DeleteMailboxPermissionsResponse>(request, options);}",
    "output": "public DeleteMailboxPermissionsResult deleteMailboxPermissions(DeleteMailboxPermissionsRequest request) {request = beforeClientExecution(request);return executeDeleteMailboxPermissions(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ListDatasetGroupsResult listDatasetGroups(ListDatasetGroupsRequest request) {request = beforeClientExecution(request);return executeListDatasetGroups(request);}",
    "output": "public virtual ListDatasetGroupsResponse ListDatasetGroups(ListDatasetGroupsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListDatasetGroupsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListDatasetGroupsResponseUnmarshaller.Instance;return Invoke<ListDatasetGroupsResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual ListDatasetGroupsResponse ListDatasetGroups(ListDatasetGroupsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListDatasetGroupsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListDatasetGroupsResponseUnmarshaller.Instance;return Invoke<ListDatasetGroupsResponse>(request, options);}",
    "output": "public ListDatasetGroupsResult listDatasetGroups(ListDatasetGroupsRequest request) {request = beforeClientExecution(request);return executeListDatasetGroups(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ResumeProcessesResult resumeProcesses(ResumeProcessesRequest request) {request = beforeClientExecution(request);return executeResumeProcesses(request);}",
    "output": "public virtual ResumeProcessesResponse ResumeProcesses(ResumeProcessesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ResumeProcessesRequestMarshaller.Instance;options.ResponseUnmarshaller = ResumeProcessesResponseUnmarshaller.Instance;return Invoke<ResumeProcessesResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual ResumeProcessesResponse ResumeProcesses(ResumeProcessesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ResumeProcessesRequestMarshaller.Instance;options.ResponseUnmarshaller = ResumeProcessesResponseUnmarshaller.Instance;return Invoke<ResumeProcessesResponse>(request, options);}",
    "output": "public ResumeProcessesResult resumeProcesses(ResumeProcessesRequest request) {request = beforeClientExecution(request);return executeResumeProcesses(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public GetPersonTrackingResult getPersonTracking(GetPersonTrackingRequest request) {request = beforeClientExecution(request);return executeGetPersonTracking(request);}",
    "output": "public virtual GetPersonTrackingResponse GetPersonTracking(GetPersonTrackingRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetPersonTrackingRequestMarshaller.Instance;options.ResponseUnmarshaller = GetPersonTrackingResponseUnmarshaller.Instance;return Invoke<GetPersonTrackingResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual GetPersonTrackingResponse GetPersonTracking(GetPersonTrackingRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetPersonTrackingRequestMarshaller.Instance;options.ResponseUnmarshaller = GetPersonTrackingResponseUnmarshaller.Instance;return Invoke<GetPersonTrackingResponse>(request, options);}",
    "output": "public GetPersonTrackingResult getPersonTracking(GetPersonTrackingRequest request) {request = beforeClientExecution(request);return executeGetPersonTracking(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String toFormulaString(String[] operands) {if(space.isSet(_options)) {return operands[ 0 ];} else if (optiIf.isSet(_options)) {return toFormulaString() + \"(\" + operands[0] + \")\";} else if (optiSkip.isSet(_options)) {return toFormulaString() + operands[0];   } else {return toFormulaString() + \"(\" + operands[0] + \")\";}}",
    "output": "public String ToFormulaString(String[] operands){if (space.IsSet(field_1_options)){return operands[0];}else if (optiIf.IsSet(field_1_options)){return ToFormulaString() + \"(\" + operands[0] + \")\";}else if (optiSkip.IsSet(field_1_options)){return ToFormulaString() + operands[0];   }else{return ToFormulaString() + \"(\" + operands[0] + \")\";}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public String ToFormulaString(String[] operands){if (space.IsSet(field_1_options)){return operands[0];}else if (optiIf.IsSet(field_1_options)){return ToFormulaString() + \"(\" + operands[0] + \")\";}else if (optiSkip.IsSet(field_1_options)){return ToFormulaString() + operands[0];   }else{return ToFormulaString() + \"(\" + operands[0] + \")\";}}",
    "output": "public String toFormulaString(String[] operands) {if(space.isSet(_options)) {return operands[ 0 ];} else if (optiIf.isSet(_options)) {return toFormulaString() + \"(\" + operands[0] + \")\";} else if (optiSkip.isSet(_options)) {return toFormulaString() + operands[0];   } else {return toFormulaString() + \"(\" + operands[0] + \")\";}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public T merge(T first, T second) {throw new UnsupportedOperationException();}",
    "output": "public virtual T Merge(T first, T second){throw new System.NotSupportedException();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual T Merge(T first, T second){throw new System.NotSupportedException();}",
    "output": "public T merge(T first, T second) {throw new UnsupportedOperationException();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String toString() {return this.message.getKey() + \": \" + getLocalizedMessage();}",
    "output": "public override string ToString(){return this.m_message.Key + \": \" + GetLocalizedMessage();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override string ToString(){return this.m_message.Key + \": \" + GetLocalizedMessage();}",
    "output": "public String toString() {return this.message.getKey() + \": \" + getLocalizedMessage();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public XPath(Parser parser, String path) {this.parser = parser;this.path = path;elements = split(path);}",
    "output": "public XPath(Parser parser, string path){this.parser = parser;this.path = path;elements = Split(path);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public XPath(Parser parser, string path){this.parser = parser;this.path = path;elements = Split(path);}",
    "output": "public XPath(Parser parser, String path) {this.parser = parser;this.path = path;elements = split(path);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public CreateAccountAliasRequest(String accountAlias) {setAccountAlias(accountAlias);}",
    "output": "public CreateAccountAliasRequest(string accountAlias){_accountAlias = accountAlias;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public CreateAccountAliasRequest(string accountAlias){_accountAlias = accountAlias;}",
    "output": "public CreateAccountAliasRequest(String accountAlias) {setAccountAlias(accountAlias);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void decode(byte[] blocks, int blocksOffset, long[] values, int valuesOffset, int iterations) {for (int j = 0; j < iterations; ++j) {final byte block = blocks[blocksOffset++];values[valuesOffset++] = (block >>> 7) & 1;values[valuesOffset++] = (block >>> 6) & 1;values[valuesOffset++] = (block >>> 5) & 1;values[valuesOffset++] = (block >>> 4) & 1;values[valuesOffset++] = (block >>> 3) & 1;values[valuesOffset++] = (block >>> 2) & 1;values[valuesOffset++] = (block >>> 1) & 1;values[valuesOffset++] = block & 1;}}",
    "output": "public override void Decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations){for (int j = 0; j < iterations; ++j){var block = blocks[blocksOffset++];values[valuesOffset++] = ((int)((uint)block >> 7)) & 1;values[valuesOffset++] = ((int)((uint)block >> 6)) & 1;values[valuesOffset++] = ((int)((uint)block >> 5)) & 1;values[valuesOffset++] = ((int)((uint)block >> 4)) & 1;values[valuesOffset++] = ((int)((uint)block >> 3)) & 1;values[valuesOffset++] = ((int)((uint)block >> 2)) & 1;values[valuesOffset++] = ((int)((uint)block >> 1)) & 1;values[valuesOffset++] = block & 1;}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override void Decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations){for (int j = 0; j < iterations; ++j){var block = blocks[blocksOffset++];values[valuesOffset++] = ((int)((uint)block >> 7)) & 1;values[valuesOffset++] = ((int)((uint)block >> 6)) & 1;values[valuesOffset++] = ((int)((uint)block >> 5)) & 1;values[valuesOffset++] = ((int)((uint)block >> 4)) & 1;values[valuesOffset++] = ((int)((uint)block >> 3)) & 1;values[valuesOffset++] = ((int)((uint)block >> 2)) & 1;values[valuesOffset++] = ((int)((uint)block >> 1)) & 1;values[valuesOffset++] = block & 1;}}",
    "output": "public void decode(byte[] blocks, int blocksOffset, long[] values, int valuesOffset, int iterations) {for (int j = 0; j < iterations; ++j) {final byte block = blocks[blocksOffset++];values[valuesOffset++] = (block >>> 7) & 1;values[valuesOffset++] = (block >>> 6) & 1;values[valuesOffset++] = (block >>> 5) & 1;values[valuesOffset++] = (block >>> 4) & 1;values[valuesOffset++] = (block >>> 3) & 1;values[valuesOffset++] = (block >>> 2) & 1;values[valuesOffset++] = (block >>> 1) & 1;values[valuesOffset++] = block & 1;}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public PushConnection openPush() throws TransportException {return new TcpPushConnection();}",
    "output": "public override PushConnection OpenPush(){throw new NGit.Errors.NotSupportedException(JGitText.Get().pushIsNotSupportedForBundleTransport);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override PushConnection OpenPush(){throw new NGit.Errors.NotSupportedException(JGitText.Get().pushIsNotSupportedForBundleTransport);}",
    "output": "public PushConnection openPush() throws TransportException {return new TcpPushConnection();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public static void strcpy(char[] dst, int di, char[] src, int si) {while (src[si] != 0) {dst[di++] = src[si++];}dst[di] = 0;}",
    "output": "public static void StrCpy(char[] dst, int di, char[] src, int si){while (src[si] != 0){dst[di++] = src[si++];}dst[di] = (char)0;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public static void StrCpy(char[] dst, int di, char[] src, int si){while (src[si] != 0){dst[di++] = src[si++];}dst[di] = (char)0;}",
    "output": "public static void strcpy(char[] dst, int di, char[] src, int si) {while (src[si] != 0) {dst[di++] = src[si++];}dst[di] = 0;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "@Override public K getKey() {return mapEntry.getKey();}",
    "output": "public virtual K getKey(){return mapEntry.getKey();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual K getKey(){return mapEntry.getKey();}",
    "output": "@Override public K getKey() {return mapEntry.getKey();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public static int numNonnull(Object[] data) {int n = 0;if ( data == null ) return n;for (Object o : data) {if ( o!=null ) n++;}return n;}",
    "output": "public static int NumNonnull(object[] data){int n = 0;if (data == null){return n;}foreach (object o in data){if (o != null){n++;}}return n;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public static int NumNonnull(object[] data){int n = 0;if (data == null){return n;}foreach (object o in data){if (o != null){n++;}}return n;}",
    "output": "public static int numNonnull(Object[] data) {int n = 0;if ( data == null ) return n;for (Object o : data) {if ( o!=null ) n++;}return n;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void add(int location, E object) {if (location >= 0 && location <= size) {Link<E> link = voidLink;if (location < (size / 2)) {for (int i = 0; i <= location; i++) {link = link.next;}} else {for (int i = size; i > location; i--) {link = link.previous;}}Link<E> previous = link.previous;Link<E> newLink = new Link<E>(object, previous, link);previous.next = newLink;link.previous = newLink;size++;modCount++;} else {throw new IndexOutOfBoundsException();}}",
    "output": "public override void add(int location, E @object){if (location >= 0 && location <= _size){java.util.LinkedList.Link<E> link = voidLink;if (location < (_size / 2)){{for (int i = 0; i <= location; i++){link = link.next;}}}else{{for (int i = _size; i > location; i--){link = link.previous;}}}java.util.LinkedList.Link<E> previous = link.previous;java.util.LinkedList.Link<E> newLink = new java.util.LinkedList.Link<E>(@object,previous, link);previous.next = newLink;link.previous = newLink;_size++;modCount++;}else{throw new System.IndexOutOfRangeException();}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override void add(int location, E @object){if (location >= 0 && location <= _size){java.util.LinkedList.Link<E> link = voidLink;if (location < (_size / 2)){{for (int i = 0; i <= location; i++){link = link.next;}}}else{{for (int i = _size; i > location; i--){link = link.previous;}}}java.util.LinkedList.Link<E> previous = link.previous;java.util.LinkedList.Link<E> newLink = new java.util.LinkedList.Link<E>(@object,previous, link);previous.next = newLink;link.previous = newLink;_size++;modCount++;}else{throw new System.IndexOutOfRangeException();}}",
    "output": "public void add(int location, E object) {if (location >= 0 && location <= size) {Link<E> link = voidLink;if (location < (size / 2)) {for (int i = 0; i <= location; i++) {link = link.next;}} else {for (int i = size; i > location; i--) {link = link.previous;}}Link<E> previous = link.previous;Link<E> newLink = new Link<E>(object, previous, link);previous.next = newLink;link.previous = newLink;size++;modCount++;} else {throw new IndexOutOfBoundsException();}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DescribeDomainResult describeDomain(DescribeDomainRequest request) {request = beforeClientExecution(request);return executeDescribeDomain(request);}",
    "output": "public virtual DescribeDomainResponse DescribeDomain(DescribeDomainRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDomainRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDomainResponseUnmarshaller.Instance;return Invoke<DescribeDomainResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DescribeDomainResponse DescribeDomain(DescribeDomainRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDomainRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDomainResponseUnmarshaller.Instance;return Invoke<DescribeDomainResponse>(request, options);}",
    "output": "public DescribeDomainResult describeDomain(DescribeDomainRequest request) {request = beforeClientExecution(request);return executeDescribeDomain(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void flush() throws IOException {super.flush();}",
    "output": "public override void flush(){throw new System.NotImplementedException();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override void flush(){throw new System.NotImplementedException();}",
    "output": "public void flush() throws IOException {super.flush();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public PersianCharFilterFactory(Map<String,String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException(\"Unknown parameters: \" + args);}}",
    "output": "public PersianCharFilterFactory(IDictionary<string, string> args): base(args){if (args.Count > 0){throw new System.ArgumentException(\"Unknown parameters: \" + args);}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public PersianCharFilterFactory(IDictionary<string, string> args): base(args){if (args.Count > 0){throw new System.ArgumentException(\"Unknown parameters: \" + args);}}",
    "output": "public PersianCharFilterFactory(Map<String,String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException(\"Unknown parameters: \" + args);}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public boolean incrementToken() {if (used) {return false;}clearAttributes();termAttribute.append(value);offsetAttribute.setOffset(0, length);used = true;return true;}",
    "output": "public override bool IncrementToken(){if (used){return false;}ClearAttributes();termAttribute.Append(value);offsetAttribute.SetOffset(0, value.Length);used = true;return true;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override bool IncrementToken(){if (used){return false;}ClearAttributes();termAttribute.Append(value);offsetAttribute.SetOffset(0, value.Length);used = true;return true;}",
    "output": "public boolean incrementToken() {if (used) {return false;}clearAttributes();termAttribute.append(value);offsetAttribute.setOffset(0, length);used = true;return true;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public static FloatBuffer allocate(int capacity) {if (capacity < 0) {throw new IllegalArgumentException();}return new ReadWriteFloatArrayBuffer(capacity);}",
    "output": "public static java.nio.FloatBuffer allocate(int capacity_1){if (capacity_1 < 0){throw new System.ArgumentException();}return new java.nio.ReadWriteFloatArrayBuffer(capacity_1);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public static java.nio.FloatBuffer allocate(int capacity_1){if (capacity_1 < 0){throw new System.ArgumentException();}return new java.nio.ReadWriteFloatArrayBuffer(capacity_1);}",
    "output": "public static FloatBuffer allocate(int capacity) {if (capacity < 0) {throw new IllegalArgumentException();}return new ReadWriteFloatArrayBuffer(capacity);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public final Edit after(Edit cut) {return new Edit(cut.endA, endA, cut.endB, endB);}",
    "output": "public NGit.Diff.Edit After(NGit.Diff.Edit cut){return new NGit.Diff.Edit(cut.endA, endA, cut.endB, endB);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public NGit.Diff.Edit After(NGit.Diff.Edit cut){return new NGit.Diff.Edit(cut.endA, endA, cut.endB, endB);}",
    "output": "public final Edit after(Edit cut) {return new Edit(cut.endA, endA, cut.endB, endB);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public UpdateRuleVersionResult updateRuleVersion(UpdateRuleVersionRequest request) {request = beforeClientExecution(request);return executeUpdateRuleVersion(request);}",
    "output": "public virtual UpdateRuleVersionResponse UpdateRuleVersion(UpdateRuleVersionRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateRuleVersionRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateRuleVersionResponseUnmarshaller.Instance;return Invoke<UpdateRuleVersionResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual UpdateRuleVersionResponse UpdateRuleVersion(UpdateRuleVersionRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateRuleVersionRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateRuleVersionResponseUnmarshaller.Instance;return Invoke<UpdateRuleVersionResponse>(request, options);}",
    "output": "public UpdateRuleVersionResult updateRuleVersion(UpdateRuleVersionRequest request) {request = beforeClientExecution(request);return executeUpdateRuleVersion(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ListVoiceConnectorTerminationCredentialsResult listVoiceConnectorTerminationCredentials(ListVoiceConnectorTerminationCredentialsRequest request) {request = beforeClientExecution(request);return executeListVoiceConnectorTerminationCredentials(request);}",
    "output": "public virtual ListVoiceConnectorTerminationCredentialsResponse ListVoiceConnectorTerminationCredentials(ListVoiceConnectorTerminationCredentialsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListVoiceConnectorTerminationCredentialsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListVoiceConnectorTerminationCredentialsResponseUnmarshaller.Instance;return Invoke<ListVoiceConnectorTerminationCredentialsResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual ListVoiceConnectorTerminationCredentialsResponse ListVoiceConnectorTerminationCredentials(ListVoiceConnectorTerminationCredentialsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListVoiceConnectorTerminationCredentialsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListVoiceConnectorTerminationCredentialsResponseUnmarshaller.Instance;return Invoke<ListVoiceConnectorTerminationCredentialsResponse>(request, options);}",
    "output": "public ListVoiceConnectorTerminationCredentialsResult listVoiceConnectorTerminationCredentials(ListVoiceConnectorTerminationCredentialsRequest request) {request = beforeClientExecution(request);return executeListVoiceConnectorTerminationCredentials(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public GetDeploymentTargetResult getDeploymentTarget(GetDeploymentTargetRequest request) {request = beforeClientExecution(request);return executeGetDeploymentTarget(request);}",
    "output": "public virtual GetDeploymentTargetResponse GetDeploymentTarget(GetDeploymentTargetRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetDeploymentTargetRequestMarshaller.Instance;options.ResponseUnmarshaller = GetDeploymentTargetResponseUnmarshaller.Instance;return Invoke<GetDeploymentTargetResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual GetDeploymentTargetResponse GetDeploymentTarget(GetDeploymentTargetRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetDeploymentTargetRequestMarshaller.Instance;options.ResponseUnmarshaller = GetDeploymentTargetResponseUnmarshaller.Instance;return Invoke<GetDeploymentTargetResponse>(request, options);}",
    "output": "public GetDeploymentTargetResult getDeploymentTarget(GetDeploymentTargetRequest request) {request = beforeClientExecution(request);return executeGetDeploymentTarget(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void setNoChildReport() {letChildReport  = false;for (final PerfTask task : tasks) {if (task instanceof TaskSequence) {((TaskSequence)task).setNoChildReport();}}}",
    "output": "public virtual void SetNoChildReport(){letChildReport = false;foreach (PerfTask task in tasks){if (task is TaskSequence){((TaskSequence)task).SetNoChildReport();}}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual void SetNoChildReport(){letChildReport = false;foreach (PerfTask task in tasks){if (task is TaskSequence){((TaskSequence)task).SetNoChildReport();}}}",
    "output": "public void setNoChildReport() {letChildReport  = false;for (final PerfTask task : tasks) {if (task instanceof TaskSequence) {((TaskSequence)task).setNoChildReport();}}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public E get(int location) {try {return a[location];} catch (ArrayIndexOutOfBoundsException e) {throw java.util.ArrayList.throwIndexOutOfBoundsException(location, a.length);}}",
    "output": "public override E get(int location){try{return a[location];}catch (System.IndexOutOfRangeException){throw java.util.ArrayList<E>.throwIndexOutOfBoundsException(location, a.Length);}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override E get(int location){try{return a[location];}catch (System.IndexOutOfRangeException){throw java.util.ArrayList<E>.throwIndexOutOfBoundsException(location, a.Length);}}",
    "output": "public E get(int location) {try {return a[location];} catch (ArrayIndexOutOfBoundsException e) {throw java.util.ArrayList.throwIndexOutOfBoundsException(location, a.length);}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DescribeDataSetResult describeDataSet(DescribeDataSetRequest request) {request = beforeClientExecution(request);return executeDescribeDataSet(request);}",
    "output": "public virtual DescribeDataSetResponse DescribeDataSet(DescribeDataSetRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDataSetRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDataSetResponseUnmarshaller.Instance;return Invoke<DescribeDataSetResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DescribeDataSetResponse DescribeDataSet(DescribeDataSetRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDataSetRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDataSetResponseUnmarshaller.Instance;return Invoke<DescribeDataSetResponse>(request, options);}",
    "output": "public DescribeDataSetResult describeDataSet(DescribeDataSetRequest request) {request = beforeClientExecution(request);return executeDescribeDataSet(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public SkipWorkTreeFilter(int treeIdx) {this.treeIdx = treeIdx;}",
    "output": "public SkipWorkTreeFilter(int treeIdx){this.treeIdx = treeIdx;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public SkipWorkTreeFilter(int treeIdx){this.treeIdx = treeIdx;}",
    "output": "public SkipWorkTreeFilter(int treeIdx) {this.treeIdx = treeIdx;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DescribeNetworkInterfacesResult describeNetworkInterfaces() {return describeNetworkInterfaces(new DescribeNetworkInterfacesRequest());}",
    "output": "public virtual DescribeNetworkInterfacesResponse DescribeNetworkInterfaces(){return DescribeNetworkInterfaces(new DescribeNetworkInterfacesRequest());}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DescribeNetworkInterfacesResponse DescribeNetworkInterfaces(){return DescribeNetworkInterfaces(new DescribeNetworkInterfacesRequest());}",
    "output": "public DescribeNetworkInterfacesResult describeNetworkInterfaces() {return describeNetworkInterfaces(new DescribeNetworkInterfacesRequest());}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public final boolean contains(int row, int col) {return _firstRow <= row && _lastRow >= row&& _firstColumn <= col && _lastColumn >= col;}",
    "output": "public bool Contains(int row, int col){return _firstRow <= row && _lastRow >= row&& _firstColumn <= col && _lastColumn >= col;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public bool Contains(int row, int col){return _firstRow <= row && _lastRow >= row&& _firstColumn <= col && _lastColumn >= col;}",
    "output": "public final boolean contains(int row, int col) {return _firstRow <= row && _lastRow >= row&& _firstColumn <= col && _lastColumn >= col;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String toString() {return new String(this.chars);}",
    "output": "public override string ToString(){return new string(this.chars);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override string ToString(){return new string(this.chars);}",
    "output": "public String toString() {return new String(this.chars);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public PatchType getPatchType() {return patchType;}",
    "output": "public virtual FileHeader.PatchType GetPatchType(){return patchType;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual FileHeader.PatchType GetPatchType(){return patchType;}",
    "output": "public PatchType getPatchType() {return patchType;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public Iterator<K> iterator() {return new KeyIterator();}",
    "output": "public override java.util.Iterator<K> iterator(){return new java.util.Hashtable<K, V>.KeyIterator(this._enclosing);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override java.util.Iterator<K> iterator(){return new java.util.Hashtable<K, V>.KeyIterator(this._enclosing);}",
    "output": "public Iterator<K> iterator() {return new KeyIterator();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public CreateScriptResult createScript(CreateScriptRequest request) {request = beforeClientExecution(request);return executeCreateScript(request);}",
    "output": "public virtual CreateScriptResponse CreateScript(CreateScriptRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateScriptRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateScriptResponseUnmarshaller.Instance;return Invoke<CreateScriptResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual CreateScriptResponse CreateScript(CreateScriptRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateScriptRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateScriptResponseUnmarshaller.Instance;return Invoke<CreateScriptResponse>(request, options);}",
    "output": "public CreateScriptResult createScript(CreateScriptRequest request) {request = beforeClientExecution(request);return executeCreateScript(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public BytesRef next() {termUpto++;if (termUpto >= info.terms.size()) {return null;} else {info.terms.get(info.sortedTerms[termUpto], br);return br;}}",
    "output": "public override BytesRef Next(){termUpto++;if (termUpto >= info.terms.Count){return null;}else{info.terms.Get(info.sortedTerms[termUpto], br);return br;}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override BytesRef Next(){termUpto++;if (termUpto >= info.terms.Count){return null;}else{info.terms.Get(info.sortedTerms[termUpto], br);return br;}}",
    "output": "public BytesRef next() {termUpto++;if (termUpto >= info.terms.size()) {return null;} else {info.terms.get(info.sortedTerms[termUpto], br);return br;}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String outputToString(CharsRef output) {return output.toString();}",
    "output": "public override string OutputToString(CharsRef output){return output.ToString();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override string OutputToString(CharsRef output){return output.ToString();}",
    "output": "public String outputToString(CharsRef output) {return output.toString();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public AssociateWebsiteAuthorizationProviderResult associateWebsiteAuthorizationProvider(AssociateWebsiteAuthorizationProviderRequest request) {request = beforeClientExecution(request);return executeAssociateWebsiteAuthorizationProvider(request);}",
    "output": "public virtual AssociateWebsiteAuthorizationProviderResponse AssociateWebsiteAuthorizationProvider(AssociateWebsiteAuthorizationProviderRequest request){var options = new InvokeOptions();options.RequestMarshaller = AssociateWebsiteAuthorizationProviderRequestMarshaller.Instance;options.ResponseUnmarshaller = AssociateWebsiteAuthorizationProviderResponseUnmarshaller.Instance;return Invoke<AssociateWebsiteAuthorizationProviderResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual AssociateWebsiteAuthorizationProviderResponse AssociateWebsiteAuthorizationProvider(AssociateWebsiteAuthorizationProviderRequest request){var options = new InvokeOptions();options.RequestMarshaller = AssociateWebsiteAuthorizationProviderRequestMarshaller.Instance;options.ResponseUnmarshaller = AssociateWebsiteAuthorizationProviderResponseUnmarshaller.Instance;return Invoke<AssociateWebsiteAuthorizationProviderResponse>(request, options);}",
    "output": "public AssociateWebsiteAuthorizationProviderResult associateWebsiteAuthorizationProvider(AssociateWebsiteAuthorizationProviderRequest request) {request = beforeClientExecution(request);return executeAssociateWebsiteAuthorizationProvider(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void unpop(RevCommit c) {Block b = head;if (b == null) {b = free.newBlock();b.resetToMiddle();b.add(c);head = b;tail = b;return;} else if (b.canUnpop()) {b.unpop(c);return;}b = free.newBlock();b.resetToEnd();b.unpop(c);b.next = head;head = b;}",
    "output": "public virtual void Unpop(RevCommit c){BlockRevQueue.Block b = head;if (b == null){b = free.NewBlock();b.ResetToMiddle();b.Add(c);head = b;tail = b;return;}else{if (b.CanUnpop()){b.Unpop(c);return;}}b = free.NewBlock();b.ResetToEnd();b.Unpop(c);b.next = head;head = b;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual void Unpop(RevCommit c){BlockRevQueue.Block b = head;if (b == null){b = free.NewBlock();b.ResetToMiddle();b.Add(c);head = b;tail = b;return;}else{if (b.CanUnpop()){b.Unpop(c);return;}}b = free.NewBlock();b.ResetToEnd();b.Unpop(c);b.next = head;head = b;}",
    "output": "public void unpop(RevCommit c) {Block b = head;if (b == null) {b = free.newBlock();b.resetToMiddle();b.add(c);head = b;tail = b;return;} else if (b.canUnpop()) {b.unpop(c);return;}b = free.newBlock();b.resetToEnd();b.unpop(c);b.next = head;head = b;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public EdgeNGramTokenizerFactory(Map<String, String> args) {super(args);minGramSize = getInt(args, \"minGramSize\", EdgeNGramTokenizer.DEFAULT_MIN_GRAM_SIZE);maxGramSize = getInt(args, \"maxGramSize\", EdgeNGramTokenizer.DEFAULT_MAX_GRAM_SIZE);if (!args.isEmpty()) {throw new IllegalArgumentException(\"Unknown parameters: \" + args);}}",
    "output": "public EdgeNGramTokenizerFactory(IDictionary<string, string> args) : base(args){minGramSize = GetInt32(args, \"minGramSize\", EdgeNGramTokenizer.DEFAULT_MIN_GRAM_SIZE);maxGramSize = GetInt32(args, \"maxGramSize\", EdgeNGramTokenizer.DEFAULT_MAX_GRAM_SIZE);side = Get(args, \"side\", EdgeNGramTokenFilter.Side.FRONT.ToString());if (args.Count > 0){throw new System.ArgumentException(\"Unknown parameters: \" + args);}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public EdgeNGramTokenizerFactory(IDictionary<string, string> args) : base(args){minGramSize = GetInt32(args, \"minGramSize\", EdgeNGramTokenizer.DEFAULT_MIN_GRAM_SIZE);maxGramSize = GetInt32(args, \"maxGramSize\", EdgeNGramTokenizer.DEFAULT_MAX_GRAM_SIZE);side = Get(args, \"side\", EdgeNGramTokenFilter.Side.FRONT.ToString());if (args.Count > 0){throw new System.ArgumentException(\"Unknown parameters: \" + args);}}",
    "output": "public EdgeNGramTokenizerFactory(Map<String, String> args) {super(args);minGramSize = getInt(args, \"minGramSize\", EdgeNGramTokenizer.DEFAULT_MIN_GRAM_SIZE);maxGramSize = getInt(args, \"maxGramSize\", EdgeNGramTokenizer.DEFAULT_MAX_GRAM_SIZE);if (!args.isEmpty()) {throw new IllegalArgumentException(\"Unknown parameters: \" + args);}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ModifyDBParameterGroupRequest(String dBParameterGroupName, java.util.List<Parameter> parameters) {setDBParameterGroupName(dBParameterGroupName);setParameters(parameters);}",
    "output": "public ModifyDBParameterGroupRequest(string dbParameterGroupName, List<Parameter> parameters){_dbParameterGroupName = dbParameterGroupName;_parameters = parameters;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public ModifyDBParameterGroupRequest(string dbParameterGroupName, List<Parameter> parameters){_dbParameterGroupName = dbParameterGroupName;_parameters = parameters;}",
    "output": "public ModifyDBParameterGroupRequest(String dBParameterGroupName, java.util.List<Parameter> parameters) {setDBParameterGroupName(dBParameterGroupName);setParameters(parameters);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public GetHostedZoneLimitResult getHostedZoneLimit(GetHostedZoneLimitRequest request) {request = beforeClientExecution(request);return executeGetHostedZoneLimit(request);}",
    "output": "public virtual GetHostedZoneLimitResponse GetHostedZoneLimit(GetHostedZoneLimitRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetHostedZoneLimitRequestMarshaller.Instance;options.ResponseUnmarshaller = GetHostedZoneLimitResponseUnmarshaller.Instance;return Invoke<GetHostedZoneLimitResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual GetHostedZoneLimitResponse GetHostedZoneLimit(GetHostedZoneLimitRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetHostedZoneLimitRequestMarshaller.Instance;options.ResponseUnmarshaller = GetHostedZoneLimitResponseUnmarshaller.Instance;return Invoke<GetHostedZoneLimitResponse>(request, options);}",
    "output": "public GetHostedZoneLimitResult getHostedZoneLimit(GetHostedZoneLimitRequest request) {request = beforeClientExecution(request);return executeGetHostedZoneLimit(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void set(int index, long value) {final int o = index >>> 6;final int b = index & 63;final int shift = b << 0;blocks[o] = (blocks[o] & ~(1L << shift)) | (value << shift);}",
    "output": "public override void Set(int index, long value){int o = (int)((uint)index >> 6);int b = index & 63;int shift = b << 0;blocks[o] = (blocks[o] & ~(1L << shift)) | (value << shift);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override void Set(int index, long value){int o = (int)((uint)index >> 6);int b = index & 63;int shift = b << 0;blocks[o] = (blocks[o] & ~(1L << shift)) | (value << shift);}",
    "output": "public void set(int index, long value) {final int o = index >>> 6;final int b = index & 63;final int shift = b << 0;blocks[o] = (blocks[o] & ~(1L << shift)) | (value << shift);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public RevFilter clone() {return new PatternSearch(pattern());}",
    "output": "public override RevFilter Clone(){return new CommitterRevFilter.PatternSearch(Pattern());}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override RevFilter Clone(){return new CommitterRevFilter.PatternSearch(Pattern());}",
    "output": "public RevFilter clone() {return new PatternSearch(pattern());}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String toString() {return \"spans(\" + term.toString() + \")@\" +(doc == -1 ? \"START\" : (doc == NO_MORE_DOCS) ? \"ENDDOC\": doc + \" - \" + (position == NO_MORE_POSITIONS ? \"ENDPOS\" : position));}",
    "output": "public override string ToString(){return \"spans(\" + m_term.ToString() + \")@\" + (m_doc == -1 ? \"START\" : (m_doc == int.MaxValue) ? \"END\" : m_doc + \"-\" + m_position);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override string ToString(){return \"spans(\" + m_term.ToString() + \")@\" + (m_doc == -1 ? \"START\" : (m_doc == int.MaxValue) ? \"END\" : m_doc + \"-\" + m_position);}",
    "output": "public String toString() {return \"spans(\" + term.toString() + \")@\" +(doc == -1 ? \"START\" : (doc == NO_MORE_DOCS) ? \"ENDDOC\": doc + \" - \" + (position == NO_MORE_POSITIONS ? \"ENDPOS\" : position));}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public boolean canAppendMatch() {for (Head head : heads) {if (head != LastHead.INSTANCE) {return true;}}return false;}",
    "output": "public virtual bool CanAppendMatch(){for (int i = 0; i < heads.Count; i++){if (heads[i] != LastHead.INSTANCE){return true;}}return false;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual bool CanAppendMatch(){for (int i = 0; i < heads.Count; i++){if (heads[i] != LastHead.INSTANCE){return true;}}return false;}",
    "output": "public boolean canAppendMatch() {for (Head head : heads) {if (head != LastHead.INSTANCE) {return true;}}return false;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public synchronized int lastIndexOf(String subString, int start) {return super.lastIndexOf(subString, start);}",
    "output": "public override int lastIndexOf(string subString, int start){lock (this){return base.lastIndexOf(subString, start);}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override int lastIndexOf(string subString, int start){lock (this){return base.lastIndexOf(subString, start);}}",
    "output": "public synchronized int lastIndexOf(String subString, int start) {return super.lastIndexOf(subString, start);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DeleteNetworkAclEntryResult deleteNetworkAclEntry(DeleteNetworkAclEntryRequest request) {request = beforeClientExecution(request);return executeDeleteNetworkAclEntry(request);}",
    "output": "public virtual DeleteNetworkAclEntryResponse DeleteNetworkAclEntry(DeleteNetworkAclEntryRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteNetworkAclEntryRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteNetworkAclEntryResponseUnmarshaller.Instance;return Invoke<DeleteNetworkAclEntryResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DeleteNetworkAclEntryResponse DeleteNetworkAclEntry(DeleteNetworkAclEntryRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteNetworkAclEntryRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteNetworkAclEntryResponseUnmarshaller.Instance;return Invoke<DeleteNetworkAclEntryResponse>(request, options);}",
    "output": "public DeleteNetworkAclEntryResult deleteNetworkAclEntry(DeleteNetworkAclEntryRequest request) {request = beforeClientExecution(request);return executeDeleteNetworkAclEntry(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public AssociateMemberToGroupResult associateMemberToGroup(AssociateMemberToGroupRequest request) {request = beforeClientExecution(request);return executeAssociateMemberToGroup(request);}",
    "output": "public virtual AssociateMemberToGroupResponse AssociateMemberToGroup(AssociateMemberToGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = AssociateMemberToGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = AssociateMemberToGroupResponseUnmarshaller.Instance;return Invoke<AssociateMemberToGroupResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual AssociateMemberToGroupResponse AssociateMemberToGroup(AssociateMemberToGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = AssociateMemberToGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = AssociateMemberToGroupResponseUnmarshaller.Instance;return Invoke<AssociateMemberToGroupResponse>(request, options);}",
    "output": "public AssociateMemberToGroupResult associateMemberToGroup(AssociateMemberToGroupRequest request) {request = beforeClientExecution(request);return executeAssociateMemberToGroup(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public static final int committer(byte[] b, int ptr) {final int sz = b.length;if (ptr == 0)ptr += 46; while (ptr < sz && b[ptr] == 'p')ptr += 48; if (ptr < sz && b[ptr] == 'a')ptr = nextLF(b, ptr);return match(b, ptr, committer);}",
    "output": "public static int Committer(byte[] b, int ptr){int sz = b.Length;if (ptr == 0){ptr += 46;}while (ptr < sz && b[ptr] == 'p'){ptr += 48;}if (ptr < sz && b[ptr] == 'a'){ptr = NextLF(b, ptr);}return Match(b, ptr, ObjectChecker.committer);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public static int Committer(byte[] b, int ptr){int sz = b.Length;if (ptr == 0){ptr += 46;}while (ptr < sz && b[ptr] == 'p'){ptr += 48;}if (ptr < sz && b[ptr] == 'a'){ptr = NextLF(b, ptr);}return Match(b, ptr, ObjectChecker.committer);}",
    "output": "public static final int committer(byte[] b, int ptr) {final int sz = b.length;if (ptr == 0)ptr += 46; while (ptr < sz && b[ptr] == 'p')ptr += 48; if (ptr < sz && b[ptr] == 'a')ptr = nextLF(b, ptr);return match(b, ptr, committer);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public int getLineNumber() { return row; }",
    "output": "public virtual int getLineNumber(){return row;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual int getLineNumber(){return row;}",
    "output": "public int getLineNumber() { return row; }"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public SubmoduleUpdateCommand addPath(String path) {paths.add(path);return this;}",
    "output": "public virtual NGit.Api.SubmoduleUpdateCommand AddPath(string path){paths.AddItem(path);return this;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual NGit.Api.SubmoduleUpdateCommand AddPath(string path){paths.AddItem(path);return this;}",
    "output": "public SubmoduleUpdateCommand addPath(String path) {paths.add(path);return this;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public GetPushTemplateResult getPushTemplate(GetPushTemplateRequest request) {request = beforeClientExecution(request);return executeGetPushTemplate(request);}",
    "output": "public virtual GetPushTemplateResponse GetPushTemplate(GetPushTemplateRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetPushTemplateRequestMarshaller.Instance;options.ResponseUnmarshaller = GetPushTemplateResponseUnmarshaller.Instance;return Invoke<GetPushTemplateResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual GetPushTemplateResponse GetPushTemplate(GetPushTemplateRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetPushTemplateRequestMarshaller.Instance;options.ResponseUnmarshaller = GetPushTemplateResponseUnmarshaller.Instance;return Invoke<GetPushTemplateResponse>(request, options);}",
    "output": "public GetPushTemplateResult getPushTemplate(GetPushTemplateRequest request) {request = beforeClientExecution(request);return executeGetPushTemplate(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DescribeVaultResult describeVault(DescribeVaultRequest request) {request = beforeClientExecution(request);return executeDescribeVault(request);}",
    "output": "public virtual DescribeVaultResponse DescribeVault(DescribeVaultRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeVaultRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeVaultResponseUnmarshaller.Instance;return Invoke<DescribeVaultResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DescribeVaultResponse DescribeVault(DescribeVaultRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeVaultRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeVaultResponseUnmarshaller.Instance;return Invoke<DescribeVaultResponse>(request, options);}",
    "output": "public DescribeVaultResult describeVault(DescribeVaultRequest request) {request = beforeClientExecution(request);return executeDescribeVault(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DescribeVpcPeeringConnectionsResult describeVpcPeeringConnections() {return describeVpcPeeringConnections(new DescribeVpcPeeringConnectionsRequest());}",
    "output": "public virtual DescribeVpcPeeringConnectionsResponse DescribeVpcPeeringConnections(){return DescribeVpcPeeringConnections(new DescribeVpcPeeringConnectionsRequest());}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DescribeVpcPeeringConnectionsResponse DescribeVpcPeeringConnections(){return DescribeVpcPeeringConnections(new DescribeVpcPeeringConnectionsRequest());}",
    "output": "public DescribeVpcPeeringConnectionsResult describeVpcPeeringConnections() {return describeVpcPeeringConnections(new DescribeVpcPeeringConnectionsRequest());}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ByteBuffer putLong(int index, long value) {throw new ReadOnlyBufferException();}",
    "output": "public override java.nio.ByteBuffer putLong(int index, long value){throw new System.NotImplementedException();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override java.nio.ByteBuffer putLong(int index, long value){throw new System.NotImplementedException();}",
    "output": "public ByteBuffer putLong(int index, long value) {throw new ReadOnlyBufferException();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public RegisterDeviceResult registerDevice(RegisterDeviceRequest request) {request = beforeClientExecution(request);return executeRegisterDevice(request);}",
    "output": "public virtual RegisterDeviceResponse RegisterDevice(RegisterDeviceRequest request){var options = new InvokeOptions();options.RequestMarshaller = RegisterDeviceRequestMarshaller.Instance;options.ResponseUnmarshaller = RegisterDeviceResponseUnmarshaller.Instance;return Invoke<RegisterDeviceResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual RegisterDeviceResponse RegisterDevice(RegisterDeviceRequest request){var options = new InvokeOptions();options.RequestMarshaller = RegisterDeviceRequestMarshaller.Instance;options.ResponseUnmarshaller = RegisterDeviceResponseUnmarshaller.Instance;return Invoke<RegisterDeviceResponse>(request, options);}",
    "output": "public RegisterDeviceResult registerDevice(RegisterDeviceRequest request) {request = beforeClientExecution(request);return executeRegisterDevice(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public static Format byId(int id) {for (Format format : Format.values()) {if (format.getId() == id) {return format;}}throw new IllegalArgumentException(\"Unknown format id: \" + id);}",
    "output": "public static Format ById(int id){foreach (Format format in Values){if (format.Id == id){return format;}}throw new ArgumentException(\"Unknown format id: \" + id);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public static Format ById(int id){foreach (Format format in Values){if (format.Id == id){return format;}}throw new ArgumentException(\"Unknown format id: \" + id);}",
    "output": "public static Format byId(int id) {for (Format format : Format.values()) {if (format.getId() == id) {return format;}}throw new IllegalArgumentException(\"Unknown format id: \" + id);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DeleteAppResult deleteApp(DeleteAppRequest request) {request = beforeClientExecution(request);return executeDeleteApp(request);}",
    "output": "public virtual DeleteAppResponse DeleteApp(DeleteAppRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteAppRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteAppResponseUnmarshaller.Instance;return Invoke<DeleteAppResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DeleteAppResponse DeleteApp(DeleteAppRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteAppRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteAppResponseUnmarshaller.Instance;return Invoke<DeleteAppResponse>(request, options);}",
    "output": "public DeleteAppResult deleteApp(DeleteAppRequest request) {request = beforeClientExecution(request);return executeDeleteApp(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public GetBaiduChannelResult getBaiduChannel(GetBaiduChannelRequest request) {request = beforeClientExecution(request);return executeGetBaiduChannel(request);}",
    "output": "public virtual GetBaiduChannelResponse GetBaiduChannel(GetBaiduChannelRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetBaiduChannelRequestMarshaller.Instance;options.ResponseUnmarshaller = GetBaiduChannelResponseUnmarshaller.Instance;return Invoke<GetBaiduChannelResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual GetBaiduChannelResponse GetBaiduChannel(GetBaiduChannelRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetBaiduChannelRequestMarshaller.Instance;options.ResponseUnmarshaller = GetBaiduChannelResponseUnmarshaller.Instance;return Invoke<GetBaiduChannelResponse>(request, options);}",
    "output": "public GetBaiduChannelResult getBaiduChannel(GetBaiduChannelRequest request) {request = beforeClientExecution(request);return executeGetBaiduChannel(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public FST.BytesReader getBytesReader() {return fst.getBytesReader();}",
    "output": "public FST.BytesReader GetBytesReader(){return fst.GetBytesReader();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public FST.BytesReader GetBytesReader(){return fst.GetBytesReader();}",
    "output": "public FST.BytesReader getBytesReader() {return fst.getBytesReader();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public static boolean isValidSchemeChar(int index, char c) {if ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')) {return true;}if (index > 0 && ((c >= '0' && c <= '9') || c == '+' || c == '-' || c == '.')) {return true;}return false;}",
    "output": "public static bool isValidSchemeChar(int index, char c){if ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')){return true;}if (index > 0 && ((c >= '0' && c <= '9') || c == '+' || c == '-' || c == '.')){return true;}return false;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public static bool isValidSchemeChar(int index, char c){if ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')){return true;}if (index > 0 && ((c >= '0' && c <= '9') || c == '+' || c == '-' || c == '.')){return true;}return false;}",
    "output": "public static boolean isValidSchemeChar(int index, char c) {if ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')) {return true;}if (index > 0 && ((c >= '0' && c <= '9') || c == '+' || c == '-' || c == '.')) {return true;}return false;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ListAppliedSchemaArnsResult listAppliedSchemaArns(ListAppliedSchemaArnsRequest request) {request = beforeClientExecution(request);return executeListAppliedSchemaArns(request);}",
    "output": "public virtual ListAppliedSchemaArnsResponse ListAppliedSchemaArns(ListAppliedSchemaArnsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListAppliedSchemaArnsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListAppliedSchemaArnsResponseUnmarshaller.Instance;return Invoke<ListAppliedSchemaArnsResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual ListAppliedSchemaArnsResponse ListAppliedSchemaArns(ListAppliedSchemaArnsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListAppliedSchemaArnsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListAppliedSchemaArnsResponseUnmarshaller.Instance;return Invoke<ListAppliedSchemaArnsResponse>(request, options);}",
    "output": "public ListAppliedSchemaArnsResult listAppliedSchemaArns(ListAppliedSchemaArnsRequest request) {request = beforeClientExecution(request);return executeListAppliedSchemaArns(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String name() {return this.name;}",
    "output": "public System.Uri BaseUri { get; set; }"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public System.Uri BaseUri { get; set; }",
    "output": "public String name() {return this.name;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ValueEval evaluate(ValueEval[] args, OperationEvaluationContext ec) {if (args.length < 1) {return ErrorEval.VALUE_INVALID;}boolean isA1style;String text;try {ValueEval ve = OperandResolver.getSingleValue(args[0], ec.getRowIndex(), ec.getColumnIndex());text = OperandResolver.coerceValueToString(ve);switch (args.length) {case 1:isA1style = true;break;case 2:isA1style = evaluateBooleanArg(args[1], ec);break;default:return ErrorEval.VALUE_INVALID;}} catch (EvaluationException e) {return e.getErrorEval();}return evaluateIndirect(ec, text, isA1style);}",
    "output": "public ValueEval Evaluate(ValueEval[] args, OperationEvaluationContext ec){if (args.Length < 1){return ErrorEval.VALUE_INVALID;}bool isA1style;String text;try{ValueEval ve = OperandResolver.GetSingleValue(args[0], ec.RowIndex, ec.ColumnIndex);text = OperandResolver.CoerceValueToString(ve);switch (args.Length){case 1:isA1style = true;break;case 2:isA1style = EvaluateBooleanArg(args[1], ec);break;default:return ErrorEval.VALUE_INVALID;}}catch (EvaluationException e){return e.GetErrorEval();}return EvaluateIndirect(ec, text, isA1style);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public ValueEval Evaluate(ValueEval[] args, OperationEvaluationContext ec){if (args.Length < 1){return ErrorEval.VALUE_INVALID;}bool isA1style;String text;try{ValueEval ve = OperandResolver.GetSingleValue(args[0], ec.RowIndex, ec.ColumnIndex);text = OperandResolver.CoerceValueToString(ve);switch (args.Length){case 1:isA1style = true;break;case 2:isA1style = EvaluateBooleanArg(args[1], ec);break;default:return ErrorEval.VALUE_INVALID;}}catch (EvaluationException e){return e.GetErrorEval();}return EvaluateIndirect(ec, text, isA1style);}",
    "output": "public ValueEval evaluate(ValueEval[] args, OperationEvaluationContext ec) {if (args.length < 1) {return ErrorEval.VALUE_INVALID;}boolean isA1style;String text;try {ValueEval ve = OperandResolver.getSingleValue(args[0], ec.getRowIndex(), ec.getColumnIndex());text = OperandResolver.coerceValueToString(ve);switch (args.length) {case 1:isA1style = true;break;case 2:isA1style = evaluateBooleanArg(args[1], ec);break;default:return ErrorEval.VALUE_INVALID;}} catch (EvaluationException e) {return e.getErrorEval();}return evaluateIndirect(ec, text, isA1style);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public final int compareTo(int[] bs, int p) {int cmp;cmp = NB.compareUInt32(w1, bs[p]);if (cmp != 0)return cmp;cmp = NB.compareUInt32(w2, bs[p + 1]);if (cmp != 0)return cmp;cmp = NB.compareUInt32(w3, bs[p + 2]);if (cmp != 0)return cmp;cmp = NB.compareUInt32(w4, bs[p + 3]);if (cmp != 0)return cmp;return NB.compareUInt32(w5, bs[p + 4]);}",
    "output": "public int CompareTo(int[] bs, int p){int cmp;cmp = NB.CompareUInt32(w1, bs[p]);if (cmp != 0){return cmp;}cmp = NB.CompareUInt32(w2, bs[p + 1]);if (cmp != 0){return cmp;}cmp = NB.CompareUInt32(w3, bs[p + 2]);if (cmp != 0){return cmp;}cmp = NB.CompareUInt32(w4, bs[p + 3]);if (cmp != 0){return cmp;}return NB.CompareUInt32(w5, bs[p + 4]);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public int CompareTo(int[] bs, int p){int cmp;cmp = NB.CompareUInt32(w1, bs[p]);if (cmp != 0){return cmp;}cmp = NB.CompareUInt32(w2, bs[p + 1]);if (cmp != 0){return cmp;}cmp = NB.CompareUInt32(w3, bs[p + 2]);if (cmp != 0){return cmp;}cmp = NB.CompareUInt32(w4, bs[p + 3]);if (cmp != 0){return cmp;}return NB.CompareUInt32(w5, bs[p + 4]);}",
    "output": "public final int compareTo(int[] bs, int p) {int cmp;cmp = NB.compareUInt32(w1, bs[p]);if (cmp != 0)return cmp;cmp = NB.compareUInt32(w2, bs[p + 1]);if (cmp != 0)return cmp;cmp = NB.compareUInt32(w3, bs[p + 2]);if (cmp != 0)return cmp;cmp = NB.compareUInt32(w4, bs[p + 3]);if (cmp != 0)return cmp;return NB.compareUInt32(w5, bs[p + 4]);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void removeName(int index){names.remove(index);workbook.removeName(index);}",
    "output": "public void RemoveName(int index){names.RemoveAt(index);workbook.RemoveName(index);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public void RemoveName(int index){names.RemoveAt(index);workbook.RemoveName(index);}",
    "output": "public void removeName(int index){names.remove(index);workbook.removeName(index);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public GetQueueAttributesRequest(String queueUrl, java.util.List<String> attributeNames) {setQueueUrl(queueUrl);setAttributeNames(attributeNames);}",
    "output": "public GetQueueAttributesRequest(string queueUrl, List<string> attributeNames){_queueUrl = queueUrl;_attributeNames = attributeNames;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public GetQueueAttributesRequest(string queueUrl, List<string> attributeNames){_queueUrl = queueUrl;_attributeNames = attributeNames;}",
    "output": "public GetQueueAttributesRequest(String queueUrl, java.util.List<String> attributeNames) {setQueueUrl(queueUrl);setAttributeNames(attributeNames);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public static boolean[] copyOf(boolean[] original, int newLength) {if (newLength < 0) {throw new NegativeArraySizeException();}return copyOfRange(original, 0, newLength);}",
    "output": "public static bool[] copyOf(bool[] original, int newLength){if (newLength < 0){throw new java.lang.NegativeArraySizeException();}return copyOfRange(original, 0, newLength);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public static bool[] copyOf(bool[] original, int newLength){if (newLength < 0){throw new java.lang.NegativeArraySizeException();}return copyOfRange(original, 0, newLength);}",
    "output": "public static boolean[] copyOf(boolean[] original, int newLength) {if (newLength < 0) {throw new NegativeArraySizeException();}return copyOfRange(original, 0, newLength);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public static void setEnabled(boolean enabled) {ENABLED = enabled;}",
    "output": "public static void setEnabled(bool enabled){ENABLED = enabled;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public static void setEnabled(bool enabled){ENABLED = enabled;}",
    "output": "public static void setEnabled(boolean enabled) {ENABLED = enabled;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DeleteLogPatternResult deleteLogPattern(DeleteLogPatternRequest request) {request = beforeClientExecution(request);return executeDeleteLogPattern(request);}",
    "output": "public virtual DeleteLogPatternResponse DeleteLogPattern(DeleteLogPatternRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteLogPatternRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteLogPatternResponseUnmarshaller.Instance;return Invoke<DeleteLogPatternResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DeleteLogPatternResponse DeleteLogPattern(DeleteLogPatternRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteLogPatternRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteLogPatternResponseUnmarshaller.Instance;return Invoke<DeleteLogPatternResponse>(request, options);}",
    "output": "public DeleteLogPatternResult deleteLogPattern(DeleteLogPatternRequest request) {request = beforeClientExecution(request);return executeDeleteLogPattern(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public boolean contains(char[] text, int off, int len) {return map.containsKey(text, off, len);}",
    "output": "public virtual bool Contains(char[] text, int offset, int length){return map.ContainsKey(text, offset, length);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual bool Contains(char[] text, int offset, int length){return map.ContainsKey(text, offset, length);}",
    "output": "public boolean contains(char[] text, int off, int len) {return map.containsKey(text, off, len);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public int getFirstSheetIndexFromExternSheetIndex(int externSheetNumber){return linkTable.getFirstInternalSheetIndexForExtIndex(externSheetNumber);}",
    "output": "public int GetFirstSheetIndexFromExternSheetIndex(int externSheetNumber){return linkTable.GetFirstInternalSheetIndexForExtIndex(externSheetNumber);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public int GetFirstSheetIndexFromExternSheetIndex(int externSheetNumber){return linkTable.GetFirstInternalSheetIndexForExtIndex(externSheetNumber);}",
    "output": "public int getFirstSheetIndexFromExternSheetIndex(int externSheetNumber){return linkTable.getFirstInternalSheetIndexForExtIndex(externSheetNumber);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public boolean handles(String commandLine) {return command.length() + 1 < commandLine.length()&& commandLine.charAt(command.length()) == ' '&& commandLine.startsWith(command);}",
    "output": "public virtual bool Handles(string commandLine){return command.Length + 1 < commandLine.Length && commandLine[command.Length] ==' ' && commandLine.StartsWith(command);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual bool Handles(string commandLine){return command.Length + 1 < commandLine.Length && commandLine[command.Length] ==' ' && commandLine.StartsWith(command);}",
    "output": "public boolean handles(String commandLine) {return command.length() + 1 < commandLine.length()&& commandLine.charAt(command.length()) == ' '&& commandLine.startsWith(command);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public static void register(MergeStrategy imp) {register(imp.getName(), imp);}",
    "output": "public static void Register(MergeStrategy imp){Register(imp.GetName(), imp);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public static void Register(MergeStrategy imp){Register(imp.GetName(), imp);}",
    "output": "public static void register(MergeStrategy imp) {register(imp.getName(), imp);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public long ramBytesUsed() {return BASE_RAM_BYTES_USED + ((index!=null)? index.ramBytesUsed() : 0);}",
    "output": "public long RamBytesUsed(){return ((index != null) ? index.GetSizeInBytes() : 0);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public long RamBytesUsed(){return ((index != null) ? index.GetSizeInBytes() : 0);}",
    "output": "public long ramBytesUsed() {return BASE_RAM_BYTES_USED + ((index!=null)? index.ramBytesUsed() : 0);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public HostedZone(String id, String name, String callerReference) {setId(id);setName(name);setCallerReference(callerReference);}",
    "output": "public HostedZone(string id, string name, string callerReference){_id = id;_name = name;_callerReference = callerReference;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public HostedZone(string id, string name, string callerReference){_id = id;_name = name;_callerReference = callerReference;}",
    "output": "public HostedZone(String id, String name, String callerReference) {setId(id);setName(name);setCallerReference(callerReference);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public GetFindingsResult getFindings(GetFindingsRequest request) {request = beforeClientExecution(request);return executeGetFindings(request);}",
    "output": "public virtual GetFindingsResponse GetFindings(GetFindingsRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetFindingsRequestMarshaller.Instance;options.ResponseUnmarshaller = GetFindingsResponseUnmarshaller.Instance;return Invoke<GetFindingsResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual GetFindingsResponse GetFindings(GetFindingsRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetFindingsRequestMarshaller.Instance;options.ResponseUnmarshaller = GetFindingsResponseUnmarshaller.Instance;return Invoke<GetFindingsResponse>(request, options);}",
    "output": "public GetFindingsResult getFindings(GetFindingsRequest request) {request = beforeClientExecution(request);return executeGetFindings(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DescribeTopicsDetectionJobResult describeTopicsDetectionJob(DescribeTopicsDetectionJobRequest request) {request = beforeClientExecution(request);return executeDescribeTopicsDetectionJob(request);}",
    "output": "public virtual DescribeTopicsDetectionJobResponse DescribeTopicsDetectionJob(DescribeTopicsDetectionJobRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeTopicsDetectionJobRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeTopicsDetectionJobResponseUnmarshaller.Instance;return Invoke<DescribeTopicsDetectionJobResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DescribeTopicsDetectionJobResponse DescribeTopicsDetectionJob(DescribeTopicsDetectionJobRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeTopicsDetectionJobRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeTopicsDetectionJobResponseUnmarshaller.Instance;return Invoke<DescribeTopicsDetectionJobResponse>(request, options);}",
    "output": "public DescribeTopicsDetectionJobResult describeTopicsDetectionJob(DescribeTopicsDetectionJobRequest request) {request = beforeClientExecution(request);return executeDescribeTopicsDetectionJob(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public boolean processMatch(ValueEval eval) {if(eval instanceof NumericValueEval) {if(minimumValue == null) { minimumValue = eval;} else { double currentValue = ((NumericValueEval)eval).getNumberValue();double oldValue = ((NumericValueEval)minimumValue).getNumberValue();if(currentValue < oldValue) {minimumValue = eval;}}}return true;}",
    "output": "public bool ProcessMatch(ValueEval eval){if (eval is NumericValueEval){if (minimumValue == null){ minimumValue = eval;}else{ double currentValue = ((NumericValueEval)eval).NumberValue;double oldValue = ((NumericValueEval)minimumValue).NumberValue;if (currentValue < oldValue){minimumValue = eval;}}}return true;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public bool ProcessMatch(ValueEval eval){if (eval is NumericValueEval){if (minimumValue == null){ minimumValue = eval;}else{ double currentValue = ((NumericValueEval)eval).NumberValue;double oldValue = ((NumericValueEval)minimumValue).NumberValue;if (currentValue < oldValue){minimumValue = eval;}}}return true;}",
    "output": "public boolean processMatch(ValueEval eval) {if(eval instanceof NumericValueEval) {if(minimumValue == null) { minimumValue = eval;} else { double currentValue = ((NumericValueEval)eval).getNumberValue();double oldValue = ((NumericValueEval)minimumValue).getNumberValue();if(currentValue < oldValue) {minimumValue = eval;}}}return true;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void write(LittleEndianOutput out) {out.writeByte(sid + getPtgClass());out.writeShort(field_1_len_ref_subexpression);}",
    "output": "public override void Write(ILittleEndianOutput out1){out1.WriteByte(sid + PtgClass);out1.WriteShort(field_1_len_ref_subexpression);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override void Write(ILittleEndianOutput out1){out1.WriteByte(sid + PtgClass);out1.WriteShort(field_1_len_ref_subexpression);}",
    "output": "public void write(LittleEndianOutput out) {out.writeByte(sid + getPtgClass());out.writeShort(field_1_len_ref_subexpression);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public static void main(String[] args) throws IOException {boolean printTree = false;String path = null;for(int i=0;i<args.length;i++) {if (args[i].equals(\"-printTree\")) {printTree = true;} else {path = args[i];}}if (args.length != (printTree ? 2 : 1)) {System.out.println(\"\\nUsage: java -classpath ... org.apache.lucene.facet.util.PrintTaxonomyStats [-printTree] /path/to/taxononmy/index\\n\");System.exit(1);}Directory dir = FSDirectory.open(Paths.get(path));TaxonomyReader r = new DirectoryTaxonomyReader(dir);printStats(r, System.out, printTree);r.close();dir.close();}",
    "output": "public static int Main(string[] args){bool printTree = false;string path = null;for (int i = 0; i < args.Length; i++){if (args[i].Equals(\"-printTree\", StringComparison.Ordinal)){printTree = true;}else{path = args[i];}}if (args.Length != (printTree ? 2 : 1)){throw new ArgumentException();}using (Store.Directory dir = FSDirectory.Open(new DirectoryInfo(path))){using (var r = new DirectoryTaxonomyReader(dir)){PrintStats(r, System.Console.Out, printTree);}}return 0;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public static int Main(string[] args){bool printTree = false;string path = null;for (int i = 0; i < args.Length; i++){if (args[i].Equals(\"-printTree\", StringComparison.Ordinal)){printTree = true;}else{path = args[i];}}if (args.Length != (printTree ? 2 : 1)){throw new ArgumentException();}using (Store.Directory dir = FSDirectory.Open(new DirectoryInfo(path))){using (var r = new DirectoryTaxonomyReader(dir)){PrintStats(r, System.Console.Out, printTree);}}return 0;}",
    "output": "public static void main(String[] args) throws IOException {boolean printTree = false;String path = null;for(int i=0;i<args.length;i++) {if (args[i].equals(\"-printTree\")) {printTree = true;} else {path = args[i];}}if (args.length != (printTree ? 2 : 1)) {System.out.println(\"\\nUsage: java -classpath ... org.apache.lucene.facet.util.PrintTaxonomyStats [-printTree] /path/to/taxononmy/index\\n\");System.exit(1);}Directory dir = FSDirectory.open(Paths.get(path));TaxonomyReader r = new DirectoryTaxonomyReader(dir);printStats(r, System.out, printTree);r.close();dir.close();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void setByteValue(byte value) {if (!(fieldsData instanceof Byte)) {throw new IllegalArgumentException(\"cannot change value type from \" + fieldsData.getClass().getSimpleName() + \" to Byte\");}fieldsData = Byte.valueOf(value);}",
    "output": "public virtual void SetByteValue(byte value){if (!(FieldsData is Byte)){throw new System.ArgumentException(\"cannot change value type from \" + FieldsData.GetType().Name + \" to Byte\");}FieldsData = new Byte(value);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual void SetByteValue(byte value){if (!(FieldsData is Byte)){throw new System.ArgumentException(\"cannot change value type from \" + FieldsData.GetType().Name + \" to Byte\");}FieldsData = new Byte(value);}",
    "output": "public void setByteValue(byte value) {if (!(fieldsData instanceof Byte)) {throw new IllegalArgumentException(\"cannot change value type from \" + fieldsData.getClass().getSimpleName() + \" to Byte\");}fieldsData = Byte.valueOf(value);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public static int initialize() {return initialize(DEFAULT_SEED);}",
    "output": "public static int Initialize(){return Initialize(DefaultSeed);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public static int Initialize(){return Initialize(DefaultSeed);}",
    "output": "public static int initialize() {return initialize(DEFAULT_SEED);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public CachingDoubleValueSource(DoubleValuesSource source) {this.source = source;cache = new HashMap<>();}",
    "output": "public CachingDoubleValueSource(ValueSource source){this.m_source = source;m_cache = new JCG.Dictionary<int, double>();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public CachingDoubleValueSource(ValueSource source){this.m_source = source;m_cache = new JCG.Dictionary<int, double>();}",
    "output": "public CachingDoubleValueSource(DoubleValuesSource source) {this.source = source;cache = new HashMap<>();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public AttributeDefinition(String attributeName, ScalarAttributeType attributeType) {setAttributeName(attributeName);setAttributeType(attributeType.toString());}",
    "output": "public AttributeDefinition(string attributeName, ScalarAttributeType attributeType){_attributeName = attributeName;_attributeType = attributeType;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public AttributeDefinition(string attributeName, ScalarAttributeType attributeType){_attributeName = attributeName;_attributeType = attributeType;}",
    "output": "public AttributeDefinition(String attributeName, ScalarAttributeType attributeType) {setAttributeName(attributeName);setAttributeType(attributeType.toString());}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public static String join(Collection<String> parts, String separator) {return StringUtils.join(parts, separator, separator);}",
    "output": "public static string Join(ICollection<string> parts, string separator){return NGit.Util.StringUtils.Join(parts, separator, separator);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public static string Join(ICollection<string> parts, string separator){return NGit.Util.StringUtils.Join(parts, separator, separator);}",
    "output": "public static String join(Collection<String> parts, String separator) {return StringUtils.join(parts, separator, separator);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ListTaskDefinitionFamiliesResult listTaskDefinitionFamilies(ListTaskDefinitionFamiliesRequest request) {request = beforeClientExecution(request);return executeListTaskDefinitionFamilies(request);}",
    "output": "public virtual ListTaskDefinitionFamiliesResponse ListTaskDefinitionFamilies(ListTaskDefinitionFamiliesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListTaskDefinitionFamiliesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListTaskDefinitionFamiliesResponseUnmarshaller.Instance;return Invoke<ListTaskDefinitionFamiliesResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual ListTaskDefinitionFamiliesResponse ListTaskDefinitionFamilies(ListTaskDefinitionFamiliesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListTaskDefinitionFamiliesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListTaskDefinitionFamiliesResponseUnmarshaller.Instance;return Invoke<ListTaskDefinitionFamiliesResponse>(request, options);}",
    "output": "public ListTaskDefinitionFamiliesResult listTaskDefinitionFamilies(ListTaskDefinitionFamiliesRequest request) {request = beforeClientExecution(request);return executeListTaskDefinitionFamilies(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ListComponentsResult listComponents(ListComponentsRequest request) {request = beforeClientExecution(request);return executeListComponents(request);}",
    "output": "public virtual ListComponentsResponse ListComponents(ListComponentsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListComponentsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListComponentsResponseUnmarshaller.Instance;return Invoke<ListComponentsResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual ListComponentsResponse ListComponents(ListComponentsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListComponentsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListComponentsResponseUnmarshaller.Instance;return Invoke<ListComponentsResponse>(request, options);}",
    "output": "public ListComponentsResult listComponents(ListComponentsRequest request) {request = beforeClientExecution(request);return executeListComponents(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ActivatePhotosRequest() {super(\"CloudPhoto\", \"2017-07-11\", \"ActivatePhotos\", \"cloudphoto\");setProtocol(ProtocolType.HTTPS);}",
    "output": "public ActivatePhotosRequest(): base(\"CloudPhoto\", \"2017-07-11\", \"ActivatePhotos\", \"cloudphoto\", \"openAPI\"){Protocol = ProtocolType.HTTPS;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public ActivatePhotosRequest(): base(\"CloudPhoto\", \"2017-07-11\", \"ActivatePhotos\", \"cloudphoto\", \"openAPI\"){Protocol = ProtocolType.HTTPS;}",
    "output": "public ActivatePhotosRequest() {super(\"CloudPhoto\", \"2017-07-11\", \"ActivatePhotos\", \"cloudphoto\");setProtocol(ProtocolType.HTTPS);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public CreateMatchmakingRuleSetResult createMatchmakingRuleSet(CreateMatchmakingRuleSetRequest request) {request = beforeClientExecution(request);return executeCreateMatchmakingRuleSet(request);}",
    "output": "public virtual CreateMatchmakingRuleSetResponse CreateMatchmakingRuleSet(CreateMatchmakingRuleSetRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateMatchmakingRuleSetRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateMatchmakingRuleSetResponseUnmarshaller.Instance;return Invoke<CreateMatchmakingRuleSetResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual CreateMatchmakingRuleSetResponse CreateMatchmakingRuleSet(CreateMatchmakingRuleSetRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateMatchmakingRuleSetRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateMatchmakingRuleSetResponseUnmarshaller.Instance;return Invoke<CreateMatchmakingRuleSetResponse>(request, options);}",
    "output": "public CreateMatchmakingRuleSetResult createMatchmakingRuleSet(CreateMatchmakingRuleSetRequest request) {request = beforeClientExecution(request);return executeCreateMatchmakingRuleSet(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ListAvailableManagementCidrRangesResult listAvailableManagementCidrRanges(ListAvailableManagementCidrRangesRequest request) {request = beforeClientExecution(request);return executeListAvailableManagementCidrRanges(request);}",
    "output": "public virtual ListAvailableManagementCidrRangesResponse ListAvailableManagementCidrRanges(ListAvailableManagementCidrRangesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListAvailableManagementCidrRangesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListAvailableManagementCidrRangesResponseUnmarshaller.Instance;return Invoke<ListAvailableManagementCidrRangesResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual ListAvailableManagementCidrRangesResponse ListAvailableManagementCidrRanges(ListAvailableManagementCidrRangesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListAvailableManagementCidrRangesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListAvailableManagementCidrRangesResponseUnmarshaller.Instance;return Invoke<ListAvailableManagementCidrRangesResponse>(request, options);}",
    "output": "public ListAvailableManagementCidrRangesResult listAvailableManagementCidrRanges(ListAvailableManagementCidrRangesRequest request) {request = beforeClientExecution(request);return executeListAvailableManagementCidrRanges(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ObjectIdSubclassMap<ObjectId> getBaseObjectIds() {if (baseObjectIds != null)return baseObjectIds;return new ObjectIdSubclassMap<>();}",
    "output": "public virtual ObjectIdSubclassMap<ObjectId> GetBaseObjectIds(){if (baseObjectIds != null){return baseObjectIds;}return new ObjectIdSubclassMap<ObjectId>();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual ObjectIdSubclassMap<ObjectId> GetBaseObjectIds(){if (baseObjectIds != null){return baseObjectIds;}return new ObjectIdSubclassMap<ObjectId>();}",
    "output": "public ObjectIdSubclassMap<ObjectId> getBaseObjectIds() {if (baseObjectIds != null)return baseObjectIds;return new ObjectIdSubclassMap<>();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DeletePushTemplateResult deletePushTemplate(DeletePushTemplateRequest request) {request = beforeClientExecution(request);return executeDeletePushTemplate(request);}",
    "output": "public virtual DeletePushTemplateResponse DeletePushTemplate(DeletePushTemplateRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeletePushTemplateRequestMarshaller.Instance;options.ResponseUnmarshaller = DeletePushTemplateResponseUnmarshaller.Instance;return Invoke<DeletePushTemplateResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DeletePushTemplateResponse DeletePushTemplate(DeletePushTemplateRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeletePushTemplateRequestMarshaller.Instance;options.ResponseUnmarshaller = DeletePushTemplateResponseUnmarshaller.Instance;return Invoke<DeletePushTemplateResponse>(request, options);}",
    "output": "public DeletePushTemplateResult deletePushTemplate(DeletePushTemplateRequest request) {request = beforeClientExecution(request);return executeDeletePushTemplate(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public CreateDomainEntryResult createDomainEntry(CreateDomainEntryRequest request) {request = beforeClientExecution(request);return executeCreateDomainEntry(request);}",
    "output": "public virtual CreateDomainEntryResponse CreateDomainEntry(CreateDomainEntryRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateDomainEntryRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateDomainEntryResponseUnmarshaller.Instance;return Invoke<CreateDomainEntryResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual CreateDomainEntryResponse CreateDomainEntry(CreateDomainEntryRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateDomainEntryRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateDomainEntryResponseUnmarshaller.Instance;return Invoke<CreateDomainEntryResponse>(request, options);}",
    "output": "public CreateDomainEntryResult createDomainEntry(CreateDomainEntryRequest request) {request = beforeClientExecution(request);return executeCreateDomainEntry(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public static int getEncodedSize(Object[] values) {int result = values.length * 1;for (Object value : values) {result += getEncodedSize(value);}return result;}",
    "output": "public static int GetEncodedSize(Array values){int result = values.Length * 1;for (int i = 0; i < values.Length; i++){result += GetEncodedSize(values.GetValue(i));}return result;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public static int GetEncodedSize(Array values){int result = values.Length * 1;for (int i = 0; i < values.Length; i++){result += GetEncodedSize(values.GetValue(i));}return result;}",
    "output": "public static int getEncodedSize(Object[] values) {int result = values.length * 1;for (Object value : values) {result += getEncodedSize(value);}return result;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public OpenNLPTokenizerFactory(Map<String,String> args) {super(args);sentenceModelFile = require(args, SENTENCE_MODEL);tokenizerModelFile = require(args, TOKENIZER_MODEL);if ( ! args.isEmpty()) {throw new IllegalArgumentException(\"Unknown parameters: \" + args);}}",
    "output": "public OpenNLPTokenizerFactory(IDictionary<string, string> args): base(args){sentenceModelFile = Require(args, SENTENCE_MODEL);tokenizerModelFile = Require(args, TOKENIZER_MODEL);if (args.Any()){throw new ArgumentException(\"Unknown parameters: \" + args);}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public OpenNLPTokenizerFactory(IDictionary<string, string> args): base(args){sentenceModelFile = Require(args, SENTENCE_MODEL);tokenizerModelFile = Require(args, TOKENIZER_MODEL);if (args.Any()){throw new ArgumentException(\"Unknown parameters: \" + args);}}",
    "output": "public OpenNLPTokenizerFactory(Map<String,String> args) {super(args);sentenceModelFile = require(args, SENTENCE_MODEL);tokenizerModelFile = require(args, TOKENIZER_MODEL);if ( ! args.isEmpty()) {throw new IllegalArgumentException(\"Unknown parameters: \" + args);}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public final int getInt(int index) {checkIndex(index, SizeOf.INT);return Memory.peekInt(backingArray, offset + index, order);}",
    "output": "public sealed override int getInt(int index){checkIndex(index, libcore.io.SizeOf.INT);return libcore.io.Memory.peekInt(backingArray, offset + index, _order);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public sealed override int getInt(int index){checkIndex(index, libcore.io.SizeOf.INT);return libcore.io.Memory.peekInt(backingArray, offset + index, _order);}",
    "output": "public final int getInt(int index) {checkIndex(index, SizeOf.INT);return Memory.peekInt(backingArray, offset + index, order);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public List<Head> getNextHeads(char c) {if (matches(c)) {return newHeads;}return FileNameMatcher.EMPTY_HEAD_LIST;}",
    "output": "public virtual IList<Head> GetNextHeads(char c){if (Matches(c)){return newHeads;}else{return FileNameMatcher.EMPTY_HEAD_LIST;}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual IList<Head> GetNextHeads(char c){if (Matches(c)){return newHeads;}else{return FileNameMatcher.EMPTY_HEAD_LIST;}}",
    "output": "public List<Head> getNextHeads(char c) {if (matches(c)) {return newHeads;}return FileNameMatcher.EMPTY_HEAD_LIST;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ByteBuffer putShort(short value) {throw new ReadOnlyBufferException();}",
    "output": "public override java.nio.ByteBuffer putShort(short value){throw new System.NotImplementedException();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override java.nio.ByteBuffer putShort(short value){throw new System.NotImplementedException();}",
    "output": "public ByteBuffer putShort(short value) {throw new ReadOnlyBufferException();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void writeUnshared(Object object) throws IOException {writeObject(object, true);}",
    "output": "public virtual void writeUnshared(object @object){throw new System.NotImplementedException();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual void writeUnshared(object @object){throw new System.NotImplementedException();}",
    "output": "public void writeUnshared(Object object) throws IOException {writeObject(object, true);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public int offsetByCodePoints(int index, int codePointOffset) {return Character.offsetByCodePoints(value, 0, count, index,codePointOffset);}",
    "output": "public virtual int offsetByCodePoints(int index, int codePointOffset){return Sharpen.CharHelper.OffsetByCodePoints(value, 0, count, index, codePointOffset);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual int offsetByCodePoints(int index, int codePointOffset){return Sharpen.CharHelper.OffsetByCodePoints(value, 0, count, index, codePointOffset);}",
    "output": "public int offsetByCodePoints(int index, int codePointOffset) {return Character.offsetByCodePoints(value, 0, count, index,codePointOffset);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public static int getUniqueAlt(Collection<BitSet> altsets) {BitSet all = getAlts(altsets);if ( all.cardinality()==1 ) return all.nextSetBit(0);return ATN.INVALID_ALT_NUMBER;}",
    "output": "public static int GetUniqueAlt(IEnumerable<BitSet> altsets){BitSet all = GetAlts(altsets);if (all.Cardinality() == 1){return all.NextSetBit(0);}return ATN.INVALID_ALT_NUMBER;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public static int GetUniqueAlt(IEnumerable<BitSet> altsets){BitSet all = GetAlts(altsets);if (all.Cardinality() == 1){return all.NextSetBit(0);}return ATN.INVALID_ALT_NUMBER;}",
    "output": "public static int getUniqueAlt(Collection<BitSet> altsets) {BitSet all = getAlts(altsets);if ( all.cardinality()==1 ) return all.nextSetBit(0);return ATN.INVALID_ALT_NUMBER;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public Date getWhen() {return new Date(when);}",
    "output": "public virtual DateTime GetWhen(){return Sharpen.Extensions.CreateDate(when);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DateTime GetWhen(){return Sharpen.Extensions.CreateDate(when);}",
    "output": "public Date getWhen() {return new Date(when);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public RuleTagToken(String ruleName, int bypassTokenType, String label) {if (ruleName == null || ruleName.isEmpty()) {throw new IllegalArgumentException(\"ruleName cannot be null or empty.\");}this.ruleName = ruleName;this.bypassTokenType = bypassTokenType;this.label = label;}",
    "output": "public RuleTagToken(string ruleName, int bypassTokenType, string label){if (string.IsNullOrEmpty(ruleName)){throw new ArgumentException(\"ruleName cannot be null or empty.\");}this.ruleName = ruleName;this.bypassTokenType = bypassTokenType;this.label = label;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public RuleTagToken(string ruleName, int bypassTokenType, string label){if (string.IsNullOrEmpty(ruleName)){throw new ArgumentException(\"ruleName cannot be null or empty.\");}this.ruleName = ruleName;this.bypassTokenType = bypassTokenType;this.label = label;}",
    "output": "public RuleTagToken(String ruleName, int bypassTokenType, String label) {if (ruleName == null || ruleName.isEmpty()) {throw new IllegalArgumentException(\"ruleName cannot be null or empty.\");}this.ruleName = ruleName;this.bypassTokenType = bypassTokenType;this.label = label;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DisableOrganizationAdminAccountResult disableOrganizationAdminAccount(DisableOrganizationAdminAccountRequest request) {request = beforeClientExecution(request);return executeDisableOrganizationAdminAccount(request);}",
    "output": "public virtual DisableOrganizationAdminAccountResponse DisableOrganizationAdminAccount(DisableOrganizationAdminAccountRequest request){var options = new InvokeOptions();options.RequestMarshaller = DisableOrganizationAdminAccountRequestMarshaller.Instance;options.ResponseUnmarshaller = DisableOrganizationAdminAccountResponseUnmarshaller.Instance;return Invoke<DisableOrganizationAdminAccountResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DisableOrganizationAdminAccountResponse DisableOrganizationAdminAccount(DisableOrganizationAdminAccountRequest request){var options = new InvokeOptions();options.RequestMarshaller = DisableOrganizationAdminAccountRequestMarshaller.Instance;options.ResponseUnmarshaller = DisableOrganizationAdminAccountResponseUnmarshaller.Instance;return Invoke<DisableOrganizationAdminAccountResponse>(request, options);}",
    "output": "public DisableOrganizationAdminAccountResult disableOrganizationAdminAccount(DisableOrganizationAdminAccountRequest request) {request = beforeClientExecution(request);return executeDisableOrganizationAdminAccount(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public CreateRoomResult createRoom(CreateRoomRequest request) {request = beforeClientExecution(request);return executeCreateRoom(request);}",
    "output": "public virtual CreateRoomResponse CreateRoom(CreateRoomRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateRoomRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateRoomResponseUnmarshaller.Instance;return Invoke<CreateRoomResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual CreateRoomResponse CreateRoom(CreateRoomRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateRoomRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateRoomResponseUnmarshaller.Instance;return Invoke<CreateRoomResponse>(request, options);}",
    "output": "public CreateRoomResult createRoom(CreateRoomRequest request) {request = beforeClientExecution(request);return executeCreateRoom(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ReplicationGroup deleteReplicationGroup(DeleteReplicationGroupRequest request) {request = beforeClientExecution(request);return executeDeleteReplicationGroup(request);}",
    "output": "public virtual DeleteReplicationGroupResponse DeleteReplicationGroup(DeleteReplicationGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteReplicationGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteReplicationGroupResponseUnmarshaller.Instance;return Invoke<DeleteReplicationGroupResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DeleteReplicationGroupResponse DeleteReplicationGroup(DeleteReplicationGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteReplicationGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteReplicationGroupResponseUnmarshaller.Instance;return Invoke<DeleteReplicationGroupResponse>(request, options);}",
    "output": "public ReplicationGroup deleteReplicationGroup(DeleteReplicationGroupRequest request) {request = beforeClientExecution(request);return executeDeleteReplicationGroup(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public final CharBuffer decode(ByteBuffer buffer) {try {return newDecoder().onMalformedInput(CodingErrorAction.REPLACE).onUnmappableCharacter(CodingErrorAction.REPLACE).decode(buffer);} catch (CharacterCodingException ex) {throw new Error(ex.getMessage(), ex);}}",
    "output": "public java.nio.CharBuffer decode(java.nio.ByteBuffer buffer){try{return newDecoder().onMalformedInput(java.nio.charset.CodingErrorAction.REPLACE).onUnmappableCharacter(java.nio.charset.CodingErrorAction.REPLACE).decode(buffer);}catch (java.nio.charset.CharacterCodingException ex){throw new System.Exception(ex.Message, ex);}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public java.nio.CharBuffer decode(java.nio.ByteBuffer buffer){try{return newDecoder().onMalformedInput(java.nio.charset.CodingErrorAction.REPLACE).onUnmappableCharacter(java.nio.charset.CodingErrorAction.REPLACE).decode(buffer);}catch (java.nio.charset.CharacterCodingException ex){throw new System.Exception(ex.Message, ex);}}",
    "output": "public final CharBuffer decode(ByteBuffer buffer) {try {return newDecoder().onMalformedInput(CodingErrorAction.REPLACE).onUnmappableCharacter(CodingErrorAction.REPLACE).decode(buffer);} catch (CharacterCodingException ex) {throw new Error(ex.getMessage(), ex);}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public Distribution(String id, String status, String domainName) {setId(id);setStatus(status);setDomainName(domainName);}",
    "output": "public Distribution(string id, string status, string domainName){_id = id;_status = status;_domainName = domainName;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public Distribution(string id, string status, string domainName){_id = id;_status = status;_domainName = domainName;}",
    "output": "public Distribution(String id, String status, String domainName) {setId(id);setStatus(status);setDomainName(domainName);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public final double[] array() {return protectedArray();}",
    "output": "public sealed override object array(){return protectedArray();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public sealed override object array(){return protectedArray();}",
    "output": "public final double[] array() {return protectedArray();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DateWindow1904Record(RecordInputStream in) {field_1_window = in.readShort();}",
    "output": "public DateWindow1904Record(RecordInputStream in1){field_1_window = in1.ReadShort();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public DateWindow1904Record(RecordInputStream in1){field_1_window = in1.ReadShort();}",
    "output": "public DateWindow1904Record(RecordInputStream in) {field_1_window = in.readShort();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DeleteDBSnapshotRequest(String dBSnapshotIdentifier) {setDBSnapshotIdentifier(dBSnapshotIdentifier);}",
    "output": "public DeleteDBSnapshotRequest(string dbSnapshotIdentifier){_dbSnapshotIdentifier = dbSnapshotIdentifier;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public DeleteDBSnapshotRequest(string dbSnapshotIdentifier){_dbSnapshotIdentifier = dbSnapshotIdentifier;}",
    "output": "public DeleteDBSnapshotRequest(String dBSnapshotIdentifier) {setDBSnapshotIdentifier(dBSnapshotIdentifier);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public final ParserExtension getExtension(String key) {return this.extensions.get(key);}",
    "output": "public ParserExtension GetExtension(string key){if (key == null || !this.extensions.TryGetValue(key, out ParserExtension value)) return null;return value;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public ParserExtension GetExtension(string key){if (key == null || !this.extensions.TryGetValue(key, out ParserExtension value)) return null;return value;}",
    "output": "public final ParserExtension getExtension(String key) {return this.extensions.get(key);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void inform(ResourceLoader loader) {try {if (chunkerModelFile != null) {OpenNLPOpsFactory.getChunkerModel(chunkerModelFile, loader);}} catch (IOException e) {throw new IllegalArgumentException(e);}}",
    "output": "public virtual void Inform(IResourceLoader loader){try{if (chunkerModelFile != null){OpenNLPOpsFactory.GetChunkerModel(chunkerModelFile, loader);}}catch (IOException e){throw new ArgumentException(e.ToString(), e);}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual void Inform(IResourceLoader loader){try{if (chunkerModelFile != null){OpenNLPOpsFactory.GetChunkerModel(chunkerModelFile, loader);}}catch (IOException e){throw new ArgumentException(e.ToString(), e);}}",
    "output": "public void inform(ResourceLoader loader) {try {if (chunkerModelFile != null) {OpenNLPOpsFactory.getChunkerModel(chunkerModelFile, loader);}} catch (IOException e) {throw new IllegalArgumentException(e);}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public CompleteVaultLockResult completeVaultLock(CompleteVaultLockRequest request) {request = beforeClientExecution(request);return executeCompleteVaultLock(request);}",
    "output": "public virtual CompleteVaultLockResponse CompleteVaultLock(CompleteVaultLockRequest request){var options = new InvokeOptions();options.RequestMarshaller = CompleteVaultLockRequestMarshaller.Instance;options.ResponseUnmarshaller = CompleteVaultLockResponseUnmarshaller.Instance;return Invoke<CompleteVaultLockResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual CompleteVaultLockResponse CompleteVaultLock(CompleteVaultLockRequest request){var options = new InvokeOptions();options.RequestMarshaller = CompleteVaultLockRequestMarshaller.Instance;options.ResponseUnmarshaller = CompleteVaultLockResponseUnmarshaller.Instance;return Invoke<CompleteVaultLockResponse>(request, options);}",
    "output": "public CompleteVaultLockResult completeVaultLock(CompleteVaultLockRequest request) {request = beforeClientExecution(request);return executeCompleteVaultLock(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public final int[] getCharIntervals() {return points.clone();}",
    "output": "public int[] GetCharIntervals(){return (int[])(Array)_points.Clone();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public int[] GetCharIntervals(){return (int[])(Array)_points.Clone();}",
    "output": "public final int[] getCharIntervals() {return points.clone();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public long ramBytesUsed() {return values.ramBytesUsed()+ super.ramBytesUsed()+ Long.BYTES+ RamUsageEstimator.NUM_BYTES_OBJECT_REF;}",
    "output": "public long RamBytesUsed(){return RamUsageEstimator.AlignObjectSize(3 * RamUsageEstimator.NUM_BYTES_OBJECT_REF + 2 * RamUsageEstimator.NUM_BYTES_INT32)+ RamUsageEstimator.SizeOf(data)+ positions.RamBytesUsed()+ wordNums.RamBytesUsed();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public long RamBytesUsed(){return RamUsageEstimator.AlignObjectSize(3 * RamUsageEstimator.NUM_BYTES_OBJECT_REF + 2 * RamUsageEstimator.NUM_BYTES_INT32)+ RamUsageEstimator.SizeOf(data)+ positions.RamBytesUsed()+ wordNums.RamBytesUsed();}",
    "output": "public long ramBytesUsed() {return values.ramBytesUsed()+ super.ramBytesUsed()+ Long.BYTES+ RamUsageEstimator.NUM_BYTES_OBJECT_REF;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public RegisterInstancesWithLoadBalancerResult registerInstancesWithLoadBalancer(RegisterInstancesWithLoadBalancerRequest request) {request = beforeClientExecution(request);return executeRegisterInstancesWithLoadBalancer(request);}",
    "output": "public virtual RegisterInstancesWithLoadBalancerResponse RegisterInstancesWithLoadBalancer(RegisterInstancesWithLoadBalancerRequest request){var options = new InvokeOptions();options.RequestMarshaller = RegisterInstancesWithLoadBalancerRequestMarshaller.Instance;options.ResponseUnmarshaller = RegisterInstancesWithLoadBalancerResponseUnmarshaller.Instance;return Invoke<RegisterInstancesWithLoadBalancerResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual RegisterInstancesWithLoadBalancerResponse RegisterInstancesWithLoadBalancer(RegisterInstancesWithLoadBalancerRequest request){var options = new InvokeOptions();options.RequestMarshaller = RegisterInstancesWithLoadBalancerRequestMarshaller.Instance;options.ResponseUnmarshaller = RegisterInstancesWithLoadBalancerResponseUnmarshaller.Instance;return Invoke<RegisterInstancesWithLoadBalancerResponse>(request, options);}",
    "output": "public RegisterInstancesWithLoadBalancerResult registerInstancesWithLoadBalancer(RegisterInstancesWithLoadBalancerRequest request) {request = beforeClientExecution(request);return executeRegisterInstancesWithLoadBalancer(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DescribeClusterUserKubeconfigRequest() {super(\"CS\", \"2015-12-15\", \"DescribeClusterUserKubeconfig\", \"csk\");setUriPattern(\"/k8s/[ClusterId]/user_config\");setMethod(MethodType.GET);}",
    "output": "public DescribeClusterUserKubeconfigRequest(): base(\"CS\", \"2015-12-15\", \"DescribeClusterUserKubeconfig\", \"cs\", \"openAPI\"){UriPattern = \"/k8s/[ClusterId]/user_config\";Method = MethodType.GET;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public DescribeClusterUserKubeconfigRequest(): base(\"CS\", \"2015-12-15\", \"DescribeClusterUserKubeconfig\", \"cs\", \"openAPI\"){UriPattern = \"/k8s/[ClusterId]/user_config\";Method = MethodType.GET;}",
    "output": "public DescribeClusterUserKubeconfigRequest() {super(\"CS\", \"2015-12-15\", \"DescribeClusterUserKubeconfig\", \"csk\");setUriPattern(\"/k8s/[ClusterId]/user_config\");setMethod(MethodType.GET);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public PrecisionRecord(RecordInputStream in) {field_1_precision = in.readShort();}",
    "output": "public PrecisionRecord(RecordInputStream in1){field_1_precision = in1.ReadShort();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public PrecisionRecord(RecordInputStream in1){field_1_precision = in1.ReadShort();}",
    "output": "public PrecisionRecord(RecordInputStream in) {field_1_precision = in.readShort();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void serialize(LittleEndianOutput out) {out.writeShort(getLeftRowGutter());out.writeShort(getTopColGutter());out.writeShort(getRowLevelMax());out.writeShort(getColLevelMax());}",
    "output": "public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(LeftRowGutter);out1.WriteShort(TopColGutter);out1.WriteShort(RowLevelMax);out1.WriteShort(ColLevelMax);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(LeftRowGutter);out1.WriteShort(TopColGutter);out1.WriteShort(RowLevelMax);out1.WriteShort(ColLevelMax);}",
    "output": "public void serialize(LittleEndianOutput out) {out.writeShort(getLeftRowGutter());out.writeShort(getTopColGutter());out.writeShort(getRowLevelMax());out.writeShort(getColLevelMax());}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DeleteVirtualInterfaceResult deleteVirtualInterface(DeleteVirtualInterfaceRequest request) {request = beforeClientExecution(request);return executeDeleteVirtualInterface(request);}",
    "output": "public virtual DeleteVirtualInterfaceResponse DeleteVirtualInterface(DeleteVirtualInterfaceRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteVirtualInterfaceRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteVirtualInterfaceResponseUnmarshaller.Instance;return Invoke<DeleteVirtualInterfaceResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DeleteVirtualInterfaceResponse DeleteVirtualInterface(DeleteVirtualInterfaceRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteVirtualInterfaceRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteVirtualInterfaceResponseUnmarshaller.Instance;return Invoke<DeleteVirtualInterfaceResponse>(request, options);}",
    "output": "public DeleteVirtualInterfaceResult deleteVirtualInterface(DeleteVirtualInterfaceRequest request) {request = beforeClientExecution(request);return executeDeleteVirtualInterface(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public Entry getEntry(String name) throws FileNotFoundException {if (excludes.contains(name)) {throw new FileNotFoundException(name);}Entry entry = directory.getEntry(name);return wrapEntry(entry);}",
    "output": "public Entry GetEntry(String name){if (excludes.Contains(name)){throw new FileNotFoundException(name);}Entry entry = directory.GetEntry(name);return WrapEntry(entry);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public Entry GetEntry(String name){if (excludes.Contains(name)){throw new FileNotFoundException(name);}Entry entry = directory.GetEntry(name);return WrapEntry(entry);}",
    "output": "public Entry getEntry(String name) throws FileNotFoundException {if (excludes.contains(name)) {throw new FileNotFoundException(name);}Entry entry = directory.getEntry(name);return wrapEntry(entry);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String toString(){StringBuilder buffer = new StringBuilder();buffer.append(\"[BACKUP]\\n\");buffer.append(\"    .backup          = \").append(Integer.toHexString(getBackup())).append(\"\\n\");buffer.append(\"[/BACKUP]\\n\");return buffer.toString();}",
    "output": "public override String ToString(){StringBuilder buffer = new StringBuilder();buffer.Append(\"[BACKUP]\\n\");buffer.Append(\"    .backup          = \").Append(StringUtil.ToHexString(Backup)).Append(\"\\n\");buffer.Append(\"[/BACKUP]\\n\");return buffer.ToString();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override String ToString(){StringBuilder buffer = new StringBuilder();buffer.Append(\"[BACKUP]\\n\");buffer.Append(\"    .backup          = \").Append(StringUtil.ToHexString(Backup)).Append(\"\\n\");buffer.Append(\"[/BACKUP]\\n\");return buffer.ToString();}",
    "output": "public String toString(){StringBuilder buffer = new StringBuilder();buffer.append(\"[BACKUP]\\n\");buffer.append(\"    .backup          = \").append(Integer.toHexString(getBackup())).append(\"\\n\");buffer.append(\"[/BACKUP]\\n\");return buffer.toString();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DeleteVoiceConnectorOriginationResult deleteVoiceConnectorOrigination(DeleteVoiceConnectorOriginationRequest request) {request = beforeClientExecution(request);return executeDeleteVoiceConnectorOrigination(request);}",
    "output": "public virtual DeleteVoiceConnectorOriginationResponse DeleteVoiceConnectorOrigination(DeleteVoiceConnectorOriginationRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteVoiceConnectorOriginationRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteVoiceConnectorOriginationResponseUnmarshaller.Instance;return Invoke<DeleteVoiceConnectorOriginationResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DeleteVoiceConnectorOriginationResponse DeleteVoiceConnectorOrigination(DeleteVoiceConnectorOriginationRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteVoiceConnectorOriginationRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteVoiceConnectorOriginationResponseUnmarshaller.Instance;return Invoke<DeleteVoiceConnectorOriginationResponse>(request, options);}",
    "output": "public DeleteVoiceConnectorOriginationResult deleteVoiceConnectorOrigination(DeleteVoiceConnectorOriginationRequest request) {request = beforeClientExecution(request);return executeDeleteVoiceConnectorOrigination(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public Appendable append(char c) {write(c);return this;}",
    "output": "public virtual OpenStringBuilder Append(char c){Write(c);return this;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual OpenStringBuilder Append(char c){Write(c);return this;}",
    "output": "public Appendable append(char c) {write(c);return this;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public static long generationFromSegmentsFileName(String fileName) {if (fileName.equals(OLD_SEGMENTS_GEN)) {throw new IllegalArgumentException(\"\\\"\" + OLD_SEGMENTS_GEN + \"\\\" is not a valid segment file name since 4.0\");} else if (fileName.equals(IndexFileNames.SEGMENTS)) {return 0;} else if (fileName.startsWith(IndexFileNames.SEGMENTS)) {return Long.parseLong(fileName.substring(1+IndexFileNames.SEGMENTS.length()),Character.MAX_RADIX);} else {throw new IllegalArgumentException(\"fileName \\\"\" + fileName + \"\\\" is not a segments file\");}}",
    "output": "public static long GenerationFromSegmentsFileName(string fileName){if (fileName.Equals(IndexFileNames.SEGMENTS, StringComparison.Ordinal)){return 0;}else if (fileName.StartsWith(IndexFileNames.SEGMENTS, StringComparison.Ordinal)){return Number.Parse(fileName.Substring(1 + IndexFileNames.SEGMENTS.Length), Character.MaxRadix);}else{throw new System.ArgumentException(\"fileName \\\"\" + fileName + \"\\\" is not a segments file\");}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public static long GenerationFromSegmentsFileName(string fileName){if (fileName.Equals(IndexFileNames.SEGMENTS, StringComparison.Ordinal)){return 0;}else if (fileName.StartsWith(IndexFileNames.SEGMENTS, StringComparison.Ordinal)){return Number.Parse(fileName.Substring(1 + IndexFileNames.SEGMENTS.Length), Character.MaxRadix);}else{throw new System.ArgumentException(\"fileName \\\"\" + fileName + \"\\\" is not a segments file\");}}",
    "output": "public static long generationFromSegmentsFileName(String fileName) {if (fileName.equals(OLD_SEGMENTS_GEN)) {throw new IllegalArgumentException(\"\\\"\" + OLD_SEGMENTS_GEN + \"\\\" is not a valid segment file name since 4.0\");} else if (fileName.equals(IndexFileNames.SEGMENTS)) {return 0;} else if (fileName.startsWith(IndexFileNames.SEGMENTS)) {return Long.parseLong(fileName.substring(1+IndexFileNames.SEGMENTS.length()),Character.MAX_RADIX);} else {throw new IllegalArgumentException(\"fileName \\\"\" + fileName + \"\\\" is not a segments file\");}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public static TagOpt fromOption(String o) {if (o == null || o.length() == 0)return AUTO_FOLLOW;for (TagOpt tagopt : values()) {if (tagopt.option().equals(o))return tagopt;}throw new IllegalArgumentException(MessageFormat.format(JGitText.get().invalidTagOption, o));}",
    "output": "public static NGit.Transport.TagOpt FromOption(string o){if (o == null || o.Length == 0){return AUTO_FOLLOW;}foreach (NGit.Transport.TagOpt tagopt in Values()){if (tagopt.Option().Equals(o)){return tagopt;}}throw new ArgumentException(MessageFormat.Format(JGitText.Get().invalidTagOption,o));}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public static NGit.Transport.TagOpt FromOption(string o){if (o == null || o.Length == 0){return AUTO_FOLLOW;}foreach (NGit.Transport.TagOpt tagopt in Values()){if (tagopt.Option().Equals(o)){return tagopt;}}throw new ArgumentException(MessageFormat.Format(JGitText.Get().invalidTagOption,o));}",
    "output": "public static TagOpt fromOption(String o) {if (o == null || o.length() == 0)return AUTO_FOLLOW;for (TagOpt tagopt : values()) {if (tagopt.option().equals(o))return tagopt;}throw new IllegalArgumentException(MessageFormat.format(JGitText.get().invalidTagOption, o));}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public StartContentModerationResult startContentModeration(StartContentModerationRequest request) {request = beforeClientExecution(request);return executeStartContentModeration(request);}",
    "output": "public virtual StartContentModerationResponse StartContentModeration(StartContentModerationRequest request){var options = new InvokeOptions();options.RequestMarshaller = StartContentModerationRequestMarshaller.Instance;options.ResponseUnmarshaller = StartContentModerationResponseUnmarshaller.Instance;return Invoke<StartContentModerationResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual StartContentModerationResponse StartContentModeration(StartContentModerationRequest request){var options = new InvokeOptions();options.RequestMarshaller = StartContentModerationRequestMarshaller.Instance;options.ResponseUnmarshaller = StartContentModerationResponseUnmarshaller.Instance;return Invoke<StartContentModerationResponse>(request, options);}",
    "output": "public StartContentModerationResult startContentModeration(StartContentModerationRequest request) {request = beforeClientExecution(request);return executeStartContentModeration(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public static String quoteReplacement(String s) {StringBuilder result = new StringBuilder(s.length());for (int i = 0; i < s.length(); i++) {char c = s.charAt(i);if (c == '\\\\' || c == '$') {result.append('\\\\');}result.append(c);}return result.toString();}",
    "output": "public static string quoteReplacement(string s){java.lang.StringBuilder result = new java.lang.StringBuilder(s.Length);{for (int i = 0; i < s.Length; i++){char c = s[i];if (c == '\\\\' || c == '$'){result.append('\\\\');}result.append(c);}}return result.ToString();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public static string quoteReplacement(string s){java.lang.StringBuilder result = new java.lang.StringBuilder(s.Length);{for (int i = 0; i < s.Length; i++){char c = s[i];if (c == '\\\\' || c == '$'){result.append('\\\\');}result.append(c);}}return result.ToString();}",
    "output": "public static String quoteReplacement(String s) {StringBuilder result = new StringBuilder(s.length());for (int i = 0; i < s.length(); i++) {char c = s.charAt(i);if (c == '\\\\' || c == '$') {result.append('\\\\');}result.append(c);}return result.toString();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public final void set(V newValue) {value = newValue;}",
    "output": "public void set(V newValue){value = newValue;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public void set(V newValue){value = newValue;}",
    "output": "public final void set(V newValue) {value = newValue;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public QueryParserTokenManager(CharStream stream){input_stream = stream;}",
    "output": "public QueryParserTokenManager(ICharStream stream){InitBlock();m_input_stream = stream;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public QueryParserTokenManager(ICharStream stream){InitBlock();m_input_stream = stream;}",
    "output": "public QueryParserTokenManager(CharStream stream){input_stream = stream;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public long valueFor(double elapsed) {double val;if (modBy == 0)val = elapsed / factor;elseval = elapsed / factor % modBy;if (type == '0')return Math.round(val);else return (long) val;}",
    "output": "public long ValueFor(double elapsed){double val;if (modBy == 0)val = elapsed / factor;elseval = elapsed / factor % modBy;if (type == '0')return (long)Math.Round(val);else return (long)val;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public long ValueFor(double elapsed){double val;if (modBy == 0)val = elapsed / factor;elseval = elapsed / factor % modBy;if (type == '0')return (long)Math.Round(val);else return (long)val;}",
    "output": "public long valueFor(double elapsed) {double val;if (modBy == 0)val = elapsed / factor;elseval = elapsed / factor % modBy;if (type == '0')return Math.round(val);else return (long) val;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public LongBuffer get(long[] dst, int dstOffset, int longCount) {byteBuffer.limit(limit * SizeOf.LONG);byteBuffer.position(position * SizeOf.LONG);if (byteBuffer instanceof DirectByteBuffer) {((DirectByteBuffer) byteBuffer).get(dst, dstOffset, longCount);} else {((HeapByteBuffer) byteBuffer).get(dst, dstOffset, longCount);}this.position += longCount;return this;}",
    "output": "public override java.nio.LongBuffer get(long[] dst, int dstOffset, int longCount){byteBuffer.limit(_limit * libcore.io.SizeOf.LONG);byteBuffer.position(_position * libcore.io.SizeOf.LONG);if (byteBuffer is java.nio.DirectByteBuffer){((java.nio.DirectByteBuffer)byteBuffer).get(dst, dstOffset, longCount);}else{((java.nio.HeapByteBuffer)byteBuffer).get(dst, dstOffset, longCount);}this._position += longCount;return this;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override java.nio.LongBuffer get(long[] dst, int dstOffset, int longCount){byteBuffer.limit(_limit * libcore.io.SizeOf.LONG);byteBuffer.position(_position * libcore.io.SizeOf.LONG);if (byteBuffer is java.nio.DirectByteBuffer){((java.nio.DirectByteBuffer)byteBuffer).get(dst, dstOffset, longCount);}else{((java.nio.HeapByteBuffer)byteBuffer).get(dst, dstOffset, longCount);}this._position += longCount;return this;}",
    "output": "public LongBuffer get(long[] dst, int dstOffset, int longCount) {byteBuffer.limit(limit * SizeOf.LONG);byteBuffer.position(position * SizeOf.LONG);if (byteBuffer instanceof DirectByteBuffer) {((DirectByteBuffer) byteBuffer).get(dst, dstOffset, longCount);} else {((HeapByteBuffer) byteBuffer).get(dst, dstOffset, longCount);}this.position += longCount;return this;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void removeErrorListeners() {_listeners.clear();}",
    "output": "public virtual void RemoveErrorListeners(){_listeners = new IAntlrErrorListener<Symbol>[0];}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual void RemoveErrorListeners(){_listeners = new IAntlrErrorListener<Symbol>[0];}",
    "output": "public void removeErrorListeners() {_listeners.clear();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public CommonTokenStream(TokenSource tokenSource, int channel) {this(tokenSource);this.channel = channel;}",
    "output": "public CommonTokenStream(ITokenSource tokenSource, int channel): this(tokenSource){this.channel = channel;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public CommonTokenStream(ITokenSource tokenSource, int channel): this(tokenSource){this.channel = channel;}",
    "output": "public CommonTokenStream(TokenSource tokenSource, int channel) {this(tokenSource);this.channel = channel;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ListObjectPoliciesResult listObjectPolicies(ListObjectPoliciesRequest request) {request = beforeClientExecution(request);return executeListObjectPolicies(request);}",
    "output": "public virtual ListObjectPoliciesResponse ListObjectPolicies(ListObjectPoliciesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListObjectPoliciesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListObjectPoliciesResponseUnmarshaller.Instance;return Invoke<ListObjectPoliciesResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual ListObjectPoliciesResponse ListObjectPolicies(ListObjectPoliciesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListObjectPoliciesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListObjectPoliciesResponseUnmarshaller.Instance;return Invoke<ListObjectPoliciesResponse>(request, options);}",
    "output": "public ListObjectPoliciesResult listObjectPolicies(ListObjectPoliciesRequest request) {request = beforeClientExecution(request);return executeListObjectPolicies(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ObjectToPack(AnyObjectId src, int type) {super(src);flags = type << TYPE_SHIFT;}",
    "output": "public ObjectToPack(AnyObjectId src, int type) : base(src){flags = type << TYPE_SHIFT;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public ObjectToPack(AnyObjectId src, int type) : base(src){flags = type << TYPE_SHIFT;}",
    "output": "public ObjectToPack(AnyObjectId src, int type) {super(src);flags = type << TYPE_SHIFT;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public int stem(char s[], int len) {int numVowels = numVowels(s, len);for (int i = 0; i < affixes.length; i++) {Affix affix = affixes[i];if (numVowels > affix.vc && len >= affix.affix.length + 3 && endsWith(s, len, affix.affix)) {len -= affix.affix.length;return affix.palatalizes ? unpalatalize(s, len) : len;}}return len;}",
    "output": "public virtual int Stem(char[] s, int len){int numVowels_Renamed = NumVowels(s, len);for (int i = 0; i < affixes.Length; i++){Affix affix = affixes[i];if (numVowels_Renamed > affix.vc && len >= affix.affix.Length + 3 && StemmerUtil.EndsWith(s, len, affix.affix)){len -= affix.affix.Length;return affix.palatalizes ? Unpalatalize(s, len) : len;}}return len;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual int Stem(char[] s, int len){int numVowels_Renamed = NumVowels(s, len);for (int i = 0; i < affixes.Length; i++){Affix affix = affixes[i];if (numVowels_Renamed > affix.vc && len >= affix.affix.Length + 3 && StemmerUtil.EndsWith(s, len, affix.affix)){len -= affix.affix.Length;return affix.palatalizes ? Unpalatalize(s, len) : len;}}return len;}",
    "output": "public int stem(char s[], int len) {int numVowels = numVowels(s, len);for (int i = 0; i < affixes.length; i++) {Affix affix = affixes[i];if (numVowels > affix.vc && len >= affix.affix.length + 3 && endsWith(s, len, affix.affix)) {len -= affix.affix.length;return affix.palatalizes ? unpalatalize(s, len) : len;}}return len;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void recover(Parser recognizer, RecognitionException e) {if ( lastErrorIndex==recognizer.getInputStream().index() &&lastErrorStates != null &&lastErrorStates.contains(recognizer.getState()) ) {recognizer.consume();}lastErrorIndex = recognizer.getInputStream().index();if ( lastErrorStates==null ) lastErrorStates = new IntervalSet();lastErrorStates.add(recognizer.getState());IntervalSet followSet = getErrorRecoverySet(recognizer);consumeUntil(recognizer, followSet);}",
    "output": "public virtual void Recover(Parser recognizer, RecognitionException e){if (lastErrorIndex == ((ITokenStream)recognizer.InputStream).Index && lastErrorStates != null && lastErrorStates.Contains(recognizer.State)){recognizer.Consume();}lastErrorIndex = ((ITokenStream)recognizer.InputStream).Index;if (lastErrorStates == null){lastErrorStates = new IntervalSet();}lastErrorStates.Add(recognizer.State);IntervalSet followSet = GetErrorRecoverySet(recognizer);ConsumeUntil(recognizer, followSet);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual void Recover(Parser recognizer, RecognitionException e){if (lastErrorIndex == ((ITokenStream)recognizer.InputStream).Index && lastErrorStates != null && lastErrorStates.Contains(recognizer.State)){recognizer.Consume();}lastErrorIndex = ((ITokenStream)recognizer.InputStream).Index;if (lastErrorStates == null){lastErrorStates = new IntervalSet();}lastErrorStates.Add(recognizer.State);IntervalSet followSet = GetErrorRecoverySet(recognizer);ConsumeUntil(recognizer, followSet);}",
    "output": "public void recover(Parser recognizer, RecognitionException e) {if ( lastErrorIndex==recognizer.getInputStream().index() &&lastErrorStates != null &&lastErrorStates.contains(recognizer.getState()) ) {recognizer.consume();}lastErrorIndex = recognizer.getInputStream().index();if ( lastErrorStates==null ) lastErrorStates = new IntervalSet();lastErrorStates.add(recognizer.getState());IntervalSet followSet = getErrorRecoverySet(recognizer);consumeUntil(recognizer, followSet);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String toFormulaString() {String value = field_3_string;int len = value.length();StringBuilder sb = new StringBuilder(len + 4);sb.append(FORMULA_DELIMITER);for (int i = 0; i < len; i++) {char c = value.charAt(i);if (c == FORMULA_DELIMITER) {sb.append(FORMULA_DELIMITER);}sb.append(c);}sb.append(FORMULA_DELIMITER);return sb.toString();}",
    "output": "public override String ToFormulaString(){String value = field_3_string;int len = value.Length;StringBuilder sb = new StringBuilder(len + 4);sb.Append(FORMULA_DELIMITER);for (int i = 0; i < len; i++){char c = value[i];if (c == FORMULA_DELIMITER){sb.Append(FORMULA_DELIMITER);}sb.Append(c);}sb.Append(FORMULA_DELIMITER);return sb.ToString();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override String ToFormulaString(){String value = field_3_string;int len = value.Length;StringBuilder sb = new StringBuilder(len + 4);sb.Append(FORMULA_DELIMITER);for (int i = 0; i < len; i++){char c = value[i];if (c == FORMULA_DELIMITER){sb.Append(FORMULA_DELIMITER);}sb.Append(c);}sb.Append(FORMULA_DELIMITER);return sb.ToString();}",
    "output": "public String toFormulaString() {String value = field_3_string;int len = value.length();StringBuilder sb = new StringBuilder(len + 4);sb.append(FORMULA_DELIMITER);for (int i = 0; i < len; i++) {char c = value.charAt(i);if (c == FORMULA_DELIMITER) {sb.append(FORMULA_DELIMITER);}sb.append(c);}sb.append(FORMULA_DELIMITER);return sb.toString();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public UnlinkFaceRequest() {super(\"LinkFace\", \"2018-07-20\", \"UnlinkFace\");setProtocol(ProtocolType.HTTPS);setMethod(MethodType.POST);}",
    "output": "public UnlinkFaceRequest(): base(\"LinkFace\", \"2018-07-20\", \"UnlinkFace\"){Protocol = ProtocolType.HTTPS;Method = MethodType.POST;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public UnlinkFaceRequest(): base(\"LinkFace\", \"2018-07-20\", \"UnlinkFace\"){Protocol = ProtocolType.HTTPS;Method = MethodType.POST;}",
    "output": "public UnlinkFaceRequest() {super(\"LinkFace\", \"2018-07-20\", \"UnlinkFace\");setProtocol(ProtocolType.HTTPS);setMethod(MethodType.POST);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ConfigurationOptionSetting(String namespace, String optionName, String value) {setNamespace(namespace);setOptionName(optionName);setValue(value);}",
    "output": "public ConfigurationOptionSetting(string awsNamespace, string optionName, string value){_awsNamespace = awsNamespace;_optionName = optionName;_value = value;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public ConfigurationOptionSetting(string awsNamespace, string optionName, string value){_awsNamespace = awsNamespace;_optionName = optionName;_value = value;}",
    "output": "public ConfigurationOptionSetting(String namespace, String optionName, String value) {setNamespace(namespace);setOptionName(optionName);setValue(value);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public CharSequence getFully(CharSequence key) {StringBuilder result = new StringBuilder(tries.size() * 2);for (int i = 0; i < tries.size(); i++) {CharSequence r = tries.get(i).getFully(key);if (r == null || (r.length() == 1 && r.charAt(0) == EOM)) {return result;}result.append(r);}return result;}",
    "output": "public override string GetFully(string key){StringBuilder result = new StringBuilder(m_tries.Count * 2);for (int i = 0; i < m_tries.Count; i++){string r = m_tries[i].GetFully(key);if (r == null || (r.Length == 1 && r[0] == EOM)){return result.ToString();}result.Append(r);}return result.ToString();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override string GetFully(string key){StringBuilder result = new StringBuilder(m_tries.Count * 2);for (int i = 0; i < m_tries.Count; i++){string r = m_tries[i].GetFully(key);if (r == null || (r.Length == 1 && r[0] == EOM)){return result.ToString();}result.Append(r);}return result.ToString();}",
    "output": "public CharSequence getFully(CharSequence key) {StringBuilder result = new StringBuilder(tries.size() * 2);for (int i = 0; i < tries.size(); i++) {CharSequence r = tries.get(i).getFully(key);if (r == null || (r.length() == 1 && r.charAt(0) == EOM)) {return result;}result.append(r);}return result;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DescribeMountTargetSecurityGroupsResult describeMountTargetSecurityGroups(DescribeMountTargetSecurityGroupsRequest request) {request = beforeClientExecution(request);return executeDescribeMountTargetSecurityGroups(request);}",
    "output": "public virtual DescribeMountTargetSecurityGroupsResponse DescribeMountTargetSecurityGroups(DescribeMountTargetSecurityGroupsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeMountTargetSecurityGroupsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeMountTargetSecurityGroupsResponseUnmarshaller.Instance;return Invoke<DescribeMountTargetSecurityGroupsResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DescribeMountTargetSecurityGroupsResponse DescribeMountTargetSecurityGroups(DescribeMountTargetSecurityGroupsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeMountTargetSecurityGroupsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeMountTargetSecurityGroupsResponseUnmarshaller.Instance;return Invoke<DescribeMountTargetSecurityGroupsResponse>(request, options);}",
    "output": "public DescribeMountTargetSecurityGroupsResult describeMountTargetSecurityGroups(DescribeMountTargetSecurityGroupsRequest request) {request = beforeClientExecution(request);return executeDescribeMountTargetSecurityGroups(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public GetApiMappingResult getApiMapping(GetApiMappingRequest request) {request = beforeClientExecution(request);return executeGetApiMapping(request);}",
    "output": "public virtual GetApiMappingResponse GetApiMapping(GetApiMappingRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetApiMappingRequestMarshaller.Instance;options.ResponseUnmarshaller = GetApiMappingResponseUnmarshaller.Instance;return Invoke<GetApiMappingResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual GetApiMappingResponse GetApiMapping(GetApiMappingRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetApiMappingRequestMarshaller.Instance;options.ResponseUnmarshaller = GetApiMappingResponseUnmarshaller.Instance;return Invoke<GetApiMappingResponse>(request, options);}",
    "output": "public GetApiMappingResult getApiMapping(GetApiMappingRequest request) {request = beforeClientExecution(request);return executeGetApiMapping(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public HttpRequest(String strUrl) {super(strUrl);}",
    "output": "public HttpRequest(string strUrl){Url = strUrl;Headers = new Dictionary<string, string>();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public HttpRequest(string strUrl){Url = strUrl;Headers = new Dictionary<string, string>();}",
    "output": "public HttpRequest(String strUrl) {super(strUrl);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public MemFuncPtg(int subExprLen) {field_1_len_ref_subexpression = subExprLen;}",
    "output": "public MemFuncPtg(int subExprLen){field_1_len_ref_subexpression = subExprLen;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public MemFuncPtg(int subExprLen){field_1_len_ref_subexpression = subExprLen;}",
    "output": "public MemFuncPtg(int subExprLen) {field_1_len_ref_subexpression = subExprLen;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public static TermStats[] getHighFreqTerms(IndexReader reader, int numTerms, String field, Comparator<TermStats> comparator) throws Exception {TermStatsQueue tiq = null;if (field != null) {Terms terms = MultiTerms.getTerms(reader, field);if (terms == null) {throw new RuntimeException(\"field \" + field + \" not found\");}TermsEnum termsEnum = terms.iterator();tiq = new TermStatsQueue(numTerms, comparator);tiq.fill(field, termsEnum);} else {Collection<String> fields = FieldInfos.getIndexedFields(reader);if (fields.size() == 0) {throw new RuntimeException(\"no fields found for this index\");}tiq = new TermStatsQueue(numTerms, comparator);for (String fieldName : fields) {Terms terms = MultiTerms.getTerms(reader, fieldName);if (terms != null) {tiq.fill(fieldName, terms.iterator());}}}TermStats[] result = new TermStats[tiq.size()];int count = tiq.size() - 1;while (tiq.size() != 0) {result[count] = tiq.pop();count--;}return result;}",
    "output": "public static TermStats[] GetHighFreqTerms(IndexReader reader, int numTerms, string field, IComparer<TermStats> comparer){TermStatsQueue tiq = null;if (field != null){Fields fields = MultiFields.GetFields(reader);if (fields == null){throw new Exception(\"field \" + field + \" not found\");}Terms terms = fields.GetTerms(field);if (terms != null){TermsEnum termsEnum = terms.GetIterator(null);tiq = new TermStatsQueue(numTerms, comparer);tiq.Fill(field, termsEnum);}}else{Fields fields = MultiFields.GetFields(reader);if (fields == null){throw new Exception(\"no fields found for this index\");}tiq = new TermStatsQueue(numTerms, comparer);foreach (string fieldName in fields){Terms terms = fields.GetTerms(fieldName);if (terms != null){tiq.Fill(fieldName, terms.GetIterator(null));}}}TermStats[] result = new TermStats[tiq.Count];int count = tiq.Count - 1;while (tiq.Count != 0){result[count] = tiq.Pop();count--;}return result;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public static TermStats[] GetHighFreqTerms(IndexReader reader, int numTerms, string field, IComparer<TermStats> comparer){TermStatsQueue tiq = null;if (field != null){Fields fields = MultiFields.GetFields(reader);if (fields == null){throw new Exception(\"field \" + field + \" not found\");}Terms terms = fields.GetTerms(field);if (terms != null){TermsEnum termsEnum = terms.GetIterator(null);tiq = new TermStatsQueue(numTerms, comparer);tiq.Fill(field, termsEnum);}}else{Fields fields = MultiFields.GetFields(reader);if (fields == null){throw new Exception(\"no fields found for this index\");}tiq = new TermStatsQueue(numTerms, comparer);foreach (string fieldName in fields){Terms terms = fields.GetTerms(fieldName);if (terms != null){tiq.Fill(fieldName, terms.GetIterator(null));}}}TermStats[] result = new TermStats[tiq.Count];int count = tiq.Count - 1;while (tiq.Count != 0){result[count] = tiq.Pop();count--;}return result;}",
    "output": "public static TermStats[] getHighFreqTerms(IndexReader reader, int numTerms, String field, Comparator<TermStats> comparator) throws Exception {TermStatsQueue tiq = null;if (field != null) {Terms terms = MultiTerms.getTerms(reader, field);if (terms == null) {throw new RuntimeException(\"field \" + field + \" not found\");}TermsEnum termsEnum = terms.iterator();tiq = new TermStatsQueue(numTerms, comparator);tiq.fill(field, termsEnum);} else {Collection<String> fields = FieldInfos.getIndexedFields(reader);if (fields.size() == 0) {throw new RuntimeException(\"no fields found for this index\");}tiq = new TermStatsQueue(numTerms, comparator);for (String fieldName : fields) {Terms terms = MultiTerms.getTerms(reader, fieldName);if (terms != null) {tiq.fill(fieldName, terms.iterator());}}}TermStats[] result = new TermStats[tiq.size()];int count = tiq.size() - 1;while (tiq.size() != 0) {result[count] = tiq.pop();count--;}return result;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DeleteApnsVoipChannelResult deleteApnsVoipChannel(DeleteApnsVoipChannelRequest request) {request = beforeClientExecution(request);return executeDeleteApnsVoipChannel(request);}",
    "output": "public virtual DeleteApnsVoipChannelResponse DeleteApnsVoipChannel(DeleteApnsVoipChannelRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteApnsVoipChannelRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteApnsVoipChannelResponseUnmarshaller.Instance;return Invoke<DeleteApnsVoipChannelResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DeleteApnsVoipChannelResponse DeleteApnsVoipChannel(DeleteApnsVoipChannelRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteApnsVoipChannelRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteApnsVoipChannelResponseUnmarshaller.Instance;return Invoke<DeleteApnsVoipChannelResponse>(request, options);}",
    "output": "public DeleteApnsVoipChannelResult deleteApnsVoipChannel(DeleteApnsVoipChannelRequest request) {request = beforeClientExecution(request);return executeDeleteApnsVoipChannel(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ListFacesResult listFaces(ListFacesRequest request) {request = beforeClientExecution(request);return executeListFaces(request);}",
    "output": "public virtual ListFacesResponse ListFaces(ListFacesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListFacesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListFacesResponseUnmarshaller.Instance;return Invoke<ListFacesResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual ListFacesResponse ListFaces(ListFacesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListFacesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListFacesResponseUnmarshaller.Instance;return Invoke<ListFacesResponse>(request, options);}",
    "output": "public ListFacesResult listFaces(ListFacesRequest request) {request = beforeClientExecution(request);return executeListFaces(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ShapeFieldCacheDistanceValueSource(SpatialContext ctx,ShapeFieldCacheProvider<Point> provider, Point from, double multiplier) {this.ctx = ctx;this.from = from;this.provider = provider;this.multiplier = multiplier;}",
    "output": "public ShapeFieldCacheDistanceValueSource(SpatialContext ctx,ShapeFieldCacheProvider<IPoint> provider, IPoint from, double multiplier){this.ctx = ctx;this.from = from;this.provider = provider;this.multiplier = multiplier;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public ShapeFieldCacheDistanceValueSource(SpatialContext ctx,ShapeFieldCacheProvider<IPoint> provider, IPoint from, double multiplier){this.ctx = ctx;this.from = from;this.provider = provider;this.multiplier = multiplier;}",
    "output": "public ShapeFieldCacheDistanceValueSource(SpatialContext ctx,ShapeFieldCacheProvider<Point> provider, Point from, double multiplier) {this.ctx = ctx;this.from = from;this.provider = provider;this.multiplier = multiplier;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public char get(int index) {checkIndex(index);return sequence.charAt(index);}",
    "output": "public override char get(int index){checkIndex(index);return sequence[index];}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override char get(int index){checkIndex(index);return sequence[index];}",
    "output": "public char get(int index) {checkIndex(index);return sequence.charAt(index);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public UpdateConfigurationProfileResult updateConfigurationProfile(UpdateConfigurationProfileRequest request) {request = beforeClientExecution(request);return executeUpdateConfigurationProfile(request);}",
    "output": "public virtual UpdateConfigurationProfileResponse UpdateConfigurationProfile(UpdateConfigurationProfileRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateConfigurationProfileRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateConfigurationProfileResponseUnmarshaller.Instance;return Invoke<UpdateConfigurationProfileResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual UpdateConfigurationProfileResponse UpdateConfigurationProfile(UpdateConfigurationProfileRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateConfigurationProfileRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateConfigurationProfileResponseUnmarshaller.Instance;return Invoke<UpdateConfigurationProfileResponse>(request, options);}",
    "output": "public UpdateConfigurationProfileResult updateConfigurationProfile(UpdateConfigurationProfileRequest request) {request = beforeClientExecution(request);return executeUpdateConfigurationProfile(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DescribeLifecycleHooksResult describeLifecycleHooks(DescribeLifecycleHooksRequest request) {request = beforeClientExecution(request);return executeDescribeLifecycleHooks(request);}",
    "output": "public virtual DescribeLifecycleHooksResponse DescribeLifecycleHooks(DescribeLifecycleHooksRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeLifecycleHooksRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeLifecycleHooksResponseUnmarshaller.Instance;return Invoke<DescribeLifecycleHooksResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DescribeLifecycleHooksResponse DescribeLifecycleHooks(DescribeLifecycleHooksRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeLifecycleHooksRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeLifecycleHooksResponseUnmarshaller.Instance;return Invoke<DescribeLifecycleHooksResponse>(request, options);}",
    "output": "public DescribeLifecycleHooksResult describeLifecycleHooks(DescribeLifecycleHooksRequest request) {request = beforeClientExecution(request);return executeDescribeLifecycleHooks(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DescribeHostReservationsResult describeHostReservations(DescribeHostReservationsRequest request) {request = beforeClientExecution(request);return executeDescribeHostReservations(request);}",
    "output": "public virtual DescribeHostReservationsResponse DescribeHostReservations(DescribeHostReservationsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeHostReservationsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeHostReservationsResponseUnmarshaller.Instance;return Invoke<DescribeHostReservationsResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DescribeHostReservationsResponse DescribeHostReservations(DescribeHostReservationsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeHostReservationsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeHostReservationsResponseUnmarshaller.Instance;return Invoke<DescribeHostReservationsResponse>(request, options);}",
    "output": "public DescribeHostReservationsResult describeHostReservations(DescribeHostReservationsRequest request) {request = beforeClientExecution(request);return executeDescribeHostReservations(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public static PredictionContext fromRuleContext(ATN atn, RuleContext outerContext) {if ( outerContext==null ) outerContext = RuleContext.EMPTY;if ( outerContext.parent==null || outerContext==RuleContext.EMPTY ) {return PredictionContext.EMPTY;}PredictionContext parent = EMPTY;parent = PredictionContext.fromRuleContext(atn, outerContext.parent);ATNState state = atn.states.get(outerContext.invokingState);RuleTransition transition = (RuleTransition)state.transition(0);return SingletonPredictionContext.create(parent, transition.followState.stateNumber);}",
    "output": "public static PredictionContext FromRuleContext(ATN atn, RuleContext outerContext){if (outerContext == null)outerContext = ParserRuleContext.EMPTY;if (outerContext.Parent == null || outerContext == ParserRuleContext.EMPTY)return PredictionContext.EMPTY;PredictionContext parent = PredictionContext.FromRuleContext(atn, outerContext.Parent);ATNState state = atn.states[outerContext.invokingState];RuleTransition transition = (RuleTransition)state.Transition(0);return parent.GetChild(transition.followState.stateNumber);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public static PredictionContext FromRuleContext(ATN atn, RuleContext outerContext){if (outerContext == null)outerContext = ParserRuleContext.EMPTY;if (outerContext.Parent == null || outerContext == ParserRuleContext.EMPTY)return PredictionContext.EMPTY;PredictionContext parent = PredictionContext.FromRuleContext(atn, outerContext.Parent);ATNState state = atn.states[outerContext.invokingState];RuleTransition transition = (RuleTransition)state.Transition(0);return parent.GetChild(transition.followState.stateNumber);}",
    "output": "public static PredictionContext fromRuleContext(ATN atn, RuleContext outerContext) {if ( outerContext==null ) outerContext = RuleContext.EMPTY;if ( outerContext.parent==null || outerContext==RuleContext.EMPTY ) {return PredictionContext.EMPTY;}PredictionContext parent = EMPTY;parent = PredictionContext.fromRuleContext(atn, outerContext.parent);ATNState state = atn.states.get(outerContext.invokingState);RuleTransition transition = (RuleTransition)state.transition(0);return SingletonPredictionContext.create(parent, transition.followState.stateNumber);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String toString() {StringBuilder buffer = new StringBuilder();buffer.append(\"[SXVDEX]\\n\");buffer.append(\"    .grbit1 =\").append(HexDump.intToHex(_grbit1)).append(\"\\n\");buffer.append(\"    .grbit2 =\").append(HexDump.byteToHex(_grbit2)).append(\"\\n\");buffer.append(\"    .citmShow =\").append(HexDump.byteToHex(_citmShow)).append(\"\\n\");buffer.append(\"    .isxdiSort =\").append(HexDump.shortToHex(_isxdiSort)).append(\"\\n\");buffer.append(\"    .isxdiShow =\").append(HexDump.shortToHex(_isxdiShow)).append(\"\\n\");buffer.append(\"    .subtotalName =\").append(_subtotalName).append(\"\\n\");buffer.append(\"[/SXVDEX]\\n\");return buffer.toString();}",
    "output": "public override string ToString(){StringBuilder buffer = new StringBuilder();buffer.Append(\"[SXVDEX]\\n\");buffer.Append(\"    .grbit1 =\").Append(HexDump.IntToHex(grbit1)).Append(\"\\n\");buffer.Append(\"    .grbit2 =\").Append(HexDump.ByteToHex(grbit2)).Append(\"\\n\");buffer.Append(\"    .citmShow =\").Append(HexDump.ByteToHex(citmShow)).Append(\"\\n\");buffer.Append(\"    .isxdiSort =\").Append(HexDump.ShortToHex(isxdiSort)).Append(\"\\n\");buffer.Append(\"    .isxdiShow =\").Append(HexDump.ShortToHex(isxdiShow)).Append(\"\\n\");buffer.Append(\"    .subName =\").Append(subName).Append(\"\\n\");buffer.Append(\"[/SXVDEX]\\n\");return buffer.ToString();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override string ToString(){StringBuilder buffer = new StringBuilder();buffer.Append(\"[SXVDEX]\\n\");buffer.Append(\"    .grbit1 =\").Append(HexDump.IntToHex(grbit1)).Append(\"\\n\");buffer.Append(\"    .grbit2 =\").Append(HexDump.ByteToHex(grbit2)).Append(\"\\n\");buffer.Append(\"    .citmShow =\").Append(HexDump.ByteToHex(citmShow)).Append(\"\\n\");buffer.Append(\"    .isxdiSort =\").Append(HexDump.ShortToHex(isxdiSort)).Append(\"\\n\");buffer.Append(\"    .isxdiShow =\").Append(HexDump.ShortToHex(isxdiShow)).Append(\"\\n\");buffer.Append(\"    .subName =\").Append(subName).Append(\"\\n\");buffer.Append(\"[/SXVDEX]\\n\");return buffer.ToString();}",
    "output": "public String toString() {StringBuilder buffer = new StringBuilder();buffer.append(\"[SXVDEX]\\n\");buffer.append(\"    .grbit1 =\").append(HexDump.intToHex(_grbit1)).append(\"\\n\");buffer.append(\"    .grbit2 =\").append(HexDump.byteToHex(_grbit2)).append(\"\\n\");buffer.append(\"    .citmShow =\").append(HexDump.byteToHex(_citmShow)).append(\"\\n\");buffer.append(\"    .isxdiSort =\").append(HexDump.shortToHex(_isxdiSort)).append(\"\\n\");buffer.append(\"    .isxdiShow =\").append(HexDump.shortToHex(_isxdiShow)).append(\"\\n\");buffer.append(\"    .subtotalName =\").append(_subtotalName).append(\"\\n\");buffer.append(\"[/SXVDEX]\\n\");return buffer.toString();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String toString() {StringBuilder r = new StringBuilder();r.append(\"BlameResult: \"); r.append(getResultPath());return r.toString();}",
    "output": "public override string ToString(){StringBuilder r = new StringBuilder();r.Append(\"BlameResult: \");r.Append(GetResultPath());return r.ToString();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override string ToString(){StringBuilder r = new StringBuilder();r.Append(\"BlameResult: \");r.Append(GetResultPath());return r.ToString();}",
    "output": "public String toString() {StringBuilder r = new StringBuilder();r.append(\"BlameResult: \"); r.append(getResultPath());return r.toString();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ListChangeSetsResult listChangeSets(ListChangeSetsRequest request) {request = beforeClientExecution(request);return executeListChangeSets(request);}",
    "output": "public virtual ListChangeSetsResponse ListChangeSets(ListChangeSetsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListChangeSetsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListChangeSetsResponseUnmarshaller.Instance;return Invoke<ListChangeSetsResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual ListChangeSetsResponse ListChangeSets(ListChangeSetsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListChangeSetsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListChangeSetsResponseUnmarshaller.Instance;return Invoke<ListChangeSetsResponse>(request, options);}",
    "output": "public ListChangeSetsResult listChangeSets(ListChangeSetsRequest request) {request = beforeClientExecution(request);return executeListChangeSets(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public boolean isAllowNonFastForwards() {return allowNonFastForwards;}",
    "output": "public virtual bool IsAllowNonFastForwards(){return allowNonFastForwards;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual bool IsAllowNonFastForwards(){return allowNonFastForwards;}",
    "output": "public boolean isAllowNonFastForwards() {return allowNonFastForwards;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public FeatRecord() {futureHeader = new FtrHeader();futureHeader.setRecordType(sid);}",
    "output": "public FeatRecord(){futureHeader = new FtrHeader();futureHeader.RecordType = (sid);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public FeatRecord(){futureHeader = new FtrHeader();futureHeader.RecordType = (sid);}",
    "output": "public FeatRecord() {futureHeader = new FtrHeader();futureHeader.setRecordType(sid);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ShortBuffer put(short c) {throw new ReadOnlyBufferException();}",
    "output": "public override java.nio.ShortBuffer put(short c){throw new java.nio.ReadOnlyBufferException();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override java.nio.ShortBuffer put(short c){throw new java.nio.ReadOnlyBufferException();}",
    "output": "public ShortBuffer put(short c) {throw new ReadOnlyBufferException();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void setQuery(CharSequence query) {this.query = query;this.message = new MessageImpl(QueryParserMessages.INVALID_SYNTAX_CANNOT_PARSE, query, \"\");}",
    "output": "public virtual void SetQuery(string query){this.query = query;this.m_message = new Message(QueryParserMessages.INVALID_SYNTAX_CANNOT_PARSE, query, \"\");}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual void SetQuery(string query){this.query = query;this.m_message = new Message(QueryParserMessages.INVALID_SYNTAX_CANNOT_PARSE, query, \"\");}",
    "output": "public void setQuery(CharSequence query) {this.query = query;this.message = new MessageImpl(QueryParserMessages.INVALID_SYNTAX_CANNOT_PARSE, query, \"\");}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public StashApplyCommand stashApply() {return new StashApplyCommand(repo);}",
    "output": "public virtual StashApplyCommand StashApply(){return new StashApplyCommand(repo);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual StashApplyCommand StashApply(){return new StashApplyCommand(repo);}",
    "output": "public StashApplyCommand stashApply() {return new StashApplyCommand(repo);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public Set<String> nameSet() {return Collections.unmodifiableSet(dictionary.values());}",
    "output": "public ICollection NameSet(){return dictionaryNameToID.Keys;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public ICollection NameSet(){return dictionaryNameToID.Keys;}",
    "output": "public Set<String> nameSet() {return Collections.unmodifiableSet(dictionary.values());}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public static int getEffectivePort(String scheme, int specifiedPort) {if (specifiedPort != -1) {return specifiedPort;}if (\"http\".equalsIgnoreCase(scheme)) {return 80;} else if (\"https\".equalsIgnoreCase(scheme)) {return 443;} else {return -1;}}",
    "output": "public static int getEffectivePort(string scheme, int specifiedPort){if (specifiedPort != -1){return specifiedPort;}if (Sharpen.StringHelper.EqualsIgnoreCase(\"http\", scheme)){return 80;}else{if (Sharpen.StringHelper.EqualsIgnoreCase(\"https\", scheme)){return 443;}else{return -1;}}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public static int getEffectivePort(string scheme, int specifiedPort){if (specifiedPort != -1){return specifiedPort;}if (Sharpen.StringHelper.EqualsIgnoreCase(\"http\", scheme)){return 80;}else{if (Sharpen.StringHelper.EqualsIgnoreCase(\"https\", scheme)){return 443;}else{return -1;}}}",
    "output": "public static int getEffectivePort(String scheme, int specifiedPort) {if (specifiedPort != -1) {return specifiedPort;}if (\"http\".equalsIgnoreCase(scheme)) {return 80;} else if (\"https\".equalsIgnoreCase(scheme)) {return 443;} else {return -1;}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ListAssessmentTemplatesResult listAssessmentTemplates(ListAssessmentTemplatesRequest request) {request = beforeClientExecution(request);return executeListAssessmentTemplates(request);}",
    "output": "public virtual ListAssessmentTemplatesResponse ListAssessmentTemplates(ListAssessmentTemplatesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListAssessmentTemplatesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListAssessmentTemplatesResponseUnmarshaller.Instance;return Invoke<ListAssessmentTemplatesResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual ListAssessmentTemplatesResponse ListAssessmentTemplates(ListAssessmentTemplatesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListAssessmentTemplatesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListAssessmentTemplatesResponseUnmarshaller.Instance;return Invoke<ListAssessmentTemplatesResponse>(request, options);}",
    "output": "public ListAssessmentTemplatesResult listAssessmentTemplates(ListAssessmentTemplatesRequest request) {request = beforeClientExecution(request);return executeListAssessmentTemplates(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public Cluster restoreFromClusterSnapshot(RestoreFromClusterSnapshotRequest request) {request = beforeClientExecution(request);return executeRestoreFromClusterSnapshot(request);}",
    "output": "public virtual RestoreFromClusterSnapshotResponse RestoreFromClusterSnapshot(RestoreFromClusterSnapshotRequest request){var options = new InvokeOptions();options.RequestMarshaller = RestoreFromClusterSnapshotRequestMarshaller.Instance;options.ResponseUnmarshaller = RestoreFromClusterSnapshotResponseUnmarshaller.Instance;return Invoke<RestoreFromClusterSnapshotResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual RestoreFromClusterSnapshotResponse RestoreFromClusterSnapshot(RestoreFromClusterSnapshotRequest request){var options = new InvokeOptions();options.RequestMarshaller = RestoreFromClusterSnapshotRequestMarshaller.Instance;options.ResponseUnmarshaller = RestoreFromClusterSnapshotResponseUnmarshaller.Instance;return Invoke<RestoreFromClusterSnapshotResponse>(request, options);}",
    "output": "public Cluster restoreFromClusterSnapshot(RestoreFromClusterSnapshotRequest request) {request = beforeClientExecution(request);return executeRestoreFromClusterSnapshot(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void addShape(HSSFShape shape) {shape.setPatriarch(this.getPatriarch());shape.setParent(this);shapes.add(shape);}",
    "output": "public void AddShape(HSSFShape shape){shape.Patriarch = (this.Patriarch);shape.Parent = (this);shapes.Add(shape);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public void AddShape(HSSFShape shape){shape.Patriarch = (this.Patriarch);shape.Parent = (this);shapes.Add(shape);}",
    "output": "public void addShape(HSSFShape shape) {shape.setPatriarch(this.getPatriarch());shape.setParent(this);shapes.add(shape);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public boolean equals(Object o) {if (this == o) return true;if (o == null || getClass() != o.getClass()) return false;FacetEntry that = (FacetEntry) o;if (count != that.count) return false;if (!value.equals(that.value)) return false;return true;}",
    "output": "public override bool Equals(object o){if (this == o) return true;if (o == null || GetType() != o.GetType()) return false;FacetEntry that = (FacetEntry)o;if (count != that.count) return false;if (!value.Equals(that.value)) return false;return true;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override bool Equals(object o){if (this == o) return true;if (o == null || GetType() != o.GetType()) return false;FacetEntry that = (FacetEntry)o;if (count != that.count) return false;if (!value.Equals(that.value)) return false;return true;}",
    "output": "public boolean equals(Object o) {if (this == o) return true;if (o == null || getClass() != o.getClass()) return false;FacetEntry that = (FacetEntry) o;if (count != that.count) return false;if (!value.equals(that.value)) return false;return true;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public static final int prev(byte[] b, int ptr, char chrA) {if (ptr == b.length)--ptr;while (ptr >= 0) {if (b[ptr--] == chrA)return ptr;}return ptr;}",
    "output": "public static int Prev(byte[] b, int ptr, char chrA){if (ptr == b.Length){--ptr;}while (ptr >= 0){if (b[ptr--] == chrA){return ptr;}}return ptr;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public static int Prev(byte[] b, int ptr, char chrA){if (ptr == b.Length){--ptr;}while (ptr >= 0){if (b[ptr--] == chrA){return ptr;}}return ptr;}",
    "output": "public static final int prev(byte[] b, int ptr, char chrA) {if (ptr == b.length)--ptr;while (ptr >= 0) {if (b[ptr--] == chrA)return ptr;}return ptr;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public final boolean isDeltaRepresentation() {return deltaBase != null;}",
    "output": "public virtual bool IsDeltaRepresentation(){return deltaBase != null;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual bool IsDeltaRepresentation(){return deltaBase != null;}",
    "output": "public final boolean isDeltaRepresentation() {return deltaBase != null;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public Token emitEOF() {int cpos = getCharPositionInLine();int line = getLine();Token eof = _factory.create(_tokenFactorySourcePair, Token.EOF, null, Token.DEFAULT_CHANNEL, _input.index(), _input.index()-1,line, cpos);emit(eof);return eof;}",
    "output": "public virtual IToken EmitEOF(){int cpos = Column;int line = Line;IToken eof = _factory.Create(_tokenFactorySourcePair, TokenConstants.EOF, null, TokenConstants.DefaultChannel, _input.Index, _input.Index - 1, line, cpos);Emit(eof);return eof;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual IToken EmitEOF(){int cpos = Column;int line = Line;IToken eof = _factory.Create(_tokenFactorySourcePair, TokenConstants.EOF, null, TokenConstants.DefaultChannel, _input.Index, _input.Index - 1, line, cpos);Emit(eof);return eof;}",
    "output": "public Token emitEOF() {int cpos = getCharPositionInLine();int line = getLine();Token eof = _factory.create(_tokenFactorySourcePair, Token.EOF, null, Token.DEFAULT_CHANNEL, _input.index(), _input.index()-1,line, cpos);emit(eof);return eof;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public UpdateUserRequest(String userName) {setUserName(userName);}",
    "output": "public UpdateUserRequest(string userName){_userName = userName;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public UpdateUserRequest(string userName){_userName = userName;}",
    "output": "public UpdateUserRequest(String userName) {setUserName(userName);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public RevFilter negate() {return NotRevFilter.create(this);}",
    "output": "public virtual RevFilter Negate(){return NotRevFilter.Create(this);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual RevFilter Negate(){return NotRevFilter.Create(this);}",
    "output": "public RevFilter negate() {return NotRevFilter.create(this);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void setTagger(PersonIdent taggerIdent) {tagger = taggerIdent;}",
    "output": "public virtual void SetTagger(PersonIdent taggerIdent){tagger = taggerIdent;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual void SetTagger(PersonIdent taggerIdent){tagger = taggerIdent;}",
    "output": "public void setTagger(PersonIdent taggerIdent) {tagger = taggerIdent;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public static BufferSize automatic() {Runtime rt = Runtime.getRuntime();final long max = rt.maxMemory(); final long total = rt.totalMemory(); final long free = rt.freeMemory(); final long totalAvailableBytes = max - total + free;long sortBufferByteSize = free/2;final long minBufferSizeBytes = MIN_BUFFER_SIZE_MB*MB;if (sortBufferByteSize <  minBufferSizeBytes|| totalAvailableBytes > 10 * minBufferSizeBytes) { if (totalAvailableBytes/2 > minBufferSizeBytes) { sortBufferByteSize = totalAvailableBytes/2; } else {sortBufferByteSize = Math.max(ABSOLUTE_MIN_SORT_BUFFER_SIZE, sortBufferByteSize);}}return new BufferSize(Math.min((long)Integer.MAX_VALUE, sortBufferByteSize));}",
    "output": "public static BufferSize Automatic(){long max, total, free;using (var proc = Process.GetCurrentProcess()){max = proc.PeakVirtualMemorySize64; total = proc.VirtualMemorySize64; free = proc.PrivateMemorySize64; }long totalAvailableBytes = max - total + free;long sortBufferByteSize = free / 2;long minBufferSizeBytes = MIN_BUFFER_SIZE_MB * MB;if (sortBufferByteSize < minBufferSizeBytes || totalAvailableBytes > 10 * minBufferSizeBytes) {if (totalAvailableBytes / 2 > minBufferSizeBytes) {sortBufferByteSize = totalAvailableBytes / 2; }else{sortBufferByteSize = Math.Max(ABSOLUTE_MIN_SORT_BUFFER_SIZE, sortBufferByteSize);}}return new BufferSize(Math.Min((long)int.MaxValue, sortBufferByteSize));}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public static BufferSize Automatic(){long max, total, free;using (var proc = Process.GetCurrentProcess()){max = proc.PeakVirtualMemorySize64; total = proc.VirtualMemorySize64; free = proc.PrivateMemorySize64; }long totalAvailableBytes = max - total + free;long sortBufferByteSize = free / 2;long minBufferSizeBytes = MIN_BUFFER_SIZE_MB * MB;if (sortBufferByteSize < minBufferSizeBytes || totalAvailableBytes > 10 * minBufferSizeBytes) {if (totalAvailableBytes / 2 > minBufferSizeBytes) {sortBufferByteSize = totalAvailableBytes / 2; }else{sortBufferByteSize = Math.Max(ABSOLUTE_MIN_SORT_BUFFER_SIZE, sortBufferByteSize);}}return new BufferSize(Math.Min((long)int.MaxValue, sortBufferByteSize));}",
    "output": "public static BufferSize automatic() {Runtime rt = Runtime.getRuntime();final long max = rt.maxMemory(); final long total = rt.totalMemory(); final long free = rt.freeMemory(); final long totalAvailableBytes = max - total + free;long sortBufferByteSize = free/2;final long minBufferSizeBytes = MIN_BUFFER_SIZE_MB*MB;if (sortBufferByteSize <  minBufferSizeBytes|| totalAvailableBytes > 10 * minBufferSizeBytes) { if (totalAvailableBytes/2 > minBufferSizeBytes) { sortBufferByteSize = totalAvailableBytes/2; } else {sortBufferByteSize = Math.max(ABSOLUTE_MIN_SORT_BUFFER_SIZE, sortBufferByteSize);}}return new BufferSize(Math.min((long)Integer.MAX_VALUE, sortBufferByteSize));}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public static int trimTrailingWhitespace(byte[] raw, int start, int end) {int ptr = end - 1;while (start <= ptr && isWhitespace(raw[ptr]))ptr--;return ptr + 1;}",
    "output": "public static int TrimTrailingWhitespace(byte[] raw, int start, int end){int ptr = end - 1;while (start <= ptr && IsWhitespace(raw[ptr])){ptr--;}return ptr + 1;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public static int TrimTrailingWhitespace(byte[] raw, int start, int end){int ptr = end - 1;while (start <= ptr && IsWhitespace(raw[ptr])){ptr--;}return ptr + 1;}",
    "output": "public static int trimTrailingWhitespace(byte[] raw, int start, int end) {int ptr = end - 1;while (start <= ptr && isWhitespace(raw[ptr]))ptr--;return ptr + 1;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public TopMarginRecord( RecordInputStream in ) {field_1_margin = in.readDouble();}",
    "output": "public TopMarginRecord(RecordInputStream in1){field_1_margin = in1.ReadDouble();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public TopMarginRecord(RecordInputStream in1){field_1_margin = in1.ReadDouble();}",
    "output": "public TopMarginRecord( RecordInputStream in ) {field_1_margin = in.readDouble();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public RetrieveEnvironmentInfoRequest(EnvironmentInfoType infoType) {setInfoType(infoType.toString());}",
    "output": "public RetrieveEnvironmentInfoRequest(EnvironmentInfoType infoType){_infoType = infoType;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public RetrieveEnvironmentInfoRequest(EnvironmentInfoType infoType){_infoType = infoType;}",
    "output": "public RetrieveEnvironmentInfoRequest(EnvironmentInfoType infoType) {setInfoType(infoType.toString());}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public CreatePlayerSessionsResult createPlayerSessions(CreatePlayerSessionsRequest request) {request = beforeClientExecution(request);return executeCreatePlayerSessions(request);}",
    "output": "public virtual CreatePlayerSessionsResponse CreatePlayerSessions(CreatePlayerSessionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreatePlayerSessionsRequestMarshaller.Instance;options.ResponseUnmarshaller = CreatePlayerSessionsResponseUnmarshaller.Instance;return Invoke<CreatePlayerSessionsResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual CreatePlayerSessionsResponse CreatePlayerSessions(CreatePlayerSessionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreatePlayerSessionsRequestMarshaller.Instance;options.ResponseUnmarshaller = CreatePlayerSessionsResponseUnmarshaller.Instance;return Invoke<CreatePlayerSessionsResponse>(request, options);}",
    "output": "public CreatePlayerSessionsResult createPlayerSessions(CreatePlayerSessionsRequest request) {request = beforeClientExecution(request);return executeCreatePlayerSessions(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public CreateProxySessionResult createProxySession(CreateProxySessionRequest request) {request = beforeClientExecution(request);return executeCreateProxySession(request);}",
    "output": "public virtual CreateProxySessionResponse CreateProxySession(CreateProxySessionRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateProxySessionRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateProxySessionResponseUnmarshaller.Instance;return Invoke<CreateProxySessionResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual CreateProxySessionResponse CreateProxySession(CreateProxySessionRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateProxySessionRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateProxySessionResponseUnmarshaller.Instance;return Invoke<CreateProxySessionResponse>(request, options);}",
    "output": "public CreateProxySessionResult createProxySession(CreateProxySessionRequest request) {request = beforeClientExecution(request);return executeCreateProxySession(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public int getObjectType() {return type;}",
    "output": "public virtual int GetObjectType(){return type;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual int GetObjectType(){return type;}",
    "output": "public int getObjectType() {return type;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String getScheme() {return scheme;}",
    "output": "public virtual string GetScheme(){return scheme;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual string GetScheme(){return scheme;}",
    "output": "public String getScheme() {return scheme;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void characters(char[] ch, int start, int length) {contents.append(ch, start, length);}",
    "output": "public override void Characters(char[] ch, int start, int length){contents.Append(ch, start, length);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override void Characters(char[] ch, int start, int length){contents.Append(ch, start, length);}",
    "output": "public void characters(char[] ch, int start, int length) {contents.append(ch, start, length);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public FetchAlbumTagPhotosRequest() {super(\"CloudPhoto\", \"2017-07-11\", \"FetchAlbumTagPhotos\", \"cloudphoto\");setProtocol(ProtocolType.HTTPS);}",
    "output": "public FetchAlbumTagPhotosRequest(): base(\"CloudPhoto\", \"2017-07-11\", \"FetchAlbumTagPhotos\", \"cloudphoto\", \"openAPI\"){Protocol = ProtocolType.HTTPS;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public FetchAlbumTagPhotosRequest(): base(\"CloudPhoto\", \"2017-07-11\", \"FetchAlbumTagPhotos\", \"cloudphoto\", \"openAPI\"){Protocol = ProtocolType.HTTPS;}",
    "output": "public FetchAlbumTagPhotosRequest() {super(\"CloudPhoto\", \"2017-07-11\", \"FetchAlbumTagPhotos\", \"cloudphoto\");setProtocol(ProtocolType.HTTPS);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DeleteMembersResult deleteMembers(DeleteMembersRequest request) {request = beforeClientExecution(request);return executeDeleteMembers(request);}",
    "output": "public virtual DeleteMembersResponse DeleteMembers(DeleteMembersRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteMembersRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteMembersResponseUnmarshaller.Instance;return Invoke<DeleteMembersResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DeleteMembersResponse DeleteMembers(DeleteMembersRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteMembersRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteMembersResponseUnmarshaller.Instance;return Invoke<DeleteMembersResponse>(request, options);}",
    "output": "public DeleteMembersResult deleteMembers(DeleteMembersRequest request) {request = beforeClientExecution(request);return executeDeleteMembers(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public GetContactReachabilityStatusResult getContactReachabilityStatus(GetContactReachabilityStatusRequest request) {request = beforeClientExecution(request);return executeGetContactReachabilityStatus(request);}",
    "output": "public virtual GetContactReachabilityStatusResponse GetContactReachabilityStatus(GetContactReachabilityStatusRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetContactReachabilityStatusRequestMarshaller.Instance;options.ResponseUnmarshaller = GetContactReachabilityStatusResponseUnmarshaller.Instance;return Invoke<GetContactReachabilityStatusResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual GetContactReachabilityStatusResponse GetContactReachabilityStatus(GetContactReachabilityStatusRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetContactReachabilityStatusRequestMarshaller.Instance;options.ResponseUnmarshaller = GetContactReachabilityStatusResponseUnmarshaller.Instance;return Invoke<GetContactReachabilityStatusResponse>(request, options);}",
    "output": "public GetContactReachabilityStatusResult getContactReachabilityStatus(GetContactReachabilityStatusRequest request) {request = beforeClientExecution(request);return executeGetContactReachabilityStatus(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "@Override public boolean remove(Object o) {return Impl.this.remove(o) != null;}",
    "output": "public override bool remove(object o){lock (this._enclosing){int oldSize = this._enclosing._size;this._enclosing.remove(o);return this._enclosing._size != oldSize;}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override bool remove(object o){lock (this._enclosing){int oldSize = this._enclosing._size;this._enclosing.remove(o);return this._enclosing._size != oldSize;}}",
    "output": "@Override public boolean remove(Object o) {return Impl.this.remove(o) != null;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public E last() {return backingMap.lastKey();}",
    "output": "public virtual E last(){return backingMap.lastKey();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual E last(){return backingMap.lastKey();}",
    "output": "public E last() {return backingMap.lastKey();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public CreateStreamingDistributionResult createStreamingDistribution(CreateStreamingDistributionRequest request) {request = beforeClientExecution(request);return executeCreateStreamingDistribution(request);}",
    "output": "public virtual CreateStreamingDistributionResponse CreateStreamingDistribution(CreateStreamingDistributionRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateStreamingDistributionRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateStreamingDistributionResponseUnmarshaller.Instance;return Invoke<CreateStreamingDistributionResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual CreateStreamingDistributionResponse CreateStreamingDistribution(CreateStreamingDistributionRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateStreamingDistributionRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateStreamingDistributionResponseUnmarshaller.Instance;return Invoke<CreateStreamingDistributionResponse>(request, options);}",
    "output": "public CreateStreamingDistributionResult createStreamingDistribution(CreateStreamingDistributionRequest request) {request = beforeClientExecution(request);return executeCreateStreamingDistribution(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public boolean isAbsolute() {return absolute;}",
    "output": "public bool isAbsolute(){return absolute;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public bool isAbsolute(){return absolute;}",
    "output": "public boolean isAbsolute() {return absolute;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DisableAddOnResult disableAddOn(DisableAddOnRequest request) {request = beforeClientExecution(request);return executeDisableAddOn(request);}",
    "output": "public virtual DisableAddOnResponse DisableAddOn(DisableAddOnRequest request){var options = new InvokeOptions();options.RequestMarshaller = DisableAddOnRequestMarshaller.Instance;options.ResponseUnmarshaller = DisableAddOnResponseUnmarshaller.Instance;return Invoke<DisableAddOnResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DisableAddOnResponse DisableAddOn(DisableAddOnRequest request){var options = new InvokeOptions();options.RequestMarshaller = DisableAddOnRequestMarshaller.Instance;options.ResponseUnmarshaller = DisableAddOnResponseUnmarshaller.Instance;return Invoke<DisableAddOnResponse>(request, options);}",
    "output": "public DisableAddOnResult disableAddOn(DisableAddOnRequest request) {request = beforeClientExecution(request);return executeDisableAddOn(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DescribeAliasResult describeAlias(DescribeAliasRequest request) {request = beforeClientExecution(request);return executeDescribeAlias(request);}",
    "output": "public virtual DescribeAliasResponse DescribeAlias(DescribeAliasRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeAliasRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeAliasResponseUnmarshaller.Instance;return Invoke<DescribeAliasResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DescribeAliasResponse DescribeAlias(DescribeAliasRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeAliasRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeAliasResponseUnmarshaller.Instance;return Invoke<DescribeAliasResponse>(request, options);}",
    "output": "public DescribeAliasResult describeAlias(DescribeAliasRequest request) {request = beforeClientExecution(request);return executeDescribeAlias(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void next(int delta) {while (--delta >= 0) {if (currentSubtree != null)ptr += currentSubtree.getEntrySpan();elseptr++;if (eof())break;parseEntry();}}",
    "output": "public override void Next(int delta){while (--delta >= 0){if (currentSubtree != null){ptr += currentSubtree.GetEntrySpan();}else{ptr++;}if (Eof){break;}ParseEntry();}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override void Next(int delta){while (--delta >= 0){if (currentSubtree != null){ptr += currentSubtree.GetEntrySpan();}else{ptr++;}if (Eof){break;}ParseEntry();}}",
    "output": "public void next(int delta) {while (--delta >= 0) {if (currentSubtree != null)ptr += currentSubtree.getEntrySpan();elseptr++;if (eof())break;parseEntry();}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public RevFilter clone() {return new Binary(a.clone(), b.clone());}",
    "output": "public override RevFilter Clone(){return new AndRevFilter.Binary(a.Clone(), b.Clone());}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override RevFilter Clone(){return new AndRevFilter.Binary(a.Clone(), b.Clone());}",
    "output": "public RevFilter clone() {return new Binary(a.clone(), b.clone());}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public Reader create(Reader input) {return new PersianCharFilter(input);}",
    "output": "public override TextReader Create(TextReader input){return new PersianCharFilter(input);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override TextReader Create(TextReader input){return new PersianCharFilter(input);}",
    "output": "public Reader create(Reader input) {return new PersianCharFilter(input);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String option() {return option;}",
    "output": "public virtual string Option(){return option;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual string Option(){return option;}",
    "output": "public String option() {return option;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String toString() {final StringBuilder sb = new StringBuilder(\"[\");for (Object item : this) {if (sb.length()>1) sb.append(\", \");if (item instanceof char[]) {sb.append((char[]) item);} else {sb.append(item);}}return sb.append(']').toString();}",
    "output": "public override string ToString(){var sb = new StringBuilder(\"[\");foreach (var item in this){if (sb.Length > 1){sb.Append(\", \");}sb.Append(item);}return sb.Append(']').ToString();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override string ToString(){var sb = new StringBuilder(\"[\");foreach (var item in this){if (sb.Length > 1){sb.Append(\", \");}sb.Append(item);}return sb.Append(']').ToString();}",
    "output": "public String toString() {final StringBuilder sb = new StringBuilder(\"[\");for (Object item : this) {if (sb.length()>1) sb.append(\", \");if (item instanceof char[]) {sb.append((char[]) item);} else {sb.append(item);}}return sb.append(']').toString();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DescribeSignalingChannelResult describeSignalingChannel(DescribeSignalingChannelRequest request) {request = beforeClientExecution(request);return executeDescribeSignalingChannel(request);}",
    "output": "public virtual DescribeSignalingChannelResponse DescribeSignalingChannel(DescribeSignalingChannelRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeSignalingChannelRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeSignalingChannelResponseUnmarshaller.Instance;return Invoke<DescribeSignalingChannelResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DescribeSignalingChannelResponse DescribeSignalingChannel(DescribeSignalingChannelRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeSignalingChannelRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeSignalingChannelResponseUnmarshaller.Instance;return Invoke<DescribeSignalingChannelResponse>(request, options);}",
    "output": "public DescribeSignalingChannelResult describeSignalingChannel(DescribeSignalingChannelRequest request) {request = beforeClientExecution(request);return executeDescribeSignalingChannel(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public AttachStaticIpResult attachStaticIp(AttachStaticIpRequest request) {request = beforeClientExecution(request);return executeAttachStaticIp(request);}",
    "output": "public virtual AttachStaticIpResponse AttachStaticIp(AttachStaticIpRequest request){var options = new InvokeOptions();options.RequestMarshaller = AttachStaticIpRequestMarshaller.Instance;options.ResponseUnmarshaller = AttachStaticIpResponseUnmarshaller.Instance;return Invoke<AttachStaticIpResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual AttachStaticIpResponse AttachStaticIp(AttachStaticIpRequest request){var options = new InvokeOptions();options.RequestMarshaller = AttachStaticIpRequestMarshaller.Instance;options.ResponseUnmarshaller = AttachStaticIpResponseUnmarshaller.Instance;return Invoke<AttachStaticIpResponse>(request, options);}",
    "output": "public AttachStaticIpResult attachStaticIp(AttachStaticIpRequest request) {request = beforeClientExecution(request);return executeAttachStaticIp(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String toString() {StringBuilder sb = new StringBuilder(64);CellReference crA = new CellReference(_firstRowIndex, _firstColumnIndex, false, false);CellReference crB = new CellReference(_lastRowIndex, _lastColumnIndex, false, false);sb.append(getClass().getName());sb.append(\" [\").append(crA.formatAsString()).append(':').append(crB.formatAsString()).append(\"]\");return sb.toString();}",
    "output": "public override String ToString(){StringBuilder sb = new StringBuilder(64);CellReference crA = new CellReference(_firstRowIndex, _firstColumnIndex, false, false);CellReference crB = new CellReference(_lastRowIndex, _lastColumnIndex, false, false);sb.Append(GetType().Name);sb.Append(\" [\").Append(crA.FormatAsString()).Append(':').Append(crB.FormatAsString()).Append(\"]\");return sb.ToString();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override String ToString(){StringBuilder sb = new StringBuilder(64);CellReference crA = new CellReference(_firstRowIndex, _firstColumnIndex, false, false);CellReference crB = new CellReference(_lastRowIndex, _lastColumnIndex, false, false);sb.Append(GetType().Name);sb.Append(\" [\").Append(crA.FormatAsString()).Append(':').Append(crB.FormatAsString()).Append(\"]\");return sb.ToString();}",
    "output": "public String toString() {StringBuilder sb = new StringBuilder(64);CellReference crA = new CellReference(_firstRowIndex, _firstColumnIndex, false, false);CellReference crB = new CellReference(_lastRowIndex, _lastColumnIndex, false, false);sb.append(getClass().getName());sb.append(\" [\").append(crA.formatAsString()).append(':').append(crB.formatAsString()).append(\"]\");return sb.toString();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public BloomFilteringPostingsFormat(PostingsFormat delegatePostingsFormat,BloomFilterFactory bloomFilterFactory) {super(BLOOM_CODEC_NAME);this.delegatePostingsFormat = delegatePostingsFormat;this.bloomFilterFactory = bloomFilterFactory;}",
    "output": "public BloomFilteringPostingsFormat(PostingsFormat delegatePostingsFormat,BloomFilterFactory bloomFilterFactory) : base(){_delegatePostingsFormat = delegatePostingsFormat;_bloomFilterFactory = bloomFilterFactory;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public BloomFilteringPostingsFormat(PostingsFormat delegatePostingsFormat,BloomFilterFactory bloomFilterFactory) : base(){_delegatePostingsFormat = delegatePostingsFormat;_bloomFilterFactory = bloomFilterFactory;}",
    "output": "public BloomFilteringPostingsFormat(PostingsFormat delegatePostingsFormat,BloomFilterFactory bloomFilterFactory) {super(BLOOM_CODEC_NAME);this.delegatePostingsFormat = delegatePostingsFormat;this.bloomFilterFactory = bloomFilterFactory;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ListTemplatesResult listTemplates(ListTemplatesRequest request) {request = beforeClientExecution(request);return executeListTemplates(request);}",
    "output": "public virtual ListTemplatesResponse ListTemplates(ListTemplatesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListTemplatesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListTemplatesResponseUnmarshaller.Instance;return Invoke<ListTemplatesResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual ListTemplatesResponse ListTemplates(ListTemplatesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListTemplatesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListTemplatesResponseUnmarshaller.Instance;return Invoke<ListTemplatesResponse>(request, options);}",
    "output": "public ListTemplatesResult listTemplates(ListTemplatesRequest request) {request = beforeClientExecution(request);return executeListTemplates(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public TimerThread(long resolution, Counter counter) {super(THREAD_NAME);this.resolution = resolution;this.counter = counter;this.setDaemon(true);}",
    "output": "public TimerThread(long resolution, Counter counter): base(THREAD_NAME){this.resolution = resolution;this.counter = counter;this.IsBackground = (true);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public TimerThread(long resolution, Counter counter): base(THREAD_NAME){this.resolution = resolution;this.counter = counter;this.IsBackground = (true);}",
    "output": "public TimerThread(long resolution, Counter counter) {super(THREAD_NAME);this.resolution = resolution;this.counter = counter;this.setDaemon(true);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DrawingRecord() {recordData = EMPTY_BYTE_ARRAY;}",
    "output": "public DrawingRecord(){recordData = EMPTY_BYTE_ARRAY;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public DrawingRecord(){recordData = EMPTY_BYTE_ARRAY;}",
    "output": "public DrawingRecord() {recordData = EMPTY_BYTE_ARRAY;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ListDirectoriesResult listDirectories(ListDirectoriesRequest request) {request = beforeClientExecution(request);return executeListDirectories(request);}",
    "output": "public virtual ListDirectoriesResponse ListDirectories(ListDirectoriesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListDirectoriesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListDirectoriesResponseUnmarshaller.Instance;return Invoke<ListDirectoriesResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual ListDirectoriesResponse ListDirectories(ListDirectoriesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListDirectoriesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListDirectoriesResponseUnmarshaller.Instance;return Invoke<ListDirectoriesResponse>(request, options);}",
    "output": "public ListDirectoriesResult listDirectories(ListDirectoriesRequest request) {request = beforeClientExecution(request);return executeListDirectories(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {for (int j = 0; j < iterations; ++j) {final byte block = blocks[blocksOffset++];values[valuesOffset++] = (block >>> 7) & 1;values[valuesOffset++] = (block >>> 6) & 1;values[valuesOffset++] = (block >>> 5) & 1;values[valuesOffset++] = (block >>> 4) & 1;values[valuesOffset++] = (block >>> 3) & 1;values[valuesOffset++] = (block >>> 2) & 1;values[valuesOffset++] = (block >>> 1) & 1;values[valuesOffset++] = block & 1;}}",
    "output": "public override void Decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations){for (int j = 0; j < iterations; ++j){var block = blocks[blocksOffset++];values[valuesOffset++] = ((int)((uint)block >> 7)) & 1;values[valuesOffset++] = ((int)((uint)block >> 6)) & 1;values[valuesOffset++] = ((int)((uint)block >> 5)) & 1;values[valuesOffset++] = ((int)((uint)block >> 4)) & 1;values[valuesOffset++] = ((int)((uint)block >> 3)) & 1;values[valuesOffset++] = ((int)((uint)block >> 2)) & 1;values[valuesOffset++] = ((int)((uint)block >> 1)) & 1;values[valuesOffset++] = block & 1;}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override void Decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations){for (int j = 0; j < iterations; ++j){var block = blocks[blocksOffset++];values[valuesOffset++] = ((int)((uint)block >> 7)) & 1;values[valuesOffset++] = ((int)((uint)block >> 6)) & 1;values[valuesOffset++] = ((int)((uint)block >> 5)) & 1;values[valuesOffset++] = ((int)((uint)block >> 4)) & 1;values[valuesOffset++] = ((int)((uint)block >> 3)) & 1;values[valuesOffset++] = ((int)((uint)block >> 2)) & 1;values[valuesOffset++] = ((int)((uint)block >> 1)) & 1;values[valuesOffset++] = block & 1;}}",
    "output": "public void decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {for (int j = 0; j < iterations; ++j) {final byte block = blocks[blocksOffset++];values[valuesOffset++] = (block >>> 7) & 1;values[valuesOffset++] = (block >>> 6) & 1;values[valuesOffset++] = (block >>> 5) & 1;values[valuesOffset++] = (block >>> 4) & 1;values[valuesOffset++] = (block >>> 3) & 1;values[valuesOffset++] = (block >>> 2) & 1;values[valuesOffset++] = (block >>> 1) & 1;values[valuesOffset++] = block & 1;}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public GroupingSearch disableCaching() {this.maxCacheRAMMB = null;this.maxDocsToCache = null;return this;}",
    "output": "public virtual GroupingSearch DisableCaching(){this.maxCacheRAMMB = null;this.maxDocsToCache = null;return this;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual GroupingSearch DisableCaching(){this.maxCacheRAMMB = null;this.maxDocsToCache = null;return this;}",
    "output": "public GroupingSearch disableCaching() {this.maxCacheRAMMB = null;this.maxDocsToCache = null;return this;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public static int idealByteArraySize(int need) {for (int i = 4; i < 32; i++)if (need <= (1 << i) - 12)return (1 << i) - 12;return need;}",
    "output": "public static int idealByteArraySize(int need){{for (int i = 4; i < 32; i++){if (need <= (1 << i) - 12){return (1 << i) - 12;}}}return need;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public static int idealByteArraySize(int need){{for (int i = 4; i < 32; i++){if (need <= (1 << i) - 12){return (1 << i) - 12;}}}return need;}",
    "output": "public static int idealByteArraySize(int need) {for (int i = 4; i < 32; i++)if (need <= (1 << i) - 12)return (1 << i) - 12;return need;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public UpdateAssessmentTargetResult updateAssessmentTarget(UpdateAssessmentTargetRequest request) {request = beforeClientExecution(request);return executeUpdateAssessmentTarget(request);}",
    "output": "public virtual UpdateAssessmentTargetResponse UpdateAssessmentTarget(UpdateAssessmentTargetRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateAssessmentTargetRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateAssessmentTargetResponseUnmarshaller.Instance;return Invoke<UpdateAssessmentTargetResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual UpdateAssessmentTargetResponse UpdateAssessmentTarget(UpdateAssessmentTargetRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateAssessmentTargetRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateAssessmentTargetResponseUnmarshaller.Instance;return Invoke<UpdateAssessmentTargetResponse>(request, options);}",
    "output": "public UpdateAssessmentTargetResult updateAssessmentTarget(UpdateAssessmentTargetRequest request) {request = beforeClientExecution(request);return executeUpdateAssessmentTarget(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ModifyVolumeResult modifyVolume(ModifyVolumeRequest request) {request = beforeClientExecution(request);return executeModifyVolume(request);}",
    "output": "public virtual ModifyVolumeResponse ModifyVolume(ModifyVolumeRequest request){var options = new InvokeOptions();options.RequestMarshaller = ModifyVolumeRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifyVolumeResponseUnmarshaller.Instance;return Invoke<ModifyVolumeResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual ModifyVolumeResponse ModifyVolume(ModifyVolumeRequest request){var options = new InvokeOptions();options.RequestMarshaller = ModifyVolumeRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifyVolumeResponseUnmarshaller.Instance;return Invoke<ModifyVolumeResponse>(request, options);}",
    "output": "public ModifyVolumeResult modifyVolume(ModifyVolumeRequest request) {request = beforeClientExecution(request);return executeModifyVolume(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public Cell merge(Cell m, Cell e) {if (m.cmd == e.cmd && m.ref == e.ref && m.skip == e.skip) {Cell c = new Cell(m);c.cnt += e.cnt;return c;} else {return null;}}",
    "output": "public override Cell Merge(Cell m, Cell e){if (m.cmd == e.cmd && m.@ref == e.@ref && m.skip == e.skip) {Cell c = new Cell(m);c.cnt += e.cnt;return c;} else {return null;}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override Cell Merge(Cell m, Cell e){if (m.cmd == e.cmd && m.@ref == e.@ref && m.skip == e.skip) {Cell c = new Cell(m);c.cnt += e.cnt;return c;} else {return null;}}",
    "output": "public Cell merge(Cell m, Cell e) {if (m.cmd == e.cmd && m.ref == e.ref && m.skip == e.skip) {Cell c = new Cell(m);c.cnt += e.cnt;return c;} else {return null;}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ByteBuffer read(int length, long position) throws IOException {if(position >= size()) {throw new IndexOutOfBoundsException(\"Position \" + position + \" past the end of the file\");}ByteBuffer dst;if (writable) {dst = channel.map(FileChannel.MapMode.READ_WRITE, position, length);buffersToClean.add(dst);} else {channel.position(position);dst = ByteBuffer.allocate(length);int worked = IOUtils.readFully(channel, dst);if(worked == -1) {throw new IndexOutOfBoundsException(\"Position \" + position + \" past the end of the file\");}}dst.position(0);return dst;}",
    "output": "public override ByteBuffer Read(int length, long position){if (position >= Size)throw new ArgumentException(\"Position \" + position + \" past the end of the file\");ByteBuffer dst;int worked = -1;if (writable){dst = ByteBuffer.CreateBuffer(length);worked = 0;}else{fileStream.Position = position;dst = ByteBuffer.CreateBuffer(length);worked = IOUtils.ReadFully(fileStream, dst.Buffer);}if(worked == -1)throw new ArgumentException(\"Position \" + position + \" past the end of the file\");dst.Position = 0;return dst;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override ByteBuffer Read(int length, long position){if (position >= Size)throw new ArgumentException(\"Position \" + position + \" past the end of the file\");ByteBuffer dst;int worked = -1;if (writable){dst = ByteBuffer.CreateBuffer(length);worked = 0;}else{fileStream.Position = position;dst = ByteBuffer.CreateBuffer(length);worked = IOUtils.ReadFully(fileStream, dst.Buffer);}if(worked == -1)throw new ArgumentException(\"Position \" + position + \" past the end of the file\");dst.Position = 0;return dst;}",
    "output": "public ByteBuffer read(int length, long position) throws IOException {if(position >= size()) {throw new IndexOutOfBoundsException(\"Position \" + position + \" past the end of the file\");}ByteBuffer dst;if (writable) {dst = channel.map(FileChannel.MapMode.READ_WRITE, position, length);buffersToClean.add(dst);} else {channel.position(position);dst = ByteBuffer.allocate(length);int worked = IOUtils.readFully(channel, dst);if(worked == -1) {throw new IndexOutOfBoundsException(\"Position \" + position + \" past the end of the file\");}}dst.position(0);return dst;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void respondActivityTaskCompleted(RespondActivityTaskCompletedRequest request) {request = beforeClientExecution(request);executeRespondActivityTaskCompleted(request);}",
    "output": "public virtual RespondActivityTaskCompletedResponse RespondActivityTaskCompleted(RespondActivityTaskCompletedRequest request){var options = new InvokeOptions();options.RequestMarshaller = RespondActivityTaskCompletedRequestMarshaller.Instance;options.ResponseUnmarshaller = RespondActivityTaskCompletedResponseUnmarshaller.Instance;return Invoke<RespondActivityTaskCompletedResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual RespondActivityTaskCompletedResponse RespondActivityTaskCompleted(RespondActivityTaskCompletedRequest request){var options = new InvokeOptions();options.RequestMarshaller = RespondActivityTaskCompletedRequestMarshaller.Instance;options.ResponseUnmarshaller = RespondActivityTaskCompletedResponseUnmarshaller.Instance;return Invoke<RespondActivityTaskCompletedResponse>(request, options);}",
    "output": "public void respondActivityTaskCompleted(RespondActivityTaskCompletedRequest request) {request = beforeClientExecution(request);executeRespondActivityTaskCompleted(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public synchronized final void incrementProgressBy(int diff) {setProgress(mProgress + diff);}",
    "output": "public void incrementProgressBy(int diff){lock (this){setProgress(mProgress + diff);}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public void incrementProgressBy(int diff){lock (this){setProgress(mProgress + diff);}}",
    "output": "public synchronized final void incrementProgressBy(int diff) {setProgress(mProgress + diff);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public MetadataDiff compareMetadata(DirCacheEntry entry) {if (entry.isAssumeValid())return MetadataDiff.EQUAL;if (entry.isUpdateNeeded())return MetadataDiff.DIFFER_BY_METADATA;if (isModeDifferent(entry.getRawMode()))return MetadataDiff.DIFFER_BY_METADATA;int type = mode & FileMode.TYPE_MASK;if (type == FileMode.TYPE_TREE || type == FileMode.TYPE_GITLINK)return MetadataDiff.EQUAL;if (!entry.isSmudged() && entry.getLength() != (int) getEntryLength())return MetadataDiff.DIFFER_BY_METADATA;Instant cacheLastModified = entry.getLastModifiedInstant();Instant fileLastModified = getEntryLastModifiedInstant();if (timestampComparator.compare(cacheLastModified, fileLastModified,getOptions().getCheckStat() == CheckStat.MINIMAL) != 0) {return MetadataDiff.DIFFER_BY_TIMESTAMP;}if (entry.isSmudged()) {return MetadataDiff.SMUDGED;}return MetadataDiff.EQUAL;}",
    "output": "public virtual WorkingTreeIterator.MetadataDiff CompareMetadata(DirCacheEntry entry){if (entry.IsAssumeValid){return WorkingTreeIterator.MetadataDiff.EQUAL;}if (entry.IsUpdateNeeded){return WorkingTreeIterator.MetadataDiff.DIFFER_BY_METADATA;}if (!entry.IsSmudged && entry.Length != (int)GetEntryLength()){return WorkingTreeIterator.MetadataDiff.DIFFER_BY_METADATA;}if (IsModeDifferent(entry.RawMode)){return WorkingTreeIterator.MetadataDiff.DIFFER_BY_METADATA;}long cacheLastModified = entry.LastModified;long fileLastModified = GetEntryLastModified();if (cacheLastModified % 1000 == 0 || fileLastModified % 1000 == 0){cacheLastModified = cacheLastModified - cacheLastModified % 1000;fileLastModified = fileLastModified - fileLastModified % 1000;}if (fileLastModified != cacheLastModified){return WorkingTreeIterator.MetadataDiff.DIFFER_BY_TIMESTAMP;}else{if (!entry.IsSmudged){return WorkingTreeIterator.MetadataDiff.EQUAL;}else{return WorkingTreeIterator.MetadataDiff.SMUDGED;}}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual WorkingTreeIterator.MetadataDiff CompareMetadata(DirCacheEntry entry){if (entry.IsAssumeValid){return WorkingTreeIterator.MetadataDiff.EQUAL;}if (entry.IsUpdateNeeded){return WorkingTreeIterator.MetadataDiff.DIFFER_BY_METADATA;}if (!entry.IsSmudged && entry.Length != (int)GetEntryLength()){return WorkingTreeIterator.MetadataDiff.DIFFER_BY_METADATA;}if (IsModeDifferent(entry.RawMode)){return WorkingTreeIterator.MetadataDiff.DIFFER_BY_METADATA;}long cacheLastModified = entry.LastModified;long fileLastModified = GetEntryLastModified();if (cacheLastModified % 1000 == 0 || fileLastModified % 1000 == 0){cacheLastModified = cacheLastModified - cacheLastModified % 1000;fileLastModified = fileLastModified - fileLastModified % 1000;}if (fileLastModified != cacheLastModified){return WorkingTreeIterator.MetadataDiff.DIFFER_BY_TIMESTAMP;}else{if (!entry.IsSmudged){return WorkingTreeIterator.MetadataDiff.EQUAL;}else{return WorkingTreeIterator.MetadataDiff.SMUDGED;}}}",
    "output": "public MetadataDiff compareMetadata(DirCacheEntry entry) {if (entry.isAssumeValid())return MetadataDiff.EQUAL;if (entry.isUpdateNeeded())return MetadataDiff.DIFFER_BY_METADATA;if (isModeDifferent(entry.getRawMode()))return MetadataDiff.DIFFER_BY_METADATA;int type = mode & FileMode.TYPE_MASK;if (type == FileMode.TYPE_TREE || type == FileMode.TYPE_GITLINK)return MetadataDiff.EQUAL;if (!entry.isSmudged() && entry.getLength() != (int) getEntryLength())return MetadataDiff.DIFFER_BY_METADATA;Instant cacheLastModified = entry.getLastModifiedInstant();Instant fileLastModified = getEntryLastModifiedInstant();if (timestampComparator.compare(cacheLastModified, fileLastModified,getOptions().getCheckStat() == CheckStat.MINIMAL) != 0) {return MetadataDiff.DIFFER_BY_TIMESTAMP;}if (entry.isSmudged()) {return MetadataDiff.SMUDGED;}return MetadataDiff.EQUAL;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public static NumberRecord convertToNumberRecord(RKRecord rk) {NumberRecord num = new NumberRecord();num.setColumn(rk.getColumn());num.setRow(rk.getRow());num.setXFIndex(rk.getXFIndex());num.setValue(rk.getRKNumber());return num;}",
    "output": "public static NumberRecord ConvertToNumberRecord(RKRecord rk){NumberRecord num = new NumberRecord();num.Column = (rk.Column);num.Row = (rk.Row);num.XFIndex = (rk.XFIndex);num.Value = (rk.RKNumber);return num;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public static NumberRecord ConvertToNumberRecord(RKRecord rk){NumberRecord num = new NumberRecord();num.Column = (rk.Column);num.Row = (rk.Row);num.XFIndex = (rk.XFIndex);num.Value = (rk.RKNumber);return num;}",
    "output": "public static NumberRecord convertToNumberRecord(RKRecord rk) {NumberRecord num = new NumberRecord();num.setColumn(rk.getColumn());num.setRow(rk.getRow());num.setXFIndex(rk.getXFIndex());num.setValue(rk.getRKNumber());return num;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public CharBuffer put(char[] src, int srcOffset, int charCount) {byteBuffer.limit(limit * SizeOf.CHAR);byteBuffer.position(position * SizeOf.CHAR);if (byteBuffer instanceof ReadWriteDirectByteBuffer) {((ReadWriteDirectByteBuffer) byteBuffer).put(src, srcOffset, charCount);} else {((ReadWriteHeapByteBuffer) byteBuffer).put(src, srcOffset, charCount);}this.position += charCount;return this;}",
    "output": "public override java.nio.CharBuffer put(char[] src, int srcOffset, int charCount){byteBuffer.limit(_limit * libcore.io.SizeOf.CHAR);byteBuffer.position(_position * libcore.io.SizeOf.CHAR);if (byteBuffer is java.nio.ReadWriteDirectByteBuffer){((java.nio.ReadWriteDirectByteBuffer)byteBuffer).put(src, srcOffset, charCount);}else{((java.nio.ReadWriteHeapByteBuffer)byteBuffer).put(src, srcOffset, charCount);}this._position += charCount;return this;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override java.nio.CharBuffer put(char[] src, int srcOffset, int charCount){byteBuffer.limit(_limit * libcore.io.SizeOf.CHAR);byteBuffer.position(_position * libcore.io.SizeOf.CHAR);if (byteBuffer is java.nio.ReadWriteDirectByteBuffer){((java.nio.ReadWriteDirectByteBuffer)byteBuffer).put(src, srcOffset, charCount);}else{((java.nio.ReadWriteHeapByteBuffer)byteBuffer).put(src, srcOffset, charCount);}this._position += charCount;return this;}",
    "output": "public CharBuffer put(char[] src, int srcOffset, int charCount) {byteBuffer.limit(limit * SizeOf.CHAR);byteBuffer.position(position * SizeOf.CHAR);if (byteBuffer instanceof ReadWriteDirectByteBuffer) {((ReadWriteDirectByteBuffer) byteBuffer).put(src, srcOffset, charCount);} else {((ReadWriteHeapByteBuffer) byteBuffer).put(src, srcOffset, charCount);}this.position += charCount;return this;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public int getCells() {Iterator<Character> i = cells.keySet().iterator();int size = 0;for (; i.hasNext();) {Character c = i.next();Cell e = at(c);if (e.cmd >= 0 || e.ref >= 0) {size++;}}return size;}",
    "output": "public int GetCells(){int size = 0;foreach (char c in cells.Keys){Cell e = At(c);if (e.cmd >= 0 || e.@ref >= 0){size++;}}return size;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public int GetCells(){int size = 0;foreach (char c in cells.Keys){Cell e = At(c);if (e.cmd >= 0 || e.@ref >= 0){size++;}}return size;}",
    "output": "public int getCells() {Iterator<Character> i = cells.keySet().iterator();int size = 0;for (; i.hasNext();) {Character c = i.next();Cell e = at(c);if (e.cmd >= 0 || e.ref >= 0) {size++;}}return size;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public BeiderMorseFilterFactory(Map<String,String> args) {super(args);NameType nameType = NameType.valueOf(get(args, \"nameType\", NameType.GENERIC.toString()));RuleType ruleType = RuleType.valueOf(get(args, \"ruleType\", RuleType.APPROX.toString()));boolean concat = getBoolean(args, \"concat\", true);engine = new PhoneticEngine(nameType, ruleType, concat);Set<String> langs = getSet(args, \"languageSet\");languageSet = (null == langs || (1 == langs.size() && langs.contains(\"auto\"))) ? null : LanguageSet.from(langs);if (!args.isEmpty()) {throw new IllegalArgumentException(\"Unknown parameters: \" + args);}}",
    "output": "public BeiderMorseFilterFactory(IDictionary<string, string> args): base(args){NameType nameType = (NameType)Enum.Parse(typeof(NameType), Get(args, \"nameType\", NameType.GENERIC.ToString()), true);RuleType ruleType = (RuleType)Enum.Parse(typeof(RuleType), Get(args, \"ruleType\", RuleType.APPROX.ToString()), true);bool concat = GetBoolean(args, \"concat\", true);engine = new PhoneticEngine(nameType, ruleType, concat);ISet<string> langs = GetSet(args, \"languageSet\");languageSet = (null == langs || (1 == langs.Count && langs.Contains(\"auto\"))) ? null : LanguageSet.From(langs);if (!(args.Count == 0)){throw new ArgumentException(\"Unknown parameters: \" + args);}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public BeiderMorseFilterFactory(IDictionary<string, string> args): base(args){NameType nameType = (NameType)Enum.Parse(typeof(NameType), Get(args, \"nameType\", NameType.GENERIC.ToString()), true);RuleType ruleType = (RuleType)Enum.Parse(typeof(RuleType), Get(args, \"ruleType\", RuleType.APPROX.ToString()), true);bool concat = GetBoolean(args, \"concat\", true);engine = new PhoneticEngine(nameType, ruleType, concat);ISet<string> langs = GetSet(args, \"languageSet\");languageSet = (null == langs || (1 == langs.Count && langs.Contains(\"auto\"))) ? null : LanguageSet.From(langs);if (!(args.Count == 0)){throw new ArgumentException(\"Unknown parameters: \" + args);}}",
    "output": "public BeiderMorseFilterFactory(Map<String,String> args) {super(args);NameType nameType = NameType.valueOf(get(args, \"nameType\", NameType.GENERIC.toString()));RuleType ruleType = RuleType.valueOf(get(args, \"ruleType\", RuleType.APPROX.toString()));boolean concat = getBoolean(args, \"concat\", true);engine = new PhoneticEngine(nameType, ruleType, concat);Set<String> langs = getSet(args, \"languageSet\");languageSet = (null == langs || (1 == langs.size() && langs.contains(\"auto\"))) ? null : LanguageSet.from(langs);if (!args.isEmpty()) {throw new IllegalArgumentException(\"Unknown parameters: \" + args);}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public static double varp(double[] v) {double r = Double.NaN;if (v!=null && v.length > 1) {r = devsq(v) /v.length;}return r;}",
    "output": "public static double varp(double[] v){double r = Double.NaN;if (v != null && v.Length > 1){r = devsq(v) / v.Length;}return r;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public static double varp(double[] v){double r = Double.NaN;if (v != null && v.Length > 1){r = devsq(v) / v.Length;}return r;}",
    "output": "public static double varp(double[] v) {double r = Double.NaN;if (v!=null && v.length > 1) {r = devsq(v) /v.length;}return r;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public PersianNormalizationFilterFactory(Map<String,String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException(\"Unknown parameters: \" + args);}}",
    "output": "public PersianNormalizationFilterFactory(IDictionary<string, string> args) : base(args){if (args.Count > 0){throw new System.ArgumentException(\"Unknown parameters: \" + args);}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public PersianNormalizationFilterFactory(IDictionary<string, string> args) : base(args){if (args.Count > 0){throw new System.ArgumentException(\"Unknown parameters: \" + args);}}",
    "output": "public PersianNormalizationFilterFactory(Map<String,String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException(\"Unknown parameters: \" + args);}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public static WeightedTerm[] getTerms(Query query, boolean prohibited, String fieldName) {HashSet<WeightedTerm> terms = new HashSet<>();Predicate<String> fieldSelector = fieldName == null ? f -> true : fieldName::equals;query.visit(new BoostedTermExtractor(1, terms, prohibited, fieldSelector));return terms.toArray(new WeightedTerm[0]);}",
    "output": "public static WeightedTerm[] GetTerms(Query query, bool prohibited, string fieldName){var terms = new JCG.HashSet<WeightedTerm>();if (fieldName != null){fieldName = fieldName.Intern();}GetTerms(query, terms, prohibited, fieldName);return terms.ToArray();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public static WeightedTerm[] GetTerms(Query query, bool prohibited, string fieldName){var terms = new JCG.HashSet<WeightedTerm>();if (fieldName != null){fieldName = fieldName.Intern();}GetTerms(query, terms, prohibited, fieldName);return terms.ToArray();}",
    "output": "public static WeightedTerm[] getTerms(Query query, boolean prohibited, String fieldName) {HashSet<WeightedTerm> terms = new HashSet<>();Predicate<String> fieldSelector = fieldName == null ? f -> true : fieldName::equals;query.visit(new BoostedTermExtractor(1, terms, prohibited, fieldSelector));return terms.toArray(new WeightedTerm[0]);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DeleteDocumentationPartResult deleteDocumentationPart(DeleteDocumentationPartRequest request) {request = beforeClientExecution(request);return executeDeleteDocumentationPart(request);}",
    "output": "public virtual DeleteDocumentationPartResponse DeleteDocumentationPart(DeleteDocumentationPartRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteDocumentationPartRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteDocumentationPartResponseUnmarshaller.Instance;return Invoke<DeleteDocumentationPartResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DeleteDocumentationPartResponse DeleteDocumentationPart(DeleteDocumentationPartRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteDocumentationPartRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteDocumentationPartResponseUnmarshaller.Instance;return Invoke<DeleteDocumentationPartResponse>(request, options);}",
    "output": "public DeleteDocumentationPartResult deleteDocumentationPart(DeleteDocumentationPartRequest request) {request = beforeClientExecution(request);return executeDeleteDocumentationPart(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String toString() {StringBuilder sb = new StringBuilder();sb.append(\"[CHART]\\n\");sb.append(\"    .x     = \").append(getX()).append('\\n');sb.append(\"    .y     = \").append(getY()).append('\\n');sb.append(\"    .width = \").append(getWidth()).append('\\n');sb.append(\"    .height= \").append(getHeight()).append('\\n');sb.append(\"[/CHART]\\n\");return sb.toString();}",
    "output": "public override String ToString(){StringBuilder buffer = new StringBuilder();buffer.Append(\"[CHART]\\n\");buffer.Append(\"    .x                    = \").Append(\"0x\").Append(HexDump.ToHex(X)).Append(\" (\").Append(X).Append(\" )\");buffer.Append(Environment.NewLine);buffer.Append(\"    .y                    = \").Append(\"0x\").Append(HexDump.ToHex(Y)).Append(\" (\").Append(Y).Append(\" )\");buffer.Append(Environment.NewLine);buffer.Append(\"    .width                = \").Append(\"0x\").Append(HexDump.ToHex(Width)).Append(\" (\").Append(Width).Append(\" )\");buffer.Append(Environment.NewLine);buffer.Append(\"    .height               = \").Append(\"0x\").Append(HexDump.ToHex(Height)).Append(\" (\").Append(Height).Append(\" )\");buffer.Append(Environment.NewLine);buffer.Append(\"[/CHART]\\n\");return buffer.ToString();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override String ToString(){StringBuilder buffer = new StringBuilder();buffer.Append(\"[CHART]\\n\");buffer.Append(\"    .x                    = \").Append(\"0x\").Append(HexDump.ToHex(X)).Append(\" (\").Append(X).Append(\" )\");buffer.Append(Environment.NewLine);buffer.Append(\"    .y                    = \").Append(\"0x\").Append(HexDump.ToHex(Y)).Append(\" (\").Append(Y).Append(\" )\");buffer.Append(Environment.NewLine);buffer.Append(\"    .width                = \").Append(\"0x\").Append(HexDump.ToHex(Width)).Append(\" (\").Append(Width).Append(\" )\");buffer.Append(Environment.NewLine);buffer.Append(\"    .height               = \").Append(\"0x\").Append(HexDump.ToHex(Height)).Append(\" (\").Append(Height).Append(\" )\");buffer.Append(Environment.NewLine);buffer.Append(\"[/CHART]\\n\");return buffer.ToString();}",
    "output": "public String toString() {StringBuilder sb = new StringBuilder();sb.append(\"[CHART]\\n\");sb.append(\"    .x     = \").append(getX()).append('\\n');sb.append(\"    .y     = \").append(getY()).append('\\n');sb.append(\"    .width = \").append(getWidth()).append('\\n');sb.append(\"    .height= \").append(getHeight()).append('\\n');sb.append(\"[/CHART]\\n\");return sb.toString();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public final short get(int index) {checkIndex(index);return backingArray[offset + index];}",
    "output": "public sealed override short get(int index){checkIndex(index);return backingArray[offset + index];}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public sealed override short get(int index){checkIndex(index);return backingArray[offset + index];}",
    "output": "public final short get(int index) {checkIndex(index);return backingArray[offset + index];}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String toString(){return image;}",
    "output": "public override string ToString(){return Image;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override string ToString(){return Image;}",
    "output": "public String toString(){return image;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0, ValueEval arg1) {try {AreaEval reA = evaluateRef(arg0);AreaEval reB = evaluateRef(arg1);AreaEval result = resolveRange(reA, reB);if (result == null) {return ErrorEval.NULL_INTERSECTION;}return result;} catch (EvaluationException e) {return e.getErrorEval();}}",
    "output": "public override ValueEval Evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0, ValueEval arg1){try{AreaEval reA = EvaluateRef(arg0);AreaEval reB = EvaluateRef(arg1);AreaEval result = ResolveRange(reA, reB);if (result == null){return ErrorEval.NULL_INTERSECTION;}return result;}catch (EvaluationException e){return e.GetErrorEval();}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override ValueEval Evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0, ValueEval arg1){try{AreaEval reA = EvaluateRef(arg0);AreaEval reB = EvaluateRef(arg1);AreaEval result = ResolveRange(reA, reB);if (result == null){return ErrorEval.NULL_INTERSECTION;}return result;}catch (EvaluationException e){return e.GetErrorEval();}}",
    "output": "public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0, ValueEval arg1) {try {AreaEval reA = evaluateRef(arg0);AreaEval reB = evaluateRef(arg1);AreaEval result = resolveRange(reA, reB);if (result == null) {return ErrorEval.NULL_INTERSECTION;}return result;} catch (EvaluationException e) {return e.getErrorEval();}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void clear() {weightBySpanQuery.clear();}",
    "output": "public virtual void Clear() { weightBySpanQuery.Clear(); }"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual void Clear() { weightBySpanQuery.Clear(); }",
    "output": "public void clear() {weightBySpanQuery.clear();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public int findEndOffset(StringBuilder buffer, int start) {if( start > buffer.length() || start < 0 ) return start;bi.setText(buffer.substring(start));return bi.next() + start;}",
    "output": "public virtual int FindEndOffset(StringBuilder buffer, int start){if (start > buffer.Length || start < 0) return start;bi.SetText(buffer.ToString(start, buffer.Length - start));return bi.Next() + start;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual int FindEndOffset(StringBuilder buffer, int start){if (start > buffer.Length || start < 0) return start;bi.SetText(buffer.ToString(start, buffer.Length - start));return bi.Next() + start;}",
    "output": "public int findEndOffset(StringBuilder buffer, int start) {if( start > buffer.length() || start < 0 ) return start;bi.setText(buffer.substring(start));return bi.next() + start;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "final public SrndQuery PrimaryQuery() throws ParseException {SrndQuery q;switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {case LPAREN:jj_consume_token(LPAREN);q = FieldsQuery();jj_consume_token(RPAREN);break;case OR:case AND:case W:case N:q = PrefixOperatorQuery();break;case TRUNCQUOTED:case QUOTED:case SUFFIXTERM:case TRUNCTERM:case TERM:q = SimpleTerm();break;default:jj_la1[5] = jj_gen;jj_consume_token(-1);throw new ParseException();}OptionalWeights(q);{if (true) return q;}throw new Error(\"Missing return statement in function\");}",
    "output": "public SrndQuery PrimaryQuery(){SrndQuery q;switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk){case RegexpToken.LPAREN:Jj_consume_token(RegexpToken.LPAREN);q = FieldsQuery();Jj_consume_token(RegexpToken.RPAREN);break;case RegexpToken.OR:case RegexpToken.AND:case RegexpToken.W:case RegexpToken.N:q = PrefixOperatorQuery();break;case RegexpToken.TRUNCQUOTED:case RegexpToken.QUOTED:case RegexpToken.SUFFIXTERM:case RegexpToken.TRUNCTERM:case RegexpToken.TERM:q = SimpleTerm();break;default:jj_la1[5] = jj_gen;Jj_consume_token(-1);throw new ParseException();}OptionalWeights(q);{ if (true) return q; }throw new Exception(\"Missing return statement in function\");}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public SrndQuery PrimaryQuery(){SrndQuery q;switch ((jj_ntk == -1) ? Jj_ntk() : jj_ntk){case RegexpToken.LPAREN:Jj_consume_token(RegexpToken.LPAREN);q = FieldsQuery();Jj_consume_token(RegexpToken.RPAREN);break;case RegexpToken.OR:case RegexpToken.AND:case RegexpToken.W:case RegexpToken.N:q = PrefixOperatorQuery();break;case RegexpToken.TRUNCQUOTED:case RegexpToken.QUOTED:case RegexpToken.SUFFIXTERM:case RegexpToken.TRUNCTERM:case RegexpToken.TERM:q = SimpleTerm();break;default:jj_la1[5] = jj_gen;Jj_consume_token(-1);throw new ParseException();}OptionalWeights(q);{ if (true) return q; }throw new Exception(\"Missing return statement in function\");}",
    "output": "final public SrndQuery PrimaryQuery() throws ParseException {SrndQuery q;switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {case LPAREN:jj_consume_token(LPAREN);q = FieldsQuery();jj_consume_token(RPAREN);break;case OR:case AND:case W:case N:q = PrefixOperatorQuery();break;case TRUNCQUOTED:case QUOTED:case SUFFIXTERM:case TRUNCTERM:case TERM:q = SimpleTerm();break;default:jj_la1[5] = jj_gen;jj_consume_token(-1);throw new ParseException();}OptionalWeights(q);{if (true) return q;}throw new Error(\"Missing return statement in function\");}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DeleteApiKeyResult deleteApiKey(DeleteApiKeyRequest request) {request = beforeClientExecution(request);return executeDeleteApiKey(request);}",
    "output": "public virtual DeleteApiKeyResponse DeleteApiKey(DeleteApiKeyRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteApiKeyRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteApiKeyResponseUnmarshaller.Instance;return Invoke<DeleteApiKeyResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DeleteApiKeyResponse DeleteApiKey(DeleteApiKeyRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteApiKeyRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteApiKeyResponseUnmarshaller.Instance;return Invoke<DeleteApiKeyResponse>(request, options);}",
    "output": "public DeleteApiKeyResult deleteApiKey(DeleteApiKeyRequest request) {request = beforeClientExecution(request);return executeDeleteApiKey(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public InsertTagsRequest() {super(\"Ots\", \"2016-06-20\", \"InsertTags\", \"ots\");setMethod(MethodType.POST);}",
    "output": "public InsertTagsRequest(): base(\"Ots\", \"2016-06-20\", \"InsertTags\", \"ots\", \"openAPI\"){Method = MethodType.POST;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public InsertTagsRequest(): base(\"Ots\", \"2016-06-20\", \"InsertTags\", \"ots\", \"openAPI\"){Method = MethodType.POST;}",
    "output": "public InsertTagsRequest() {super(\"Ots\", \"2016-06-20\", \"InsertTags\", \"ots\");setMethod(MethodType.POST);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DeleteUserByPrincipalIdResult deleteUserByPrincipalId(DeleteUserByPrincipalIdRequest request) {request = beforeClientExecution(request);return executeDeleteUserByPrincipalId(request);}",
    "output": "public virtual DeleteUserByPrincipalIdResponse DeleteUserByPrincipalId(DeleteUserByPrincipalIdRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteUserByPrincipalIdRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteUserByPrincipalIdResponseUnmarshaller.Instance;return Invoke<DeleteUserByPrincipalIdResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DeleteUserByPrincipalIdResponse DeleteUserByPrincipalId(DeleteUserByPrincipalIdRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteUserByPrincipalIdRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteUserByPrincipalIdResponseUnmarshaller.Instance;return Invoke<DeleteUserByPrincipalIdResponse>(request, options);}",
    "output": "public DeleteUserByPrincipalIdResult deleteUserByPrincipalId(DeleteUserByPrincipalIdRequest request) {request = beforeClientExecution(request);return executeDeleteUserByPrincipalId(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DescribeNetworkInterfacesResult describeNetworkInterfaces(DescribeNetworkInterfacesRequest request) {request = beforeClientExecution(request);return executeDescribeNetworkInterfaces(request);}",
    "output": "public virtual DescribeNetworkInterfacesResponse DescribeNetworkInterfaces(DescribeNetworkInterfacesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeNetworkInterfacesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeNetworkInterfacesResponseUnmarshaller.Instance;return Invoke<DescribeNetworkInterfacesResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DescribeNetworkInterfacesResponse DescribeNetworkInterfaces(DescribeNetworkInterfacesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeNetworkInterfacesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeNetworkInterfacesResponseUnmarshaller.Instance;return Invoke<DescribeNetworkInterfacesResponse>(request, options);}",
    "output": "public DescribeNetworkInterfacesResult describeNetworkInterfaces(DescribeNetworkInterfacesRequest request) {request = beforeClientExecution(request);return executeDescribeNetworkInterfaces(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public int serialize( int offset, byte[] data, EscherSerializationListener listener ){listener.beforeRecordSerialize( offset, getRecordId(), this );LittleEndian.putShort( data, offset, getOptions() );LittleEndian.putShort( data, offset + 2, getRecordId() );LittleEndian.putInt( data, offset + 4, 8 );LittleEndian.putInt( data, offset + 8, field_1_numShapes );LittleEndian.putInt( data, offset + 12, field_2_lastMSOSPID );listener.afterRecordSerialize( offset + 16, getRecordId(), getRecordSize(), this );return getRecordSize();}",
    "output": "public override int Serialize(int offset, byte[] data, EscherSerializationListener listener){listener.BeforeRecordSerialize(offset, RecordId, this);LittleEndian.PutShort(data, offset, Options);LittleEndian.PutShort(data, offset + 2, RecordId);LittleEndian.PutInt(data, offset + 4, 8);LittleEndian.PutInt(data, offset + 8, field_1_numShapes);LittleEndian.PutInt(data, offset + 12, field_2_lastMSOSPID);listener.AfterRecordSerialize(offset + 16, RecordId, RecordSize, this);return RecordSize;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override int Serialize(int offset, byte[] data, EscherSerializationListener listener){listener.BeforeRecordSerialize(offset, RecordId, this);LittleEndian.PutShort(data, offset, Options);LittleEndian.PutShort(data, offset + 2, RecordId);LittleEndian.PutInt(data, offset + 4, 8);LittleEndian.PutInt(data, offset + 8, field_1_numShapes);LittleEndian.PutInt(data, offset + 12, field_2_lastMSOSPID);listener.AfterRecordSerialize(offset + 16, RecordId, RecordSize, this);return RecordSize;}",
    "output": "public int serialize( int offset, byte[] data, EscherSerializationListener listener ){listener.beforeRecordSerialize( offset, getRecordId(), this );LittleEndian.putShort( data, offset, getOptions() );LittleEndian.putShort( data, offset + 2, getRecordId() );LittleEndian.putInt( data, offset + 4, 8 );LittleEndian.putInt( data, offset + 8, field_1_numShapes );LittleEndian.putInt( data, offset + 12, field_2_lastMSOSPID );listener.afterRecordSerialize( offset + 16, getRecordId(), getRecordSize(), this );return getRecordSize();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public CreateSecurityConfigurationResult createSecurityConfiguration(CreateSecurityConfigurationRequest request) {request = beforeClientExecution(request);return executeCreateSecurityConfiguration(request);}",
    "output": "public virtual CreateSecurityConfigurationResponse CreateSecurityConfiguration(CreateSecurityConfigurationRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateSecurityConfigurationRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateSecurityConfigurationResponseUnmarshaller.Instance;return Invoke<CreateSecurityConfigurationResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual CreateSecurityConfigurationResponse CreateSecurityConfiguration(CreateSecurityConfigurationRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateSecurityConfigurationRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateSecurityConfigurationResponseUnmarshaller.Instance;return Invoke<CreateSecurityConfigurationResponse>(request, options);}",
    "output": "public CreateSecurityConfigurationResult createSecurityConfiguration(CreateSecurityConfigurationRequest request) {request = beforeClientExecution(request);return executeCreateSecurityConfiguration(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DescribeClientVpnConnectionsResult describeClientVpnConnections(DescribeClientVpnConnectionsRequest request) {request = beforeClientExecution(request);return executeDescribeClientVpnConnections(request);}",
    "output": "public virtual DescribeClientVpnConnectionsResponse DescribeClientVpnConnections(DescribeClientVpnConnectionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeClientVpnConnectionsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeClientVpnConnectionsResponseUnmarshaller.Instance;return Invoke<DescribeClientVpnConnectionsResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DescribeClientVpnConnectionsResponse DescribeClientVpnConnections(DescribeClientVpnConnectionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeClientVpnConnectionsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeClientVpnConnectionsResponseUnmarshaller.Instance;return Invoke<DescribeClientVpnConnectionsResponse>(request, options);}",
    "output": "public DescribeClientVpnConnectionsResult describeClientVpnConnections(DescribeClientVpnConnectionsRequest request) {request = beforeClientExecution(request);return executeDescribeClientVpnConnections(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public static void fill(double[] array, double value) {for (int i = 0; i < array.length; i++) {array[i] = value;}}",
    "output": "public static void fill(double[] array, double value){{for (int i = 0; i < array.Length; i++){array[i] = value;}}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public static void fill(double[] array, double value){{for (int i = 0; i < array.Length; i++){array[i] = value;}}}",
    "output": "public static void fill(double[] array, double value) {for (int i = 0; i < array.length; i++) {array[i] = value;}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public boolean hasNext() {return nextId < cells.length;}",
    "output": "public bool hasNext(){return pos < maxColumn;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public bool hasNext(){return pos < maxColumn;}",
    "output": "public boolean hasNext() {return nextId < cells.length;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public PostingsEnum reset(int[] postings) {this.postings = postings;upto = -2;freq = 0;return this;}",
    "output": "public DocsEnum Reset(int[] postings){this.postings = postings;upto = -2;freq_Renamed = 0;return this;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public DocsEnum Reset(int[] postings){this.postings = postings;upto = -2;freq_Renamed = 0;return this;}",
    "output": "public PostingsEnum reset(int[] postings) {this.postings = postings;upto = -2;freq = 0;return this;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public final boolean hasAll(RevFlagSet set) {return (flags & set.mask) == set.mask;}",
    "output": "public bool HasAll(RevFlagSet set){return (flags & set.mask) == set.mask;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public bool HasAll(RevFlagSet set){return (flags & set.mask) == set.mask;}",
    "output": "public final boolean hasAll(RevFlagSet set) {return (flags & set.mask) == set.mask;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ModifyAccountResult modifyAccount(ModifyAccountRequest request) {request = beforeClientExecution(request);return executeModifyAccount(request);}",
    "output": "public virtual ModifyAccountResponse ModifyAccount(ModifyAccountRequest request){var options = new InvokeOptions();options.RequestMarshaller = ModifyAccountRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifyAccountResponseUnmarshaller.Instance;return Invoke<ModifyAccountResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual ModifyAccountResponse ModifyAccount(ModifyAccountRequest request){var options = new InvokeOptions();options.RequestMarshaller = ModifyAccountRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifyAccountResponseUnmarshaller.Instance;return Invoke<ModifyAccountResponse>(request, options);}",
    "output": "public ModifyAccountResult modifyAccount(ModifyAccountRequest request) {request = beforeClientExecution(request);return executeModifyAccount(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public Token LT(int k) {lazyInit();if ( k==0 ) return null;if ( k < 0 ) return LB(-k);int i = p + k - 1;sync(i);if ( i >= tokens.size() ) { return tokens.get(tokens.size()-1);}return tokens.get(i);}",
    "output": "public virtual IToken LT(int k){LazyInit();if (k == 0){return null;}if (k < 0){return Lb(-k);}int i = p + k - 1;Sync(i);if (i >= tokens.Count){return tokens[tokens.Count - 1];}return tokens[i];}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual IToken LT(int k){LazyInit();if (k == 0){return null;}if (k < 0){return Lb(-k);}int i = p + k - 1;Sync(i);if (i >= tokens.Count){return tokens[tokens.Count - 1];}return tokens[i];}",
    "output": "public Token LT(int k) {lazyInit();if ( k==0 ) return null;if ( k < 0 ) return LB(-k);int i = p + k - 1;sync(i);if ( i >= tokens.size() ) { return tokens.get(tokens.size()-1);}return tokens.get(i);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void removeSheet(int sheetIndex) {if (boundsheets.size() > sheetIndex) {records.remove(records.getBspos() - (boundsheets.size() - 1) + sheetIndex);boundsheets.remove(sheetIndex);fixTabIdRecord();}int sheetNum1Based = sheetIndex + 1;for(int i=0; i<getNumNames(); i++) {NameRecord nr = getNameRecord(i);if(nr.getSheetNumber() == sheetNum1Based) {nr.setSheetNumber(0);} else if(nr.getSheetNumber() > sheetNum1Based) {nr.setSheetNumber(nr.getSheetNumber()-1);}}if (linkTable != null) {linkTable.removeSheet(sheetIndex);}}",
    "output": "public void RemoveSheet(int sheetIndex){if (boundsheets.Count > sheetIndex){records.Remove(records.Bspos - (boundsheets.Count - 1) + sheetIndex);boundsheets.RemoveAt(sheetIndex);FixTabIdRecord();}int sheetNum1Based = sheetIndex + 1;for (int i = 0; i < NumNames; i++){NameRecord nr = GetNameRecord(i);if (nr.SheetNumber == sheetNum1Based){nr.SheetNumber = (0);}else if (nr.SheetNumber > sheetNum1Based){nr.SheetNumber = (nr.SheetNumber - 1);}}if (linkTable != null){for (int i = sheetIndex + 1; i < NumSheets + 1; i++){linkTable.RemoveSheet(i);}}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public void RemoveSheet(int sheetIndex){if (boundsheets.Count > sheetIndex){records.Remove(records.Bspos - (boundsheets.Count - 1) + sheetIndex);boundsheets.RemoveAt(sheetIndex);FixTabIdRecord();}int sheetNum1Based = sheetIndex + 1;for (int i = 0; i < NumNames; i++){NameRecord nr = GetNameRecord(i);if (nr.SheetNumber == sheetNum1Based){nr.SheetNumber = (0);}else if (nr.SheetNumber > sheetNum1Based){nr.SheetNumber = (nr.SheetNumber - 1);}}if (linkTable != null){for (int i = sheetIndex + 1; i < NumSheets + 1; i++){linkTable.RemoveSheet(i);}}}",
    "output": "public void removeSheet(int sheetIndex) {if (boundsheets.size() > sheetIndex) {records.remove(records.getBspos() - (boundsheets.size() - 1) + sheetIndex);boundsheets.remove(sheetIndex);fixTabIdRecord();}int sheetNum1Based = sheetIndex + 1;for(int i=0; i<getNumNames(); i++) {NameRecord nr = getNameRecord(i);if(nr.getSheetNumber() == sheetNum1Based) {nr.setSheetNumber(0);} else if(nr.getSheetNumber() > sheetNum1Based) {nr.setSheetNumber(nr.getSheetNumber()-1);}}if (linkTable != null) {linkTable.removeSheet(sheetIndex);}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void removeName(String name) {int index = getNameIndex(name);removeName(index);}",
    "output": "public void RemoveName(int index){names.RemoveAt(index);workbook.RemoveName(index);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public void RemoveName(int index){names.RemoveAt(index);workbook.RemoveName(index);}",
    "output": "public void removeName(String name) {int index = getNameIndex(name);removeName(index);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public boolean equals(final Object o) {if (!(o instanceof Property)) {return false;}final Property p = (Property) o;final Object pValue = p.getValue();final long pId = p.getID();if (id != pId || (id != 0 && !typesAreEqual(type, p.getType()))) {return false;}if (value == null && pValue == null) {return true;}if (value == null || pValue == null) {return false;}final Class<?> valueClass = value.getClass();final Class<?> pValueClass = pValue.getClass();if (!(valueClass.isAssignableFrom(pValueClass)) &&!(pValueClass.isAssignableFrom(valueClass))) {return false;}if (value instanceof byte[]) {byte[] thisVal = (byte[]) value, otherVal = (byte[]) pValue;int len = unpaddedLength(thisVal);if (len != unpaddedLength(otherVal)) {return false;}for (int i=0; i<len; i++) {if (thisVal[i] != otherVal[i]) {return false;}}return true;}return value.equals(pValue);}",
    "output": "public override bool Equals(Object o){if (!(o is Property))return false;Property p = (Property)o;Object pValue = p.Value;long pId = p.ID;if (id != pId || (id != 0 && !TypesAreEqual(type, p.Type)))return false;if (value == null && pValue == null)return true;if (value == null || pValue == null)return false;Type valueClass = value.GetType();Type pValueClass = pValue.GetType();if (!(valueClass.IsAssignableFrom(pValueClass)) &&!(pValueClass.IsAssignableFrom(valueClass)))return false;if (value is byte[])return Arrays.Equals((byte[])value, (byte[])pValue);return value.Equals(pValue);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override bool Equals(Object o){if (!(o is Property))return false;Property p = (Property)o;Object pValue = p.Value;long pId = p.ID;if (id != pId || (id != 0 && !TypesAreEqual(type, p.Type)))return false;if (value == null && pValue == null)return true;if (value == null || pValue == null)return false;Type valueClass = value.GetType();Type pValueClass = pValue.GetType();if (!(valueClass.IsAssignableFrom(pValueClass)) &&!(pValueClass.IsAssignableFrom(valueClass)))return false;if (value is byte[])return Arrays.Equals((byte[])value, (byte[])pValue);return value.Equals(pValue);}",
    "output": "public boolean equals(final Object o) {if (!(o instanceof Property)) {return false;}final Property p = (Property) o;final Object pValue = p.getValue();final long pId = p.getID();if (id != pId || (id != 0 && !typesAreEqual(type, p.getType()))) {return false;}if (value == null && pValue == null) {return true;}if (value == null || pValue == null) {return false;}final Class<?> valueClass = value.getClass();final Class<?> pValueClass = pValue.getClass();if (!(valueClass.isAssignableFrom(pValueClass)) &&!(pValueClass.isAssignableFrom(valueClass))) {return false;}if (value instanceof byte[]) {byte[] thisVal = (byte[]) value, otherVal = (byte[]) pValue;int len = unpaddedLength(thisVal);if (len != unpaddedLength(otherVal)) {return false;}for (int i=0; i<len; i++) {if (thisVal[i] != otherVal[i]) {return false;}}return true;}return value.equals(pValue);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public GetRepoBuildListRequest() {super(\"cr\", \"2016-06-07\", \"GetRepoBuildList\", \"cr\");setUriPattern(\"/repos/[RepoNamespace]/[RepoName]/build\");setMethod(MethodType.GET);}",
    "output": "public GetRepoBuildListRequest(): base(\"cr\", \"2016-06-07\", \"GetRepoBuildList\", \"cr\", \"openAPI\"){UriPattern = \"/repos/[RepoNamespace]/[RepoName]/build\";Method = MethodType.GET;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public GetRepoBuildListRequest(): base(\"cr\", \"2016-06-07\", \"GetRepoBuildList\", \"cr\", \"openAPI\"){UriPattern = \"/repos/[RepoNamespace]/[RepoName]/build\";Method = MethodType.GET;}",
    "output": "public GetRepoBuildListRequest() {super(\"cr\", \"2016-06-07\", \"GetRepoBuildList\", \"cr\");setUriPattern(\"/repos/[RepoNamespace]/[RepoName]/build\");setMethod(MethodType.GET);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public MessageWriter() {buf = new ByteArrayOutputStream();enc = new OutputStreamWriter(getRawStream(), UTF_8);}",
    "output": "public MessageWriter(){buf = new ByteArrayOutputStream();enc = new OutputStreamWriter(GetRawStream(), Constants.CHARSET);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public MessageWriter(){buf = new ByteArrayOutputStream();enc = new OutputStreamWriter(GetRawStream(), Constants.CHARSET);}",
    "output": "public MessageWriter() {buf = new ByteArrayOutputStream();enc = new OutputStreamWriter(getRawStream(), UTF_8);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void append(RecordBase r){_recs.add(r);}",
    "output": "public void Append(RecordBase r){_recs.Add(r);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public void Append(RecordBase r){_recs.Add(r);}",
    "output": "public void append(RecordBase r){_recs.add(r);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void close() throws IOException {if (read(skipBuffer) != -1 || actualSize != expectedSize) {throw new CorruptObjectException(MessageFormat.format(JGitText.get().packfileCorruptionDetected,JGitText.get().wrongDecompressedLength));}int used = bAvail - inf.getRemaining();if (0 < used) {onObjectData(src, buf, p, used);use(used);}inf.reset();}",
    "output": "public override void Close(){if (this.Read(this.skipBuffer) != -1 || this.actualSize != this.expectedSize){throw new CorruptObjectException(MessageFormat.Format(JGitText.Get().packfileCorruptionDetected, JGitText.Get().wrongDecompressedLength));}int used = this._enclosing.bAvail - this.inf.RemainingInput;if (0 < used){this._enclosing.OnObjectData(this.src, this._enclosing.buf, this.p, used);this._enclosing.Use(used);}this.inf.Reset();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override void Close(){if (this.Read(this.skipBuffer) != -1 || this.actualSize != this.expectedSize){throw new CorruptObjectException(MessageFormat.Format(JGitText.Get().packfileCorruptionDetected, JGitText.Get().wrongDecompressedLength));}int used = this._enclosing.bAvail - this.inf.RemainingInput;if (0 < used){this._enclosing.OnObjectData(this.src, this._enclosing.buf, this.p, used);this._enclosing.Use(used);}this.inf.Reset();}",
    "output": "public void close() throws IOException {if (read(skipBuffer) != -1 || actualSize != expectedSize) {throw new CorruptObjectException(MessageFormat.format(JGitText.get().packfileCorruptionDetected,JGitText.get().wrongDecompressedLength));}int used = bAvail - inf.getRemaining();if (0 < used) {onObjectData(src, buf, p, used);use(used);}inf.reset();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DescribeModelPackageResult describeModelPackage(DescribeModelPackageRequest request) {request = beforeClientExecution(request);return executeDescribeModelPackage(request);}",
    "output": "public virtual DescribeModelPackageResponse DescribeModelPackage(DescribeModelPackageRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeModelPackageRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeModelPackageResponseUnmarshaller.Instance;return Invoke<DescribeModelPackageResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DescribeModelPackageResponse DescribeModelPackage(DescribeModelPackageRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeModelPackageRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeModelPackageResponseUnmarshaller.Instance;return Invoke<DescribeModelPackageResponse>(request, options);}",
    "output": "public DescribeModelPackageResult describeModelPackage(DescribeModelPackageRequest request) {request = beforeClientExecution(request);return executeDescribeModelPackage(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void construct(CellValueRecordInterface rec, RecordStream rs, SharedValueManager sfh) {if (rec instanceof FormulaRecord) {FormulaRecord formulaRec = (FormulaRecord)rec;StringRecord cachedText;Class<? extends Record> nextClass = rs.peekNextClass();if (nextClass == StringRecord.class) {cachedText = (StringRecord) rs.getNext();} else {cachedText = null;}insertCell(new FormulaRecordAggregate(formulaRec, cachedText, sfh));} else {insertCell(rec);}}",
    "output": "public void Construct(CellValueRecordInterface rec, RecordStream rs, SharedValueManager sfh){if (rec is FormulaRecord){FormulaRecord formulaRec = (FormulaRecord)rec;StringRecord cachedText=null;Type nextClass = rs.PeekNextClass();if (nextClass == typeof(StringRecord)){cachedText = (StringRecord)rs.GetNext();}else{cachedText = null;}InsertCell(new FormulaRecordAggregate(formulaRec, cachedText, sfh));}else{InsertCell(rec);}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public void Construct(CellValueRecordInterface rec, RecordStream rs, SharedValueManager sfh){if (rec is FormulaRecord){FormulaRecord formulaRec = (FormulaRecord)rec;StringRecord cachedText=null;Type nextClass = rs.PeekNextClass();if (nextClass == typeof(StringRecord)){cachedText = (StringRecord)rs.GetNext();}else{cachedText = null;}InsertCell(new FormulaRecordAggregate(formulaRec, cachedText, sfh));}else{InsertCell(rec);}}",
    "output": "public void construct(CellValueRecordInterface rec, RecordStream rs, SharedValueManager sfh) {if (rec instanceof FormulaRecord) {FormulaRecord formulaRec = (FormulaRecord)rec;StringRecord cachedText;Class<? extends Record> nextClass = rs.peekNextClass();if (nextClass == StringRecord.class) {cachedText = (StringRecord) rs.getNext();} else {cachedText = null;}insertCell(new FormulaRecordAggregate(formulaRec, cachedText, sfh));} else {insertCell(rec);}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public Decompressor clone() {return new DeflateDecompressor();}",
    "output": "public override object Clone(){return new DeflateDecompressor();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override object Clone(){return new DeflateDecompressor();}",
    "output": "public Decompressor clone() {return new DeflateDecompressor();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public UpdateS3ResourcesResult updateS3Resources(UpdateS3ResourcesRequest request) {request = beforeClientExecution(request);return executeUpdateS3Resources(request);}",
    "output": "public virtual UpdateS3ResourcesResponse UpdateS3Resources(UpdateS3ResourcesRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateS3ResourcesRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateS3ResourcesResponseUnmarshaller.Instance;return Invoke<UpdateS3ResourcesResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual UpdateS3ResourcesResponse UpdateS3Resources(UpdateS3ResourcesRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateS3ResourcesRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateS3ResourcesResponseUnmarshaller.Instance;return Invoke<UpdateS3ResourcesResponse>(request, options);}",
    "output": "public UpdateS3ResourcesResult updateS3Resources(UpdateS3ResourcesRequest request) {request = beforeClientExecution(request);return executeUpdateS3Resources(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public GroupQueryNode(QueryNode query) {if (query == null) {throw new QueryNodeError(new MessageImpl(QueryParserMessages.PARAMETER_VALUE_NOT_SUPPORTED, \"query\", \"null\"));}allocate();setLeaf(false);add(query);}",
    "output": "public GroupQueryNode(IQueryNode query){if (query == null){throw new QueryNodeError(new Message(QueryParserMessages.PARAMETER_VALUE_NOT_SUPPORTED, \"query\", \"null\"));}Allocate();IsLeaf = false;Add(query);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public GroupQueryNode(IQueryNode query){if (query == null){throw new QueryNodeError(new Message(QueryParserMessages.PARAMETER_VALUE_NOT_SUPPORTED, \"query\", \"null\"));}Allocate();IsLeaf = false;Add(query);}",
    "output": "public GroupQueryNode(QueryNode query) {if (query == null) {throw new QueryNodeError(new MessageImpl(QueryParserMessages.PARAMETER_VALUE_NOT_SUPPORTED, \"query\", \"null\"));}allocate();setLeaf(false);add(query);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public CharSequence toQueryString(EscapeQuerySyntax escaper) {StringBuilder path = new StringBuilder();path.append(\"/\").append(getFirstPathElement());for (QueryText pathelement : getPathElements(1)) {CharSequence value = escaper.escape(pathelement.value, Locale.getDefault(), Type.STRING);path.append(\"/\\\"\").append(value).append(\"\\\"\");}return path.toString();}",
    "output": "public override string ToQueryString(IEscapeQuerySyntax escaper){StringBuilder path = new StringBuilder();path.Append(\"/\").Append(GetFirstPathElement());foreach (QueryText pathelement in GetPathElements(1)){string value = escaper.Escape(new StringCharSequence(pathelement.Value),CultureInfo.InvariantCulture, EscapeQuerySyntaxType.STRING).ToString();path.Append(\"/\\\"\").Append(value).Append(\"\\\"\");}return path.ToString();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override string ToQueryString(IEscapeQuerySyntax escaper){StringBuilder path = new StringBuilder();path.Append(\"/\").Append(GetFirstPathElement());foreach (QueryText pathelement in GetPathElements(1)){string value = escaper.Escape(new StringCharSequence(pathelement.Value),CultureInfo.InvariantCulture, EscapeQuerySyntaxType.STRING).ToString();path.Append(\"/\\\"\").Append(value).Append(\"\\\"\");}return path.ToString();}",
    "output": "public CharSequence toQueryString(EscapeQuerySyntax escaper) {StringBuilder path = new StringBuilder();path.append(\"/\").append(getFirstPathElement());for (QueryText pathelement : getPathElements(1)) {CharSequence value = escaper.escape(pathelement.value, Locale.getDefault(), Type.STRING);path.append(\"/\\\"\").append(value).append(\"\\\"\");}return path.toString();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void removeCellComment() {HSSFComment comment = _sheet.findCellComment(_record.getRow(), _record.getColumn());_comment = null;if (null == comment){return;}_sheet.getDrawingPatriarch().removeShape(comment);}",
    "output": "public void RemoveCellComment(){HSSFComment comment2 = _sheet.FindCellComment(_record.Row, _record.Column);comment = null;if (null == comment2){return;}(_sheet.DrawingPatriarch as HSSFPatriarch).RemoveShape(comment2);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public void RemoveCellComment(){HSSFComment comment2 = _sheet.FindCellComment(_record.Row, _record.Column);comment = null;if (null == comment2){return;}(_sheet.DrawingPatriarch as HSSFPatriarch).RemoveShape(comment2);}",
    "output": "public void removeCellComment() {HSSFComment comment = _sheet.findCellComment(_record.getRow(), _record.getColumn());_comment = null;if (null == comment){return;}_sheet.getDrawingPatriarch().removeShape(comment);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void reset() {arriving = -1;leaving = -1;}",
    "output": "public void Reset(){count = 0;Debug.Assert(forwardCount == 0, \"pos=\" + pos + \" forwardCount=\" + forwardCount);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public void Reset(){count = 0;Debug.Assert(forwardCount == 0, \"pos=\" + pos + \" forwardCount=\" + forwardCount);}",
    "output": "public void reset() {arriving = -1;leaving = -1;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ActivateUserResult activateUser(ActivateUserRequest request) {request = beforeClientExecution(request);return executeActivateUser(request);}",
    "output": "public virtual ActivateUserResponse ActivateUser(ActivateUserRequest request){var options = new InvokeOptions();options.RequestMarshaller = ActivateUserRequestMarshaller.Instance;options.ResponseUnmarshaller = ActivateUserResponseUnmarshaller.Instance;return Invoke<ActivateUserResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual ActivateUserResponse ActivateUser(ActivateUserRequest request){var options = new InvokeOptions();options.RequestMarshaller = ActivateUserRequestMarshaller.Instance;options.ResponseUnmarshaller = ActivateUserResponseUnmarshaller.Instance;return Invoke<ActivateUserResponse>(request, options);}",
    "output": "public ActivateUserResult activateUser(ActivateUserRequest request) {request = beforeClientExecution(request);return executeActivateUser(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public boolean isCharsetDetected() {throw new UnsupportedOperationException();}",
    "output": "public virtual bool isCharsetDetected(){throw new System.NotSupportedException();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual bool isCharsetDetected(){throw new System.NotSupportedException();}",
    "output": "public boolean isCharsetDetected() {throw new UnsupportedOperationException();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public Cluster modifySnapshotCopyRetentionPeriod(ModifySnapshotCopyRetentionPeriodRequest request) {request = beforeClientExecution(request);return executeModifySnapshotCopyRetentionPeriod(request);}",
    "output": "public virtual ModifySnapshotCopyRetentionPeriodResponse ModifySnapshotCopyRetentionPeriod(ModifySnapshotCopyRetentionPeriodRequest request){var options = new InvokeOptions();options.RequestMarshaller = ModifySnapshotCopyRetentionPeriodRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifySnapshotCopyRetentionPeriodResponseUnmarshaller.Instance;return Invoke<ModifySnapshotCopyRetentionPeriodResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual ModifySnapshotCopyRetentionPeriodResponse ModifySnapshotCopyRetentionPeriod(ModifySnapshotCopyRetentionPeriodRequest request){var options = new InvokeOptions();options.RequestMarshaller = ModifySnapshotCopyRetentionPeriodRequestMarshaller.Instance;options.ResponseUnmarshaller = ModifySnapshotCopyRetentionPeriodResponseUnmarshaller.Instance;return Invoke<ModifySnapshotCopyRetentionPeriodResponse>(request, options);}",
    "output": "public Cluster modifySnapshotCopyRetentionPeriod(ModifySnapshotCopyRetentionPeriodRequest request) {request = beforeClientExecution(request);return executeModifySnapshotCopyRetentionPeriod(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DeleteClusterSubnetGroupResult deleteClusterSubnetGroup(DeleteClusterSubnetGroupRequest request) {request = beforeClientExecution(request);return executeDeleteClusterSubnetGroup(request);}",
    "output": "public virtual DeleteClusterSubnetGroupResponse DeleteClusterSubnetGroup(DeleteClusterSubnetGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteClusterSubnetGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteClusterSubnetGroupResponseUnmarshaller.Instance;return Invoke<DeleteClusterSubnetGroupResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DeleteClusterSubnetGroupResponse DeleteClusterSubnetGroup(DeleteClusterSubnetGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteClusterSubnetGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteClusterSubnetGroupResponseUnmarshaller.Instance;return Invoke<DeleteClusterSubnetGroupResponse>(request, options);}",
    "output": "public DeleteClusterSubnetGroupResult deleteClusterSubnetGroup(DeleteClusterSubnetGroupRequest request) {request = beforeClientExecution(request);return executeDeleteClusterSubnetGroup(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public static String decode(byte[] buffer) {return decode(buffer, 0, buffer.length);}",
    "output": "public static string Decode(byte[] buffer){return Decode(buffer, 0, buffer.Length);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public static string Decode(byte[] buffer){return Decode(buffer, 0, buffer.Length);}",
    "output": "public static String decode(byte[] buffer) {return decode(buffer, 0, buffer.length);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public int getDefaultPort() {return -1;}",
    "output": "public virtual int GetDefaultPort(){return -1;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual int GetDefaultPort(){return -1;}",
    "output": "public int getDefaultPort() {return -1;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public StopTaskResult stopTask(StopTaskRequest request) {request = beforeClientExecution(request);return executeStopTask(request);}",
    "output": "public virtual StopTaskResponse StopTask(StopTaskRequest request){var options = new InvokeOptions();options.RequestMarshaller = StopTaskRequestMarshaller.Instance;options.ResponseUnmarshaller = StopTaskResponseUnmarshaller.Instance;return Invoke<StopTaskResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual StopTaskResponse StopTask(StopTaskRequest request){var options = new InvokeOptions();options.RequestMarshaller = StopTaskRequestMarshaller.Instance;options.ResponseUnmarshaller = StopTaskResponseUnmarshaller.Instance;return Invoke<StopTaskResponse>(request, options);}",
    "output": "public StopTaskResult stopTask(StopTaskRequest request) {request = beforeClientExecution(request);return executeStopTask(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void seekExact(BytesRef target, TermState otherState) {assert otherState != null && otherState instanceof BlockTermState;assert !doOrd || ((BlockTermState) otherState).ord < numTerms;state.copyFrom(otherState);seekPending = true;indexIsCurrent = false;term.copyBytes(target);}",
    "output": "public override void SeekExact(BytesRef target, TermState otherState){if (!target.Equals(term_Renamed)){state.CopyFrom(otherState);term_Renamed = BytesRef.DeepCopyOf(target);seekPending = true;}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override void SeekExact(BytesRef target, TermState otherState){if (!target.Equals(term_Renamed)){state.CopyFrom(otherState);term_Renamed = BytesRef.DeepCopyOf(target);seekPending = true;}}",
    "output": "public void seekExact(BytesRef target, TermState otherState) {assert otherState != null && otherState instanceof BlockTermState;assert !doOrd || ((BlockTermState) otherState).ord < numTerms;state.copyFrom(otherState);seekPending = true;indexIsCurrent = false;term.copyBytes(target);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public SeriesToChartGroupRecord(RecordInputStream in) {field_1_chartGroupIndex = in.readShort();}",
    "output": "public SeriesToChartGroupRecord(RecordInputStream in1){field_1_chartGroupIndex = in1.ReadShort();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public SeriesToChartGroupRecord(RecordInputStream in1){field_1_chartGroupIndex = in1.ReadShort();}",
    "output": "public SeriesToChartGroupRecord(RecordInputStream in) {field_1_chartGroupIndex = in.readShort();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public static void writeUnicodeStringFlagAndData(LittleEndianOutput out, String value) {boolean is16Bit = hasMultibyte(value);out.writeByte(is16Bit ? 0x01 : 0x00);if (is16Bit) {putUnicodeLE(value, out);} else {putCompressedUnicode(value, out);}}",
    "output": "public static void WriteUnicodeStringFlagAndData(ILittleEndianOutput out1, String value){bool is16Bit = HasMultibyte(value);out1.WriteByte(is16Bit ? 0x01 : 0x00);if (is16Bit){PutUnicodeLE(value, out1);}else{PutCompressedUnicode(value, out1);}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public static void WriteUnicodeStringFlagAndData(ILittleEndianOutput out1, String value){bool is16Bit = HasMultibyte(value);out1.WriteByte(is16Bit ? 0x01 : 0x00);if (is16Bit){PutUnicodeLE(value, out1);}else{PutCompressedUnicode(value, out1);}}",
    "output": "public static void writeUnicodeStringFlagAndData(LittleEndianOutput out, String value) {boolean is16Bit = hasMultibyte(value);out.writeByte(is16Bit ? 0x01 : 0x00);if (is16Bit) {putUnicodeLE(value, out);} else {putCompressedUnicode(value, out);}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public AuthorizeSecurityGroupIngressResult authorizeSecurityGroupIngress(AuthorizeSecurityGroupIngressRequest request) {request = beforeClientExecution(request);return executeAuthorizeSecurityGroupIngress(request);}",
    "output": "public virtual AuthorizeSecurityGroupIngressResponse AuthorizeSecurityGroupIngress(AuthorizeSecurityGroupIngressRequest request){var options = new InvokeOptions();options.RequestMarshaller = AuthorizeSecurityGroupIngressRequestMarshaller.Instance;options.ResponseUnmarshaller = AuthorizeSecurityGroupIngressResponseUnmarshaller.Instance;return Invoke<AuthorizeSecurityGroupIngressResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual AuthorizeSecurityGroupIngressResponse AuthorizeSecurityGroupIngress(AuthorizeSecurityGroupIngressRequest request){var options = new InvokeOptions();options.RequestMarshaller = AuthorizeSecurityGroupIngressRequestMarshaller.Instance;options.ResponseUnmarshaller = AuthorizeSecurityGroupIngressResponseUnmarshaller.Instance;return Invoke<AuthorizeSecurityGroupIngressResponse>(request, options);}",
    "output": "public AuthorizeSecurityGroupIngressResult authorizeSecurityGroupIngress(AuthorizeSecurityGroupIngressRequest request) {request = beforeClientExecution(request);return executeAuthorizeSecurityGroupIngress(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void addFile(String file) {checkFileNames(Collections.singleton(file));setFiles.add(namedForThisSegment(file));}",
    "output": "public void AddFile(string file){CheckFileNames(new[] { file });setFiles.Add(file);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public void AddFile(string file){CheckFileNames(new[] { file });setFiles.Add(file);}",
    "output": "public void addFile(String file) {checkFileNames(Collections.singleton(file));setFiles.add(namedForThisSegment(file));}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void setSize(int width, int height) {mWidth = width;mHeight = height;}",
    "output": "public virtual void setSize(int width, int height){mWidth = width;mHeight = height;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual void setSize(int width, int height){mWidth = width;mHeight = height;}",
    "output": "public void setSize(int width, int height) {mWidth = width;mHeight = height;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public final void setPrecedenceFilterSuppressed(boolean value) {if (value) {this.reachesIntoOuterContext |= 0x40000000;}else {this.reachesIntoOuterContext &= ~SUPPRESS_PRECEDENCE_FILTER;}}",
    "output": "public void SetPrecedenceFilterSuppressed(bool value){if (value){this.reachesIntoOuterContext |= SUPPRESS_PRECEDENCE_FILTER;}else {this.reachesIntoOuterContext &= ~SUPPRESS_PRECEDENCE_FILTER;}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public void SetPrecedenceFilterSuppressed(bool value){if (value){this.reachesIntoOuterContext |= SUPPRESS_PRECEDENCE_FILTER;}else {this.reachesIntoOuterContext &= ~SUPPRESS_PRECEDENCE_FILTER;}}",
    "output": "public final void setPrecedenceFilterSuppressed(boolean value) {if (value) {this.reachesIntoOuterContext |= 0x40000000;}else {this.reachesIntoOuterContext &= ~SUPPRESS_PRECEDENCE_FILTER;}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public IntervalSet LOOK(ATNState s, RuleContext ctx) {return LOOK(s, null, ctx);}",
    "output": "public virtual IntervalSet Look(ATNState s, RuleContext ctx){return Look(s, null, ctx);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual IntervalSet Look(ATNState s, RuleContext ctx){return Look(s, null, ctx);}",
    "output": "public IntervalSet LOOK(ATNState s, RuleContext ctx) {return LOOK(s, null, ctx);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void serialize(LittleEndianOutput out) {out.writeShort(getOptionFlags());out.writeShort(getRowHeight());}",
    "output": "public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(OptionFlags);out1.WriteShort(RowHeight);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(OptionFlags);out1.WriteShort(RowHeight);}",
    "output": "public void serialize(LittleEndianOutput out) {out.writeShort(getOptionFlags());out.writeShort(getRowHeight());}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public Builder(boolean dedup) {this.dedup = dedup;}",
    "output": "public Builder(bool dedup){this.dedup = dedup;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public Builder(bool dedup){this.dedup = dedup;}",
    "output": "public Builder(boolean dedup) {this.dedup = dedup;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public Hashtable(int capacity, float loadFactor) {this(capacity);if (loadFactor <= 0 || Float.isNaN(loadFactor)) {throw new IllegalArgumentException(\"Load factor: \" + loadFactor);}}",
    "output": "public Hashtable(int capacity, float loadFactor) : this(capacity){if (loadFactor <= 0 || float.IsNaN(loadFactor)){throw new System.ArgumentException(\"Load factor: \" + loadFactor);}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public Hashtable(int capacity, float loadFactor) : this(capacity){if (loadFactor <= 0 || float.IsNaN(loadFactor)){throw new System.ArgumentException(\"Load factor: \" + loadFactor);}}",
    "output": "public Hashtable(int capacity, float loadFactor) {this(capacity);if (loadFactor <= 0 || Float.isNaN(loadFactor)) {throw new IllegalArgumentException(\"Load factor: \" + loadFactor);}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public Object get(CharSequence key) {final int bucket = normalCompletion.getBucket(key);return bucket == -1 ? null : Long.valueOf(bucket);}",
    "output": "public virtual object Get(string key){int bucket = normalCompletion.GetBucket(key);return bucket == -1 ? (long?)null : bucket;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual object Get(string key){int bucket = normalCompletion.GetBucket(key);return bucket == -1 ? (long?)null : bucket;}",
    "output": "public Object get(CharSequence key) {final int bucket = normalCompletion.getBucket(key);return bucket == -1 ? null : Long.valueOf(bucket);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ListHyperParameterTuningJobsResult listHyperParameterTuningJobs(ListHyperParameterTuningJobsRequest request) {request = beforeClientExecution(request);return executeListHyperParameterTuningJobs(request);}",
    "output": "public virtual ListHyperParameterTuningJobsResponse ListHyperParameterTuningJobs(ListHyperParameterTuningJobsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListHyperParameterTuningJobsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListHyperParameterTuningJobsResponseUnmarshaller.Instance;return Invoke<ListHyperParameterTuningJobsResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual ListHyperParameterTuningJobsResponse ListHyperParameterTuningJobs(ListHyperParameterTuningJobsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListHyperParameterTuningJobsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListHyperParameterTuningJobsResponseUnmarshaller.Instance;return Invoke<ListHyperParameterTuningJobsResponse>(request, options);}",
    "output": "public ListHyperParameterTuningJobsResult listHyperParameterTuningJobs(ListHyperParameterTuningJobsRequest request) {request = beforeClientExecution(request);return executeListHyperParameterTuningJobs(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DeleteTableResult deleteTable(String tableName) {return deleteTable(new DeleteTableRequest().withTableName(tableName));}",
    "output": "public virtual DeleteTableResponse DeleteTable(string tableName){var request = new DeleteTableRequest();request.TableName = tableName;return DeleteTable(request);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DeleteTableResponse DeleteTable(string tableName){var request = new DeleteTableRequest();request.TableName = tableName;return DeleteTable(request);}",
    "output": "public DeleteTableResult deleteTable(String tableName) {return deleteTable(new DeleteTableRequest().withTableName(tableName));}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public final boolean lessThan(TextFragment fragA, TextFragment fragB){if (fragA.getScore() == fragB.getScore())return fragA.fragNum > fragB.fragNum;else return fragA.getScore() < fragB.getScore();}",
    "output": "protected internal override bool LessThan(TextFragment fragA, TextFragment fragB){if (fragA.Score == fragB.Score)return fragA.FragNum > fragB.FragNum;else return fragA.Score < fragB.Score;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "protected internal override bool LessThan(TextFragment fragA, TextFragment fragB){if (fragA.Score == fragB.Score)return fragA.FragNum > fragB.FragNum;else return fragA.Score < fragB.Score;}",
    "output": "public final boolean lessThan(TextFragment fragA, TextFragment fragB){if (fragA.getScore() == fragB.getScore())return fragA.fragNum > fragB.fragNum;else return fragA.getScore() < fragB.getScore();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void freeBefore(int pos) {assert pos >= 0;assert pos <= nextPos;final int newCount = nextPos - pos;assert newCount <= count: \"newCount=\" + newCount + \" count=\" + count;assert newCount <= buffer.length: \"newCount=\" + newCount + \" buf.length=\" + buffer.length;count = newCount;}",
    "output": "public void FreeBefore(int pos){Debug.Assert(pos >= 0);Debug.Assert(pos <= nextPos);int newCount = nextPos - pos;Debug.Assert(newCount <= count, \"newCount=\" + newCount + \" count=\" + count);Debug.Assert(newCount <= buffer.Length, \"newCount=\" + newCount + \" buf.length=\" + buffer.Length);count = newCount;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public void FreeBefore(int pos){Debug.Assert(pos >= 0);Debug.Assert(pos <= nextPos);int newCount = nextPos - pos;Debug.Assert(newCount <= count, \"newCount=\" + newCount + \" count=\" + count);Debug.Assert(newCount <= buffer.Length, \"newCount=\" + newCount + \" buf.length=\" + buffer.Length);count = newCount;}",
    "output": "public void freeBefore(int pos) {assert pos >= 0;assert pos <= nextPos;final int newCount = nextPos - pos;assert newCount <= count: \"newCount=\" + newCount + \" count=\" + count;assert newCount <= buffer.length: \"newCount=\" + newCount + \" buf.length=\" + buffer.length;count = newCount;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public UpdateHITTypeOfHITResult updateHITTypeOfHIT(UpdateHITTypeOfHITRequest request) {request = beforeClientExecution(request);return executeUpdateHITTypeOfHIT(request);}",
    "output": "public virtual UpdateHITTypeOfHITResponse UpdateHITTypeOfHIT(UpdateHITTypeOfHITRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateHITTypeOfHITRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateHITTypeOfHITResponseUnmarshaller.Instance;return Invoke<UpdateHITTypeOfHITResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual UpdateHITTypeOfHITResponse UpdateHITTypeOfHIT(UpdateHITTypeOfHITRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateHITTypeOfHITRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateHITTypeOfHITResponseUnmarshaller.Instance;return Invoke<UpdateHITTypeOfHITResponse>(request, options);}",
    "output": "public UpdateHITTypeOfHITResult updateHITTypeOfHIT(UpdateHITTypeOfHITRequest request) {request = beforeClientExecution(request);return executeUpdateHITTypeOfHIT(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public UpdateRecommenderConfigurationResult updateRecommenderConfiguration(UpdateRecommenderConfigurationRequest request) {request = beforeClientExecution(request);return executeUpdateRecommenderConfiguration(request);}",
    "output": "public virtual UpdateRecommenderConfigurationResponse UpdateRecommenderConfiguration(UpdateRecommenderConfigurationRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateRecommenderConfigurationRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateRecommenderConfigurationResponseUnmarshaller.Instance;return Invoke<UpdateRecommenderConfigurationResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual UpdateRecommenderConfigurationResponse UpdateRecommenderConfiguration(UpdateRecommenderConfigurationRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateRecommenderConfigurationRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateRecommenderConfigurationResponseUnmarshaller.Instance;return Invoke<UpdateRecommenderConfigurationResponse>(request, options);}",
    "output": "public UpdateRecommenderConfigurationResult updateRecommenderConfiguration(UpdateRecommenderConfigurationRequest request) {request = beforeClientExecution(request);return executeUpdateRecommenderConfiguration(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public int compareTo(BytesRef other) {return Arrays.compareUnsigned(this.bytes, this.offset, this.offset + this.length,other.bytes, other.offset, other.offset + other.length);}",
    "output": "public int CompareTo(object other) {BytesRef br = other as BytesRef;Debug.Assert(br != null);return utf8SortedAsUnicodeSortOrder.Compare(this, br);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public int CompareTo(object other) {BytesRef br = other as BytesRef;Debug.Assert(br != null);return utf8SortedAsUnicodeSortOrder.Compare(this, br);}",
    "output": "public int compareTo(BytesRef other) {return Arrays.compareUnsigned(this.bytes, this.offset, this.offset + this.length,other.bytes, other.offset, other.offset + other.length);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public int stem(char s[], int len) {if (len > 4 && s[len-1] == 's')len--;if (len > 5 &&(endsWith(s, len, \"ene\") ||  (endsWith(s, len, \"ane\") &&useNynorsk                 )))return len - 3;if (len > 4 &&(endsWith(s, len, \"er\") ||   endsWith(s, len, \"en\") ||   endsWith(s, len, \"et\") ||   (endsWith(s, len, \"ar\") &&useNynorsk                 )))return len - 2;if (len > 3)switch(s[len-1]) {case 'a':     case 'e':     return len - 1;}return len;}",
    "output": "public virtual int Stem(char[] s, int len){if (len > 4 && s[len - 1] == 's'){len--;}if (len > 5 && (StemmerUtil.EndsWith(s, len, \"ene\") || (StemmerUtil.EndsWith(s, len, \"ane\") && useNynorsk))) {return len - 3;}if (len > 4 && (StemmerUtil.EndsWith(s, len, \"er\") || StemmerUtil.EndsWith(s, len, \"en\") || StemmerUtil.EndsWith(s, len, \"et\") || (StemmerUtil.EndsWith(s, len, \"ar\") && useNynorsk))) {return len - 2;}if (len > 3){switch (s[len - 1]){case 'a': case 'e': return len - 1;}}return len;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual int Stem(char[] s, int len){if (len > 4 && s[len - 1] == 's'){len--;}if (len > 5 && (StemmerUtil.EndsWith(s, len, \"ene\") || (StemmerUtil.EndsWith(s, len, \"ane\") && useNynorsk))) {return len - 3;}if (len > 4 && (StemmerUtil.EndsWith(s, len, \"er\") || StemmerUtil.EndsWith(s, len, \"en\") || StemmerUtil.EndsWith(s, len, \"et\") || (StemmerUtil.EndsWith(s, len, \"ar\") && useNynorsk))) {return len - 2;}if (len > 3){switch (s[len - 1]){case 'a': case 'e': return len - 1;}}return len;}",
    "output": "public int stem(char s[], int len) {if (len > 4 && s[len-1] == 's')len--;if (len > 5 &&(endsWith(s, len, \"ene\") ||  (endsWith(s, len, \"ane\") &&useNynorsk                 )))return len - 3;if (len > 4 &&(endsWith(s, len, \"er\") ||   endsWith(s, len, \"en\") ||   endsWith(s, len, \"et\") ||   (endsWith(s, len, \"ar\") &&useNynorsk                 )))return len - 2;if (len > 3)switch(s[len-1]) {case 'a':     case 'e':     return len - 1;}return len;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DescribeDBSnapshotsResult describeDBSnapshots(DescribeDBSnapshotsRequest request) {request = beforeClientExecution(request);return executeDescribeDBSnapshots(request);}",
    "output": "public virtual DescribeDBSnapshotsResponse DescribeDBSnapshots(DescribeDBSnapshotsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDBSnapshotsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDBSnapshotsResponseUnmarshaller.Instance;return Invoke<DescribeDBSnapshotsResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DescribeDBSnapshotsResponse DescribeDBSnapshots(DescribeDBSnapshotsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeDBSnapshotsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeDBSnapshotsResponseUnmarshaller.Instance;return Invoke<DescribeDBSnapshotsResponse>(request, options);}",
    "output": "public DescribeDBSnapshotsResult describeDBSnapshots(DescribeDBSnapshotsRequest request) {request = beforeClientExecution(request);return executeDescribeDBSnapshots(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public SortedSetDocValuesFacetField(String dim, String label) {super(\"dummy\", TYPE);FacetField.verifyLabel(label);FacetField.verifyLabel(dim);this.dim = dim;this.label = label;}",
    "output": "public SortedSetDocValuesFacetField(string dim, string label): base(\"dummy\", TYPE){FacetField.VerifyLabel(label);FacetField.VerifyLabel(dim);this.Dim = dim;this.Label = label;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public SortedSetDocValuesFacetField(string dim, string label): base(\"dummy\", TYPE){FacetField.VerifyLabel(label);FacetField.VerifyLabel(dim);this.Dim = dim;this.Label = label;}",
    "output": "public SortedSetDocValuesFacetField(String dim, String label) {super(\"dummy\", TYPE);FacetField.verifyLabel(label);FacetField.verifyLabel(dim);this.dim = dim;this.label = label;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public CreateDocumentationPartResult createDocumentationPart(CreateDocumentationPartRequest request) {request = beforeClientExecution(request);return executeCreateDocumentationPart(request);}",
    "output": "public virtual CreateDocumentationPartResponse CreateDocumentationPart(CreateDocumentationPartRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateDocumentationPartRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateDocumentationPartResponseUnmarshaller.Instance;return Invoke<CreateDocumentationPartResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual CreateDocumentationPartResponse CreateDocumentationPart(CreateDocumentationPartRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateDocumentationPartRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateDocumentationPartResponseUnmarshaller.Instance;return Invoke<CreateDocumentationPartResponse>(request, options);}",
    "output": "public CreateDocumentationPartResult createDocumentationPart(CreateDocumentationPartRequest request) {request = beforeClientExecution(request);return executeCreateDocumentationPart(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String getValue() {return value;}",
    "output": "public virtual string GetValue(){return value;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual string GetValue(){return value;}",
    "output": "public String getValue() {return value;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ShortBuffer asReadOnlyBuffer() {return duplicate();}",
    "output": "public override java.nio.ShortBuffer asReadOnlyBuffer(){return duplicate();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override java.nio.ShortBuffer asReadOnlyBuffer(){return duplicate();}",
    "output": "public ShortBuffer asReadOnlyBuffer() {return duplicate();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public UpdateDataSourcePermissionsResult updateDataSourcePermissions(UpdateDataSourcePermissionsRequest request) {request = beforeClientExecution(request);return executeUpdateDataSourcePermissions(request);}",
    "output": "public virtual UpdateDataSourcePermissionsResponse UpdateDataSourcePermissions(UpdateDataSourcePermissionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateDataSourcePermissionsRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateDataSourcePermissionsResponseUnmarshaller.Instance;return Invoke<UpdateDataSourcePermissionsResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual UpdateDataSourcePermissionsResponse UpdateDataSourcePermissions(UpdateDataSourcePermissionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = UpdateDataSourcePermissionsRequestMarshaller.Instance;options.ResponseUnmarshaller = UpdateDataSourcePermissionsResponseUnmarshaller.Instance;return Invoke<UpdateDataSourcePermissionsResponse>(request, options);}",
    "output": "public UpdateDataSourcePermissionsResult updateDataSourcePermissions(UpdateDataSourcePermissionsRequest request) {request = beforeClientExecution(request);return executeUpdateDataSourcePermissions(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public static org.apache.poi.hssf.record.Record createSingleRecord(RecordInputStream in) {I_RecordCreator constructor = _recordCreatorsById.get(Integer.valueOf(in.getSid()));if (constructor == null) {return new UnknownRecord(in);}return constructor.create(in);}",
    "output": "public static Record CreateSingleRecord(RecordInputStream in1){if (_recordCreatorsById.ContainsKey(in1.Sid)){I_RecordCreator constructor = _recordCreatorsById[in1.Sid];return constructor.Create(in1);}else{return new UnknownRecord(in1);}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public static Record CreateSingleRecord(RecordInputStream in1){if (_recordCreatorsById.ContainsKey(in1.Sid)){I_RecordCreator constructor = _recordCreatorsById[in1.Sid];return constructor.Create(in1);}else{return new UnknownRecord(in1);}}",
    "output": "public static org.apache.poi.hssf.record.Record createSingleRecord(RecordInputStream in) {I_RecordCreator constructor = _recordCreatorsById.get(Integer.valueOf(in.getSid()));if (constructor == null) {return new UnknownRecord(in);}return constructor.create(in);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public int getCount() {return mTabs.size();}",
    "output": "public override int getCount(){return this._enclosing.mTabLayout.getChildCount();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override int getCount(){return this._enclosing.mTabLayout.getChildCount();}",
    "output": "public int getCount() {return mTabs.size();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DeleteApplicationReferenceDataSourceResult deleteApplicationReferenceDataSource(DeleteApplicationReferenceDataSourceRequest request) {request = beforeClientExecution(request);return executeDeleteApplicationReferenceDataSource(request);}",
    "output": "public virtual DeleteApplicationReferenceDataSourceResponse DeleteApplicationReferenceDataSource(DeleteApplicationReferenceDataSourceRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteApplicationReferenceDataSourceRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteApplicationReferenceDataSourceResponseUnmarshaller.Instance;return Invoke<DeleteApplicationReferenceDataSourceResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DeleteApplicationReferenceDataSourceResponse DeleteApplicationReferenceDataSource(DeleteApplicationReferenceDataSourceRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteApplicationReferenceDataSourceRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteApplicationReferenceDataSourceResponseUnmarshaller.Instance;return Invoke<DeleteApplicationReferenceDataSourceResponse>(request, options);}",
    "output": "public DeleteApplicationReferenceDataSourceResult deleteApplicationReferenceDataSource(DeleteApplicationReferenceDataSourceRequest request) {request = beforeClientExecution(request);return executeDeleteApplicationReferenceDataSource(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public CreateProjectVersionResult createProjectVersion(CreateProjectVersionRequest request) {request = beforeClientExecution(request);return executeCreateProjectVersion(request);}",
    "output": "public virtual CreateProjectVersionResponse CreateProjectVersion(CreateProjectVersionRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateProjectVersionRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateProjectVersionResponseUnmarshaller.Instance;return Invoke<CreateProjectVersionResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual CreateProjectVersionResponse CreateProjectVersion(CreateProjectVersionRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateProjectVersionRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateProjectVersionResponseUnmarshaller.Instance;return Invoke<CreateProjectVersionResponse>(request, options);}",
    "output": "public CreateProjectVersionResult createProjectVersion(CreateProjectVersionRequest request) {request = beforeClientExecution(request);return executeCreateProjectVersion(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public IntBuffer slice() {return new ReadOnlyIntArrayBuffer(remaining(), backingArray, offset + position);}",
    "output": "public override java.nio.IntBuffer slice(){return new java.nio.ReadOnlyIntArrayBuffer(remaining(), backingArray, offset + _position);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override java.nio.IntBuffer slice(){return new java.nio.ReadOnlyIntArrayBuffer(remaining(), backingArray, offset + _position);}",
    "output": "public IntBuffer slice() {return new ReadOnlyIntArrayBuffer(remaining(), backingArray, offset + position);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public final byte get() {if (position == limit) {throw new BufferUnderflowException();}return this.block.peekByte(offset + position++);}",
    "output": "public sealed override byte get(){throw new System.NotImplementedException();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public sealed override byte get(){throw new System.NotImplementedException();}",
    "output": "public final byte get() {if (position == limit) {throw new BufferUnderflowException();}return this.block.peekByte(offset + position++);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public LongBuffer put(int index, long c) {checkIndex(index);backingArray[offset + index] = c;return this;}",
    "output": "public override java.nio.LongBuffer put(int index, long c){checkIndex(index);backingArray[offset + index] = c;return this;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override java.nio.LongBuffer put(int index, long c){checkIndex(index);backingArray[offset + index] = c;return this;}",
    "output": "public LongBuffer put(int index, long c) {checkIndex(index);backingArray[offset + index] = c;return this;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public StoredField(String name, float value) {super(name, TYPE);fieldsData = value;}",
    "output": "public StoredField(string name, float value): base(name, TYPE){FieldsData = new Single(value);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public StoredField(string name, float value): base(name, TYPE){FieldsData = new Single(value);}",
    "output": "public StoredField(String name, float value) {super(name, TYPE);fieldsData = value;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public IntervalSet getExpectedTokensWithinCurrentRule() {ATN atn = getInterpreter().atn;ATNState s = atn.states.get(getState());return atn.nextTokens(s);}",
    "output": "public virtual IntervalSet GetExpectedTokensWithinCurrentRule(){ATN atn = Interpreter.atn;ATNState s = atn.states[State];return atn.NextTokens(s);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual IntervalSet GetExpectedTokensWithinCurrentRule(){ATN atn = Interpreter.atn;ATNState s = atn.states[State];return atn.NextTokens(s);}",
    "output": "public IntervalSet getExpectedTokensWithinCurrentRule() {ATN atn = getInterpreter().atn;ATNState s = atn.states.get(getState());return atn.nextTokens(s);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String toString() {StringBuilder buffer = new StringBuilder();buffer.append(\"[FILESHARING]\\n\");buffer.append(\"    .readonly       = \").append(getReadOnly() == 1 ? \"true\" : \"false\").append(\"\\n\");buffer.append(\"    .password       = \").append(Integer.toHexString(getPassword())).append(\"\\n\");buffer.append(\"    .username       = \").append(getUsername()).append(\"\\n\");buffer.append(\"[/FILESHARING]\\n\");return buffer.toString();}",
    "output": "public override String ToString(){StringBuilder buffer = new StringBuilder();buffer.Append(\"[FILESHARING]\\n\");buffer.Append(\"    .Readonly       = \").Append(ReadOnly == 1 ? \"true\" : \"false\").Append(\"\\n\");buffer.Append(\"    .password       = \").Append(StringUtil.ToHexString(Password)).Append(\"\\n\");buffer.Append(\"    .username       = \").Append(Username).Append(\"\\n\");buffer.Append(\"[/FILESHARING]\\n\");return buffer.ToString();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override String ToString(){StringBuilder buffer = new StringBuilder();buffer.Append(\"[FILESHARING]\\n\");buffer.Append(\"    .Readonly       = \").Append(ReadOnly == 1 ? \"true\" : \"false\").Append(\"\\n\");buffer.Append(\"    .password       = \").Append(StringUtil.ToHexString(Password)).Append(\"\\n\");buffer.Append(\"    .username       = \").Append(Username).Append(\"\\n\");buffer.Append(\"[/FILESHARING]\\n\");return buffer.ToString();}",
    "output": "public String toString() {StringBuilder buffer = new StringBuilder();buffer.append(\"[FILESHARING]\\n\");buffer.append(\"    .readonly       = \").append(getReadOnly() == 1 ? \"true\" : \"false\").append(\"\\n\");buffer.append(\"    .password       = \").append(Integer.toHexString(getPassword())).append(\"\\n\");buffer.append(\"    .username       = \").append(getUsername()).append(\"\\n\");buffer.append(\"[/FILESHARING]\\n\");return buffer.toString();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public SubmoduleInitCommand(Repository repo) {super(repo);paths = new ArrayList<>();}",
    "output": "protected internal SubmoduleInitCommand(Repository repo) : base(repo){paths = new AList<string>();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "protected internal SubmoduleInitCommand(Repository repo) : base(repo){paths = new AList<string>();}",
    "output": "public SubmoduleInitCommand(Repository repo) {super(repo);paths = new ArrayList<>();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void include(String name, AnyObjectId id) {boolean validRefName = Repository.isValidRefName(name) || Constants.HEAD.equals(name);if (!validRefName)throw new IllegalArgumentException(MessageFormat.format(JGitText.get().invalidRefName, name));if (include.containsKey(name))throw new IllegalStateException(JGitText.get().duplicateRef + name);include.put(name, id.toObjectId());}",
    "output": "public virtual void Include(string name, AnyObjectId id){if (!Repository.IsValidRefName(name)){throw new ArgumentException(MessageFormat.Format(JGitText.Get().invalidRefName, name));}if (include.ContainsKey(name)){throw new InvalidOperationException(JGitText.Get().duplicateRef + name);}include.Put(name, id.ToObjectId());}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual void Include(string name, AnyObjectId id){if (!Repository.IsValidRefName(name)){throw new ArgumentException(MessageFormat.Format(JGitText.Get().invalidRefName, name));}if (include.ContainsKey(name)){throw new InvalidOperationException(JGitText.Get().duplicateRef + name);}include.Put(name, id.ToObjectId());}",
    "output": "public void include(String name, AnyObjectId id) {boolean validRefName = Repository.isValidRefName(name) || Constants.HEAD.equals(name);if (!validRefName)throw new IllegalArgumentException(MessageFormat.format(JGitText.get().invalidRefName, name));if (include.containsKey(name))throw new IllegalStateException(JGitText.get().duplicateRef + name);include.put(name, id.toObjectId());}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public Cluster enableSnapshotCopy(EnableSnapshotCopyRequest request) {request = beforeClientExecution(request);return executeEnableSnapshotCopy(request);}",
    "output": "public virtual EnableSnapshotCopyResponse EnableSnapshotCopy(EnableSnapshotCopyRequest request){var options = new InvokeOptions();options.RequestMarshaller = EnableSnapshotCopyRequestMarshaller.Instance;options.ResponseUnmarshaller = EnableSnapshotCopyResponseUnmarshaller.Instance;return Invoke<EnableSnapshotCopyResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual EnableSnapshotCopyResponse EnableSnapshotCopy(EnableSnapshotCopyRequest request){var options = new InvokeOptions();options.RequestMarshaller = EnableSnapshotCopyRequestMarshaller.Instance;options.ResponseUnmarshaller = EnableSnapshotCopyResponseUnmarshaller.Instance;return Invoke<EnableSnapshotCopyResponse>(request, options);}",
    "output": "public Cluster enableSnapshotCopy(EnableSnapshotCopyRequest request) {request = beforeClientExecution(request);return executeEnableSnapshotCopy(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ValueFiller getValueFiller() {return new ValueFiller();}",
    "output": "public virtual ValueFiller GetValueFiller(){return new ValueFillerAnonymousInnerClassHelper(this);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual ValueFiller GetValueFiller(){return new ValueFillerAnonymousInnerClassHelper(this);}",
    "output": "public ValueFiller getValueFiller() {return new ValueFiller();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void serialize(LittleEndianOutput out) {out.writeByte(getPane());out.writeShort(getActiveCellRow());out.writeShort(getActiveCellCol());out.writeShort(getActiveCellRef());int nRefs = field_6_refs.length;out.writeShort(nRefs);for (CellRangeAddress8Bit field_6_ref : field_6_refs) {field_6_ref.serialize(out);}}",
    "output": "public override void Serialize(ILittleEndianOutput out1){out1.WriteByte(Pane);out1.WriteShort(ActiveCellRow);out1.WriteShort(ActiveCellCol);out1.WriteShort(ActiveCellRef);int nRefs = field_6_refs.Length;out1.WriteShort(nRefs);for (int i = 0; i < field_6_refs.Length; i++){field_6_refs[i].Serialize(out1);}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override void Serialize(ILittleEndianOutput out1){out1.WriteByte(Pane);out1.WriteShort(ActiveCellRow);out1.WriteShort(ActiveCellCol);out1.WriteShort(ActiveCellRef);int nRefs = field_6_refs.Length;out1.WriteShort(nRefs);for (int i = 0; i < field_6_refs.Length; i++){field_6_refs[i].Serialize(out1);}}",
    "output": "public void serialize(LittleEndianOutput out) {out.writeByte(getPane());out.writeShort(getActiveCellRow());out.writeShort(getActiveCellCol());out.writeShort(getActiveCellRef());int nRefs = field_6_refs.length;out.writeShort(nRefs);for (CellRangeAddress8Bit field_6_ref : field_6_refs) {field_6_ref.serialize(out);}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public static Counter newCounter() {return newCounter(false);}",
    "output": "public static Counter NewCounter(){return NewCounter(false);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public static Counter NewCounter(){return NewCounter(false);}",
    "output": "public static Counter newCounter() {return newCounter(false);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public boolean get(String name, boolean dflt) {boolean vals[] = (boolean[]) valByRound.get(name);if (vals != null) {return vals[roundNumber % vals.length];}String sval = props.getProperty(name, \"\" + dflt);if (sval.indexOf(\":\") < 0) {return Boolean.valueOf(sval).booleanValue();}int k = sval.indexOf(\":\");String colName = sval.substring(0, k);sval = sval.substring(k + 1);colForValByRound.put(name, colName);vals = propToBooleanArray(sval);valByRound.put(name, vals);return vals[roundNumber % vals.length];}",
    "output": "public virtual int Get(string name, int dflt){int[] vals;object temp;if (valByRound.TryGetValue(name, out temp) && temp != null){vals = (int[])temp;return vals[roundNumber % vals.Length];}string sval;if (!props.TryGetValue(name, out sval)){sval = dflt.ToString(CultureInfo.InvariantCulture);}if (sval.IndexOf(':') < 0){return int.Parse(sval, CultureInfo.InvariantCulture);}int k = sval.IndexOf(':');string colName = sval.Substring(0, k - 0);sval = sval.Substring(k + 1);colForValByRound[name] = colName;vals = PropToInt32Array(sval);valByRound[name] = vals;return vals[roundNumber % vals.Length];}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual int Get(string name, int dflt){int[] vals;object temp;if (valByRound.TryGetValue(name, out temp) && temp != null){vals = (int[])temp;return vals[roundNumber % vals.Length];}string sval;if (!props.TryGetValue(name, out sval)){sval = dflt.ToString(CultureInfo.InvariantCulture);}if (sval.IndexOf(':') < 0){return int.Parse(sval, CultureInfo.InvariantCulture);}int k = sval.IndexOf(':');string colName = sval.Substring(0, k - 0);sval = sval.Substring(k + 1);colForValByRound[name] = colName;vals = PropToInt32Array(sval);valByRound[name] = vals;return vals[roundNumber % vals.Length];}",
    "output": "public boolean get(String name, boolean dflt) {boolean vals[] = (boolean[]) valByRound.get(name);if (vals != null) {return vals[roundNumber % vals.length];}String sval = props.getProperty(name, \"\" + dflt);if (sval.indexOf(\":\") < 0) {return Boolean.valueOf(sval).booleanValue();}int k = sval.indexOf(\":\");String colName = sval.substring(0, k);sval = sval.substring(k + 1);colForValByRound.put(name, colName);vals = propToBooleanArray(sval);valByRound.put(name, vals);return vals[roundNumber % vals.length];}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void preSerialize(){if(records.getTabpos() > 0) {TabIdRecord tir = ( TabIdRecord ) records.get(records.getTabpos());if(tir._tabids.length < boundsheets.size()) {fixTabIdRecord();}}}",
    "output": "public void PreSerialize(){if (records.Tabpos > 0){TabIdRecord tir = (TabIdRecord)records[(records.Tabpos)];if (tir._tabids.Length < boundsheets.Count){FixTabIdRecord();}}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public void PreSerialize(){if (records.Tabpos > 0){TabIdRecord tir = (TabIdRecord)records[(records.Tabpos)];if (tir._tabids.Length < boundsheets.Count){FixTabIdRecord();}}}",
    "output": "public void preSerialize(){if(records.getTabpos() > 0) {TabIdRecord tir = ( TabIdRecord ) records.get(records.getTabpos());if(tir._tabids.length < boundsheets.size()) {fixTabIdRecord();}}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public LimitTokenCountAnalyzer(Analyzer delegate, int maxTokenCount, boolean consumeAllTokens) {super(delegate.getReuseStrategy());this.delegate = delegate;this.maxTokenCount = maxTokenCount;this.consumeAllTokens = consumeAllTokens;}",
    "output": "public LimitTokenCountAnalyzer(Analyzer @delegate, int maxTokenCount, bool consumeAllTokens): base(@delegate.Strategy){this.@delegate = @delegate;this.maxTokenCount = maxTokenCount;this.consumeAllTokens = consumeAllTokens;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public LimitTokenCountAnalyzer(Analyzer @delegate, int maxTokenCount, bool consumeAllTokens): base(@delegate.Strategy){this.@delegate = @delegate;this.maxTokenCount = maxTokenCount;this.consumeAllTokens = consumeAllTokens;}",
    "output": "public LimitTokenCountAnalyzer(Analyzer delegate, int maxTokenCount, boolean consumeAllTokens) {super(delegate.getReuseStrategy());this.delegate = delegate;this.maxTokenCount = maxTokenCount;this.consumeAllTokens = consumeAllTokens;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ExternalBookBlock(int numberOfSheets) {_externalBookRecord = SupBookRecord.createInternalReferences((short) numberOfSheets);_externalNameRecords = new ExternalNameRecord[0];_crnBlocks = new CRNBlock[0];}",
    "output": "public ExternalBookBlock(int numberOfSheets){_externalBookRecord = SupBookRecord.CreateInternalReferences((short)numberOfSheets);_externalNameRecords = new ExternalNameRecord[0];_crnBlocks = new CRNBlock[0];}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public ExternalBookBlock(int numberOfSheets){_externalBookRecord = SupBookRecord.CreateInternalReferences((short)numberOfSheets);_externalNameRecords = new ExternalNameRecord[0];_crnBlocks = new CRNBlock[0];}",
    "output": "public ExternalBookBlock(int numberOfSheets) {_externalBookRecord = SupBookRecord.createInternalReferences((short) numberOfSheets);_externalNameRecords = new ExternalNameRecord[0];_crnBlocks = new CRNBlock[0];}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String toString(){StringBuilder buffer = new StringBuilder();buffer.append(\"[SCENARIOPROTECT]\\n\");buffer.append(\"    .protect         = \").append(getProtect()).append(\"\\n\");buffer.append(\"[/SCENARIOPROTECT]\\n\");return buffer.toString();}",
    "output": "public override String ToString(){StringBuilder buffer = new StringBuilder();buffer.Append(\"[SCENARIOPROTECT]\\n\");buffer.Append(\"    .protect         = \").Append(Protect).Append(\"\\n\");buffer.Append(\"[/SCENARIOPROTECT]\\n\");return buffer.ToString();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override String ToString(){StringBuilder buffer = new StringBuilder();buffer.Append(\"[SCENARIOPROTECT]\\n\");buffer.Append(\"    .protect         = \").Append(Protect).Append(\"\\n\");buffer.Append(\"[/SCENARIOPROTECT]\\n\");return buffer.ToString();}",
    "output": "public String toString(){StringBuilder buffer = new StringBuilder();buffer.append(\"[SCENARIOPROTECT]\\n\");buffer.append(\"    .protect         = \").append(getProtect()).append(\"\\n\");buffer.append(\"[/SCENARIOPROTECT]\\n\");return buffer.toString();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public PushCommand setThin(boolean thin) {checkCallable();this.thin = thin;return this;}",
    "output": "public virtual NGit.Api.PushCommand SetThin(bool thin){CheckCallable();this.thin = thin;return this;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual NGit.Api.PushCommand SetThin(bool thin){CheckCallable();this.thin = thin;return this;}",
    "output": "public PushCommand setThin(boolean thin) {checkCallable();this.thin = thin;return this;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public int compareTo(SearcherTracker other) {return Double.compare(other.recordTimeSec, recordTimeSec);}",
    "output": "public int CompareTo(SearcherTracker other){return other.RecordTimeSec.CompareTo(RecordTimeSec);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public int CompareTo(SearcherTracker other){return other.RecordTimeSec.CompareTo(RecordTimeSec);}",
    "output": "public int compareTo(SearcherTracker other) {return Double.compare(other.recordTimeSec, recordTimeSec);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ReverseStringFilter create(TokenStream in) {return new ReverseStringFilter(in);}",
    "output": "public override TokenStream Create(TokenStream input){return new ReverseStringFilter(m_luceneMatchVersion, input);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override TokenStream Create(TokenStream input){return new ReverseStringFilter(m_luceneMatchVersion, input);}",
    "output": "public ReverseStringFilter create(TokenStream in) {return new ReverseStringFilter(in);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public BlockList() {directory = BlockList.<T> newDirectory(256);directory[0] = BlockList.<T> newBlock();tailBlock = directory[0];}",
    "output": "public BlockList(){directory = NGit.Util.BlockList<T>.NewDirectory(256);directory[0] = NGit.Util.BlockList<T>.NewBlock();tailBlock = directory[0];}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public BlockList(){directory = NGit.Util.BlockList<T>.NewDirectory(256);directory[0] = NGit.Util.BlockList<T>.NewBlock();tailBlock = directory[0];}",
    "output": "public BlockList() {directory = BlockList.<T> newDirectory(256);directory[0] = BlockList.<T> newBlock();tailBlock = directory[0];}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public QueryScorer(WeightedSpanTerm[] weightedTerms) {this.fieldWeightedSpanTerms = new HashMap<>(weightedTerms.length);for (int i = 0; i < weightedTerms.length; i++) {WeightedSpanTerm existingTerm = fieldWeightedSpanTerms.get(weightedTerms[i].term);if ((existingTerm == null) ||(existingTerm.weight < weightedTerms[i].weight)) {fieldWeightedSpanTerms.put(weightedTerms[i].term, weightedTerms[i]);maxTermWeight = Math.max(maxTermWeight, weightedTerms[i].getWeight());}}skipInitExtractor = true;}",
    "output": "public QueryScorer(WeightedSpanTerm[] weightedTerms){this.fieldWeightedSpanTerms = new JCG.Dictionary<string, WeightedSpanTerm>(weightedTerms.Length);foreach (WeightedSpanTerm t in weightedTerms){if (!fieldWeightedSpanTerms.TryGetValue(t.Term, out WeightedSpanTerm existingTerm) ||(existingTerm == null) ||(existingTerm.Weight < t.Weight)){fieldWeightedSpanTerms[t.Term] = t;maxTermWeight = Math.Max(maxTermWeight, t.Weight);}}skipInitExtractor = true;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public QueryScorer(WeightedSpanTerm[] weightedTerms){this.fieldWeightedSpanTerms = new JCG.Dictionary<string, WeightedSpanTerm>(weightedTerms.Length);foreach (WeightedSpanTerm t in weightedTerms){if (!fieldWeightedSpanTerms.TryGetValue(t.Term, out WeightedSpanTerm existingTerm) ||(existingTerm == null) ||(existingTerm.Weight < t.Weight)){fieldWeightedSpanTerms[t.Term] = t;maxTermWeight = Math.Max(maxTermWeight, t.Weight);}}skipInitExtractor = true;}",
    "output": "public QueryScorer(WeightedSpanTerm[] weightedTerms) {this.fieldWeightedSpanTerms = new HashMap<>(weightedTerms.length);for (int i = 0; i < weightedTerms.length; i++) {WeightedSpanTerm existingTerm = fieldWeightedSpanTerms.get(weightedTerms[i].term);if ((existingTerm == null) ||(existingTerm.weight < weightedTerms[i].weight)) {fieldWeightedSpanTerms.put(weightedTerms[i].term, weightedTerms[i]);maxTermWeight = Math.max(maxTermWeight, weightedTerms[i].getWeight());}}skipInitExtractor = true;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public boolean equals(Object _other) {assert neverEquals(_other);if (_other instanceof MergedGroup) {MergedGroup<?> other = (MergedGroup<?>) _other;if (groupValue == null) {return other == null;} else {return groupValue.equals(other);}} else {return false;}}",
    "output": "public override bool Equals(object other){Debug.Assert(NeverEquals(other));if (other is MergedGroup<T> otherMergedGroup){if (groupValue == null){return otherMergedGroup == null;}else{return groupValueIsValueType ?JCG.EqualityComparer<T>.Default.Equals(groupValue, otherMergedGroup.groupValue) :J2N.Collections.StructuralEqualityComparer.Default.Equals(groupValue, otherMergedGroup.groupValue);}}else{return false;}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override bool Equals(object other){Debug.Assert(NeverEquals(other));if (other is MergedGroup<T> otherMergedGroup){if (groupValue == null){return otherMergedGroup == null;}else{return groupValueIsValueType ?JCG.EqualityComparer<T>.Default.Equals(groupValue, otherMergedGroup.groupValue) :J2N.Collections.StructuralEqualityComparer.Default.Equals(groupValue, otherMergedGroup.groupValue);}}else{return false;}}",
    "output": "public boolean equals(Object _other) {assert neverEquals(_other);if (_other instanceof MergedGroup) {MergedGroup<?> other = (MergedGroup<?>) _other;if (groupValue == null) {return other == null;} else {return groupValue.equals(other);}} else {return false;}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public final Charset charset() {return cs;}",
    "output": "public java.nio.charset.Charset charset(){return cs;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public java.nio.charset.Charset charset(){return cs;}",
    "output": "public final Charset charset() {return cs;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DescribeExperimentResult describeExperiment(DescribeExperimentRequest request) {request = beforeClientExecution(request);return executeDescribeExperiment(request);}",
    "output": "public virtual DescribeExperimentResponse DescribeExperiment(DescribeExperimentRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeExperimentRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeExperimentResponseUnmarshaller.Instance;return Invoke<DescribeExperimentResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DescribeExperimentResponse DescribeExperiment(DescribeExperimentRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeExperimentRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeExperimentResponseUnmarshaller.Instance;return Invoke<DescribeExperimentResponse>(request, options);}",
    "output": "public DescribeExperimentResult describeExperiment(DescribeExperimentRequest request) {request = beforeClientExecution(request);return executeDescribeExperiment(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public EscherGraphics(HSSFShapeGroup escherGroup, HSSFWorkbook workbook, Color forecolor, float verticalPointsPerPixel ){this.escherGroup = escherGroup;this.workbook = workbook;this.verticalPointsPerPixel = verticalPointsPerPixel;this.verticalPixelsPerPoint = 1 / verticalPointsPerPixel;this.font = new Font(\"Arial\", 0, 10);this.foreground = forecolor;}",
    "output": "public EscherGraphics(HSSFShapeGroup escherGroup, HSSFWorkbook workbook, Color forecolor, float verticalPointsPerPixel){this.escherGroup = escherGroup;this.workbook = workbook;this.verticalPointsPerPixel = verticalPointsPerPixel;this.verticalPixelsPerPoint = 1 / verticalPointsPerPixel;this.font = new Font(\"Arial\", 10);this.foreground = forecolor;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public EscherGraphics(HSSFShapeGroup escherGroup, HSSFWorkbook workbook, Color forecolor, float verticalPointsPerPixel){this.escherGroup = escherGroup;this.workbook = workbook;this.verticalPointsPerPixel = verticalPointsPerPixel;this.verticalPixelsPerPoint = 1 / verticalPointsPerPixel;this.font = new Font(\"Arial\", 10);this.foreground = forecolor;}",
    "output": "public EscherGraphics(HSSFShapeGroup escherGroup, HSSFWorkbook workbook, Color forecolor, float verticalPointsPerPixel ){this.escherGroup = escherGroup;this.workbook = workbook;this.verticalPointsPerPixel = verticalPointsPerPixel;this.verticalPixelsPerPoint = 1 / verticalPointsPerPixel;this.font = new Font(\"Arial\", 0, 10);this.foreground = forecolor;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String pattern() {return patternText;}",
    "output": "public virtual string Pattern(){return patternText;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual string Pattern(){return patternText;}",
    "output": "public String pattern() {return patternText;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DeleteRouteTableResult deleteRouteTable(DeleteRouteTableRequest request) {request = beforeClientExecution(request);return executeDeleteRouteTable(request);}",
    "output": "public virtual DeleteRouteTableResponse DeleteRouteTable(DeleteRouteTableRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteRouteTableRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteRouteTableResponseUnmarshaller.Instance;return Invoke<DeleteRouteTableResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DeleteRouteTableResponse DeleteRouteTable(DeleteRouteTableRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteRouteTableRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteRouteTableResponseUnmarshaller.Instance;return Invoke<DeleteRouteTableResponse>(request, options);}",
    "output": "public DeleteRouteTableResult deleteRouteTable(DeleteRouteTableRequest request) {request = beforeClientExecution(request);return executeDeleteRouteTable(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public AssociateVPCWithHostedZoneResult associateVPCWithHostedZone(AssociateVPCWithHostedZoneRequest request) {request = beforeClientExecution(request);return executeAssociateVPCWithHostedZone(request);}",
    "output": "public virtual AssociateVPCWithHostedZoneResponse AssociateVPCWithHostedZone(AssociateVPCWithHostedZoneRequest request){var options = new InvokeOptions();options.RequestMarshaller = AssociateVPCWithHostedZoneRequestMarshaller.Instance;options.ResponseUnmarshaller = AssociateVPCWithHostedZoneResponseUnmarshaller.Instance;return Invoke<AssociateVPCWithHostedZoneResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual AssociateVPCWithHostedZoneResponse AssociateVPCWithHostedZone(AssociateVPCWithHostedZoneRequest request){var options = new InvokeOptions();options.RequestMarshaller = AssociateVPCWithHostedZoneRequestMarshaller.Instance;options.ResponseUnmarshaller = AssociateVPCWithHostedZoneResponseUnmarshaller.Instance;return Invoke<AssociateVPCWithHostedZoneResponse>(request, options);}",
    "output": "public AssociateVPCWithHostedZoneResult associateVPCWithHostedZone(AssociateVPCWithHostedZoneRequest request) {request = beforeClientExecution(request);return executeAssociateVPCWithHostedZone(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public PutIntegrationResult putIntegration(PutIntegrationRequest request) {request = beforeClientExecution(request);return executePutIntegration(request);}",
    "output": "public virtual PutIntegrationResponse PutIntegration(PutIntegrationRequest request){var options = new InvokeOptions();options.RequestMarshaller = PutIntegrationRequestMarshaller.Instance;options.ResponseUnmarshaller = PutIntegrationResponseUnmarshaller.Instance;return Invoke<PutIntegrationResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual PutIntegrationResponse PutIntegration(PutIntegrationRequest request){var options = new InvokeOptions();options.RequestMarshaller = PutIntegrationRequestMarshaller.Instance;options.ResponseUnmarshaller = PutIntegrationResponseUnmarshaller.Instance;return Invoke<PutIntegrationResponse>(request, options);}",
    "output": "public PutIntegrationResult putIntegration(PutIntegrationRequest request) {request = beforeClientExecution(request);return executePutIntegration(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public SimpleEntry(K theKey, V theValue) {key = theKey;value = theValue;}",
    "output": "public SimpleEntry(K theKey, V theValue){key = theKey;value = theValue;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public SimpleEntry(K theKey, V theValue){key = theKey;value = theValue;}",
    "output": "public SimpleEntry(K theKey, V theValue) {key = theKey;value = theValue;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void decode(byte[] blocks, int blocksOffset, long[] values, int valuesOffset, int iterations) {for (int i = 0; i < iterations; ++i) {final long byte0 = blocks[blocksOffset++] & 0xFF;final long byte1 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = (byte0 << 4) | (byte1 >>> 4);final long byte2 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte1 & 15) << 8) | byte2;}}",
    "output": "public override void Decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations){for (int i = 0; i < iterations; ++i){int byte0 = blocks[blocksOffset++] & 0xFF;int byte1 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = (byte0 << 4) | ((int)((uint)byte1 >> 4));int byte2 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte1 & 15) << 8) | byte2;}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override void Decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations){for (int i = 0; i < iterations; ++i){int byte0 = blocks[blocksOffset++] & 0xFF;int byte1 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = (byte0 << 4) | ((int)((uint)byte1 >> 4));int byte2 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte1 & 15) << 8) | byte2;}}",
    "output": "public void decode(byte[] blocks, int blocksOffset, long[] values, int valuesOffset, int iterations) {for (int i = 0; i < iterations; ++i) {final long byte0 = blocks[blocksOffset++] & 0xFF;final long byte1 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = (byte0 << 4) | (byte1 >>> 4);final long byte2 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte1 & 15) << 8) | byte2;}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DisassociateConnectionFromLagResult disassociateConnectionFromLag(DisassociateConnectionFromLagRequest request) {request = beforeClientExecution(request);return executeDisassociateConnectionFromLag(request);}",
    "output": "public virtual DisassociateConnectionFromLagResponse DisassociateConnectionFromLag(DisassociateConnectionFromLagRequest request){var options = new InvokeOptions();options.RequestMarshaller = DisassociateConnectionFromLagRequestMarshaller.Instance;options.ResponseUnmarshaller = DisassociateConnectionFromLagResponseUnmarshaller.Instance;return Invoke<DisassociateConnectionFromLagResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DisassociateConnectionFromLagResponse DisassociateConnectionFromLag(DisassociateConnectionFromLagRequest request){var options = new InvokeOptions();options.RequestMarshaller = DisassociateConnectionFromLagRequestMarshaller.Instance;options.ResponseUnmarshaller = DisassociateConnectionFromLagResponseUnmarshaller.Instance;return Invoke<DisassociateConnectionFromLagResponse>(request, options);}",
    "output": "public DisassociateConnectionFromLagResult disassociateConnectionFromLag(DisassociateConnectionFromLagRequest request) {request = beforeClientExecution(request);return executeDisassociateConnectionFromLag(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public FileMode getOldMode() {return oldMode;}",
    "output": "public virtual FileMode GetOldMode(){return oldMode;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual FileMode GetOldMode(){return oldMode;}",
    "output": "public FileMode getOldMode() {return oldMode;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "@Override public String toString() {return m.toString();}",
    "output": "public override string ToString(){return mapEntry.ToString();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override string ToString(){return mapEntry.ToString();}",
    "output": "@Override public String toString() {return m.toString();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public StopKeyPhrasesDetectionJobResult stopKeyPhrasesDetectionJob(StopKeyPhrasesDetectionJobRequest request) {request = beforeClientExecution(request);return executeStopKeyPhrasesDetectionJob(request);}",
    "output": "public virtual StopKeyPhrasesDetectionJobResponse StopKeyPhrasesDetectionJob(StopKeyPhrasesDetectionJobRequest request){var options = new InvokeOptions();options.RequestMarshaller = StopKeyPhrasesDetectionJobRequestMarshaller.Instance;options.ResponseUnmarshaller = StopKeyPhrasesDetectionJobResponseUnmarshaller.Instance;return Invoke<StopKeyPhrasesDetectionJobResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual StopKeyPhrasesDetectionJobResponse StopKeyPhrasesDetectionJob(StopKeyPhrasesDetectionJobRequest request){var options = new InvokeOptions();options.RequestMarshaller = StopKeyPhrasesDetectionJobRequestMarshaller.Instance;options.ResponseUnmarshaller = StopKeyPhrasesDetectionJobResponseUnmarshaller.Instance;return Invoke<StopKeyPhrasesDetectionJobResponse>(request, options);}",
    "output": "public StopKeyPhrasesDetectionJobResult stopKeyPhrasesDetectionJob(StopKeyPhrasesDetectionJobRequest request) {request = beforeClientExecution(request);return executeStopKeyPhrasesDetectionJob(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String toString() {return \"[Array Formula or Shared Formula]\\n\" + \"row = \" + getRow() + \"\\n\" + \"col = \" + getColumn() + \"\\n\";}",
    "output": "public override String ToString(){StringBuilder buffer = new StringBuilder(\"[Array Formula or Shared Formula]\\n\");buffer.Append(\"row = \").Append(Row).Append(\"\\n\");buffer.Append(\"col = \").Append(Column).Append(\"\\n\");return buffer.ToString();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override String ToString(){StringBuilder buffer = new StringBuilder(\"[Array Formula or Shared Formula]\\n\");buffer.Append(\"row = \").Append(Row).Append(\"\\n\");buffer.Append(\"col = \").Append(Column).Append(\"\\n\");return buffer.ToString();}",
    "output": "public String toString() {return \"[Array Formula or Shared Formula]\\n\" + \"row = \" + getRow() + \"\\n\" + \"col = \" + getColumn() + \"\\n\";}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ListDominantLanguageDetectionJobsResult listDominantLanguageDetectionJobs(ListDominantLanguageDetectionJobsRequest request) {request = beforeClientExecution(request);return executeListDominantLanguageDetectionJobs(request);}",
    "output": "public virtual ListDominantLanguageDetectionJobsResponse ListDominantLanguageDetectionJobs(ListDominantLanguageDetectionJobsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListDominantLanguageDetectionJobsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListDominantLanguageDetectionJobsResponseUnmarshaller.Instance;return Invoke<ListDominantLanguageDetectionJobsResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual ListDominantLanguageDetectionJobsResponse ListDominantLanguageDetectionJobs(ListDominantLanguageDetectionJobsRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListDominantLanguageDetectionJobsRequestMarshaller.Instance;options.ResponseUnmarshaller = ListDominantLanguageDetectionJobsResponseUnmarshaller.Instance;return Invoke<ListDominantLanguageDetectionJobsResponse>(request, options);}",
    "output": "public ListDominantLanguageDetectionJobsResult listDominantLanguageDetectionJobs(ListDominantLanguageDetectionJobsRequest request) {request = beforeClientExecution(request);return executeListDominantLanguageDetectionJobs(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String toString() {return \"slice start=\" + start + \" length=\" + length + \" readerIndex=\" + readerIndex;}",
    "output": "public override string ToString(){return \"slice start=\" + Start + \" length=\" + Length + \" readerIndex=\" + ReaderIndex;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override string ToString(){return \"slice start=\" + Start + \" length=\" + Length + \" readerIndex=\" + ReaderIndex;}",
    "output": "public String toString() {return \"slice start=\" + start + \" length=\" + length + \" readerIndex=\" + readerIndex;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public static final int parseHexInt4(final byte digit) {final byte r = digits16[digit];if (r < 0)throw new ArrayIndexOutOfBoundsException();return r;}",
    "output": "public static int ParseHexInt4(byte digit){sbyte r = digits16[digit];if (r < 0){throw new IndexOutOfRangeException();}return r;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public static int ParseHexInt4(byte digit){sbyte r = digits16[digit];if (r < 0){throw new IndexOutOfRangeException();}return r;}",
    "output": "public static final int parseHexInt4(final byte digit) {final byte r = digits16[digit];if (r < 0)throw new ArrayIndexOutOfBoundsException();return r;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public Attribute(String name, String value) {setName(name);setValue(value);}",
    "output": "public Attribute(string name, string value){_name = name;_value = value;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public Attribute(string name, string value){_name = name;_value = value;}",
    "output": "public Attribute(String name, String value) {setName(name);setValue(value);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DescribeStackSetOperationResult describeStackSetOperation(DescribeStackSetOperationRequest request) {request = beforeClientExecution(request);return executeDescribeStackSetOperation(request);}",
    "output": "public virtual DescribeStackSetOperationResponse DescribeStackSetOperation(DescribeStackSetOperationRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeStackSetOperationRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeStackSetOperationResponseUnmarshaller.Instance;return Invoke<DescribeStackSetOperationResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DescribeStackSetOperationResponse DescribeStackSetOperation(DescribeStackSetOperationRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeStackSetOperationRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeStackSetOperationResponseUnmarshaller.Instance;return Invoke<DescribeStackSetOperationResponse>(request, options);}",
    "output": "public DescribeStackSetOperationResult describeStackSetOperation(DescribeStackSetOperationRequest request) {request = beforeClientExecution(request);return executeDescribeStackSetOperation(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public HSSFCell getCell(int cellnum) {return getCell(cellnum, book.getMissingCellPolicy());}",
    "output": "public ICell GetCell(short cellnum){int ushortCellNum = cellnum & 0x0000FFFF; return GetCell(ushortCellNum);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public ICell GetCell(short cellnum){int ushortCellNum = cellnum & 0x0000FFFF; return GetCell(ushortCellNum);}",
    "output": "public HSSFCell getCell(int cellnum) {return getCell(cellnum, book.getMissingCellPolicy());}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void write(byte[] b) {writeContinueIfRequired(b.length);_ulrOutput.write(b);}",
    "output": "public void Write(byte[] b){WriteContinueIfRequired(b.Length);_ulrOutput.Write(b);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public void Write(byte[] b){WriteContinueIfRequired(b.Length);_ulrOutput.Write(b);}",
    "output": "public void write(byte[] b) {writeContinueIfRequired(b.length);_ulrOutput.write(b);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ResetImageAttributeRequest(String imageId, ResetImageAttributeName attribute) {setImageId(imageId);setAttribute(attribute.toString());}",
    "output": "public ResetImageAttributeRequest(string imageId, ResetImageAttributeName attribute){_imageId = imageId;_attribute = attribute;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public ResetImageAttributeRequest(string imageId, ResetImageAttributeName attribute){_imageId = imageId;_attribute = attribute;}",
    "output": "public ResetImageAttributeRequest(String imageId, ResetImageAttributeName attribute) {setImageId(imageId);setAttribute(attribute.toString());}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void discardResultContents() {resultContents = null;}",
    "output": "public virtual void DiscardResultContents(){resultContents = null;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual void DiscardResultContents(){resultContents = null;}",
    "output": "public void discardResultContents() {resultContents = null;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ObjectId getPeeledObjectId() {return getLeaf().getPeeledObjectId();}",
    "output": "public virtual ObjectId GetPeeledObjectId(){return GetLeaf().GetPeeledObjectId();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual ObjectId GetPeeledObjectId(){return GetLeaf().GetPeeledObjectId();}",
    "output": "public ObjectId getPeeledObjectId() {return getLeaf().getPeeledObjectId();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void undeprecateDomain(UndeprecateDomainRequest request) {request = beforeClientExecution(request);executeUndeprecateDomain(request);}",
    "output": "public virtual UndeprecateDomainResponse UndeprecateDomain(UndeprecateDomainRequest request){var options = new InvokeOptions();options.RequestMarshaller = UndeprecateDomainRequestMarshaller.Instance;options.ResponseUnmarshaller = UndeprecateDomainResponseUnmarshaller.Instance;return Invoke<UndeprecateDomainResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual UndeprecateDomainResponse UndeprecateDomain(UndeprecateDomainRequest request){var options = new InvokeOptions();options.RequestMarshaller = UndeprecateDomainRequestMarshaller.Instance;options.ResponseUnmarshaller = UndeprecateDomainResponseUnmarshaller.Instance;return Invoke<UndeprecateDomainResponse>(request, options);}",
    "output": "public void undeprecateDomain(UndeprecateDomainRequest request) {request = beforeClientExecution(request);executeUndeprecateDomain(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void write(LittleEndianOutput out) {out.writeByte(sid + getPtgClass());out.writeByte(field_3_string.length()); out.writeByte(_is16bitUnicode ? 0x01 : 0x00);if (_is16bitUnicode) {StringUtil.putUnicodeLE(field_3_string, out);} else {StringUtil.putCompressedUnicode(field_3_string, out);}}",
    "output": "public override void Write(ILittleEndianOutput out1){out1.WriteByte(sid + PtgClass);out1.WriteByte(field_3_string.Length); out1.WriteByte(_is16bitUnicode ? 0x01 : 0x00);if (_is16bitUnicode){StringUtil.PutUnicodeLE(field_3_string, out1);}else{StringUtil.PutCompressedUnicode(field_3_string, out1);}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override void Write(ILittleEndianOutput out1){out1.WriteByte(sid + PtgClass);out1.WriteByte(field_3_string.Length); out1.WriteByte(_is16bitUnicode ? 0x01 : 0x00);if (_is16bitUnicode){StringUtil.PutUnicodeLE(field_3_string, out1);}else{StringUtil.PutCompressedUnicode(field_3_string, out1);}}",
    "output": "public void write(LittleEndianOutput out) {out.writeByte(sid + getPtgClass());out.writeByte(field_3_string.length()); out.writeByte(_is16bitUnicode ? 0x01 : 0x00);if (_is16bitUnicode) {StringUtil.putUnicodeLE(field_3_string, out);} else {StringUtil.putCompressedUnicode(field_3_string, out);}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DeleteQueueResult deleteQueue(String queueUrl) {return deleteQueue(new DeleteQueueRequest().withQueueUrl(queueUrl));}",
    "output": "public virtual DeleteQueueResponse DeleteQueue(string queueUrl){var request = new DeleteQueueRequest();request.QueueUrl = queueUrl;return DeleteQueue(request);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DeleteQueueResponse DeleteQueue(string queueUrl){var request = new DeleteQueueRequest();request.QueueUrl = queueUrl;return DeleteQueue(request);}",
    "output": "public DeleteQueueResult deleteQueue(String queueUrl) {return deleteQueue(new DeleteQueueRequest().withQueueUrl(queueUrl));}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void setCheckEofAfterPackFooter(boolean b) {checkEofAfterPackFooter = b;}",
    "output": "public virtual void SetCheckEofAfterPackFooter(bool b){checkEofAfterPackFooter = b;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual void SetCheckEofAfterPackFooter(bool b){checkEofAfterPackFooter = b;}",
    "output": "public void setCheckEofAfterPackFooter(boolean b) {checkEofAfterPackFooter = b;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void swap() {final int sBegin = beginA;final int sEnd = endA;beginA = beginB;endA = endB;beginB = sBegin;endB = sEnd;}",
    "output": "public virtual void Swap(){int sBegin = beginA;int sEnd = endA;beginA = beginB;endA = endB;beginB = sBegin;endB = sEnd;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual void Swap(){int sBegin = beginA;int sEnd = endA;beginA = beginB;endA = endB;beginB = sBegin;endB = sEnd;}",
    "output": "public void swap() {final int sBegin = beginA;final int sEnd = endA;beginA = beginB;endA = endB;beginB = sBegin;endB = sEnd;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public int getPackedGitWindowSize() {return packedGitWindowSize;}",
    "output": "public virtual int GetPackedGitWindowSize(){return packedGitWindowSize;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual int GetPackedGitWindowSize(){return packedGitWindowSize;}",
    "output": "public int getPackedGitWindowSize() {return packedGitWindowSize;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public PutMetricDataResult putMetricData(PutMetricDataRequest request) {request = beforeClientExecution(request);return executePutMetricData(request);}",
    "output": "public virtual PutMetricDataResponse PutMetricData(PutMetricDataRequest request){var options = new InvokeOptions();options.RequestMarshaller = PutMetricDataRequestMarshaller.Instance;options.ResponseUnmarshaller = PutMetricDataResponseUnmarshaller.Instance;return Invoke<PutMetricDataResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual PutMetricDataResponse PutMetricData(PutMetricDataRequest request){var options = new InvokeOptions();options.RequestMarshaller = PutMetricDataRequestMarshaller.Instance;options.ResponseUnmarshaller = PutMetricDataResponseUnmarshaller.Instance;return Invoke<PutMetricDataResponse>(request, options);}",
    "output": "public PutMetricDataResult putMetricData(PutMetricDataRequest request) {request = beforeClientExecution(request);return executePutMetricData(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public GetCelebrityRecognitionResult getCelebrityRecognition(GetCelebrityRecognitionRequest request) {request = beforeClientExecution(request);return executeGetCelebrityRecognition(request);}",
    "output": "public virtual GetCelebrityRecognitionResponse GetCelebrityRecognition(GetCelebrityRecognitionRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetCelebrityRecognitionRequestMarshaller.Instance;options.ResponseUnmarshaller = GetCelebrityRecognitionResponseUnmarshaller.Instance;return Invoke<GetCelebrityRecognitionResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual GetCelebrityRecognitionResponse GetCelebrityRecognition(GetCelebrityRecognitionRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetCelebrityRecognitionRequestMarshaller.Instance;options.ResponseUnmarshaller = GetCelebrityRecognitionResponseUnmarshaller.Instance;return Invoke<GetCelebrityRecognitionResponse>(request, options);}",
    "output": "public GetCelebrityRecognitionResult getCelebrityRecognition(GetCelebrityRecognitionRequest request) {request = beforeClientExecution(request);return executeGetCelebrityRecognition(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public CreateQueueRequest(String queueName) {setQueueName(queueName);}",
    "output": "public CreateQueueRequest(string queueName){_queueName = queueName;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public CreateQueueRequest(string queueName){_queueName = queueName;}",
    "output": "public CreateQueueRequest(String queueName) {setQueueName(queueName);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public Area3DPxg(int externalWorkbookNumber, SheetIdentifier sheetName, AreaReference arearef) {super(arearef);this.externalWorkbookNumber = externalWorkbookNumber;this.firstSheetName = sheetName.getSheetIdentifier().getName();if (sheetName instanceof SheetRangeIdentifier) {this.lastSheetName = ((SheetRangeIdentifier)sheetName).getLastSheetIdentifier().getName();} else {this.lastSheetName = null;}}",
    "output": "public Area3DPxg(int externalWorkbookNumber, SheetIdentifier sheetName, AreaReference arearef): base(arearef){this.externalWorkbookNumber = externalWorkbookNumber;this.firstSheetName = sheetName.SheetId.Name;if (sheetName is SheetRangeIdentifier){this.lastSheetName = ((SheetRangeIdentifier)sheetName).LastSheetIdentifier.Name;}else{this.lastSheetName = null;}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public Area3DPxg(int externalWorkbookNumber, SheetIdentifier sheetName, AreaReference arearef): base(arearef){this.externalWorkbookNumber = externalWorkbookNumber;this.firstSheetName = sheetName.SheetId.Name;if (sheetName is SheetRangeIdentifier){this.lastSheetName = ((SheetRangeIdentifier)sheetName).LastSheetIdentifier.Name;}else{this.lastSheetName = null;}}",
    "output": "public Area3DPxg(int externalWorkbookNumber, SheetIdentifier sheetName, AreaReference arearef) {super(arearef);this.externalWorkbookNumber = externalWorkbookNumber;this.firstSheetName = sheetName.getSheetIdentifier().getName();if (sheetName instanceof SheetRangeIdentifier) {this.lastSheetName = ((SheetRangeIdentifier)sheetName).getLastSheetIdentifier().getName();} else {this.lastSheetName = null;}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void setBaseline(long clockTime) {t0 = clockTime;timeout = t0 + ticksAllowed;}",
    "output": "public virtual void SetBaseline(long clockTime){t0 = clockTime;timeout = t0 + ticksAllowed;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual void SetBaseline(long clockTime){t0 = clockTime;timeout = t0 + ticksAllowed;}",
    "output": "public void setBaseline(long clockTime) {t0 = clockTime;timeout = t0 + ticksAllowed;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public MoveAddressToVpcResult moveAddressToVpc(MoveAddressToVpcRequest request) {request = beforeClientExecution(request);return executeMoveAddressToVpc(request);}",
    "output": "public virtual MoveAddressToVpcResponse MoveAddressToVpc(MoveAddressToVpcRequest request){var options = new InvokeOptions();options.RequestMarshaller = MoveAddressToVpcRequestMarshaller.Instance;options.ResponseUnmarshaller = MoveAddressToVpcResponseUnmarshaller.Instance;return Invoke<MoveAddressToVpcResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual MoveAddressToVpcResponse MoveAddressToVpc(MoveAddressToVpcRequest request){var options = new InvokeOptions();options.RequestMarshaller = MoveAddressToVpcRequestMarshaller.Instance;options.ResponseUnmarshaller = MoveAddressToVpcResponseUnmarshaller.Instance;return Invoke<MoveAddressToVpcResponse>(request, options);}",
    "output": "public MoveAddressToVpcResult moveAddressToVpc(MoveAddressToVpcRequest request) {request = beforeClientExecution(request);return executeMoveAddressToVpc(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String toString() {String coll = collectionModel.getName();if (coll != null) {return String.format(Locale.ROOT, \"LM %s - %s\", getName(), coll);} else {return String.format(Locale.ROOT, \"LM %s\", getName());}}",
    "output": "public override string ToString(){string coll = m_collectionModel.GetName();if (coll != null){return string.Format(\"LM {0} - {1}\", GetName(), coll);}else{return string.Format(\"LM {0}\", GetName());}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override string ToString(){string coll = m_collectionModel.GetName();if (coll != null){return string.Format(\"LM {0} - {1}\", GetName(), coll);}else{return string.Format(\"LM {0}\", GetName());}}",
    "output": "public String toString() {String coll = collectionModel.getName();if (coll != null) {return String.format(Locale.ROOT, \"LM %s - %s\", getName(), coll);} else {return String.format(Locale.ROOT, \"LM %s\", getName());}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DescribeLagsResult describeLags(DescribeLagsRequest request) {request = beforeClientExecution(request);return executeDescribeLags(request);}",
    "output": "public virtual DescribeLagsResponse DescribeLags(DescribeLagsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeLagsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeLagsResponseUnmarshaller.Instance;return Invoke<DescribeLagsResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DescribeLagsResponse DescribeLags(DescribeLagsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeLagsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeLagsResponseUnmarshaller.Instance;return Invoke<DescribeLagsResponse>(request, options);}",
    "output": "public DescribeLagsResult describeLags(DescribeLagsRequest request) {request = beforeClientExecution(request);return executeDescribeLags(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public AreaEval offset(int relFirstRowIx, int relLastRowIx,int relFirstColIx, int relLastColIx) {if (_refEval == null) {return _areaEval.offset(relFirstRowIx, relLastRowIx, relFirstColIx, relLastColIx);}return _refEval.offset(relFirstRowIx, relLastRowIx, relFirstColIx, relLastColIx);}",
    "output": "public AreaEval Offset(int relFirstRowIx, int relLastRowIx,int relFirstColIx, int relLastColIx){if (_refEval == null){return _areaEval.Offset(relFirstRowIx, relLastRowIx, relFirstColIx, relLastColIx);}return _refEval.Offset(relFirstRowIx, relLastRowIx, relFirstColIx, relLastColIx);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public AreaEval Offset(int relFirstRowIx, int relLastRowIx,int relFirstColIx, int relLastColIx){if (_refEval == null){return _areaEval.Offset(relFirstRowIx, relLastRowIx, relFirstColIx, relLastColIx);}return _refEval.Offset(relFirstRowIx, relLastRowIx, relFirstColIx, relLastColIx);}",
    "output": "public AreaEval offset(int relFirstRowIx, int relLastRowIx,int relFirstColIx, int relLastColIx) {if (_refEval == null) {return _areaEval.offset(relFirstRowIx, relLastRowIx, relFirstColIx, relLastColIx);}return _refEval.offset(relFirstRowIx, relLastRowIx, relFirstColIx, relLastColIx);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ShortBuffer put(short[] src, int srcOffset, int shortCount) {byteBuffer.limit(limit * SizeOf.SHORT);byteBuffer.position(position * SizeOf.SHORT);if (byteBuffer instanceof ReadWriteDirectByteBuffer) {((ReadWriteDirectByteBuffer) byteBuffer).put(src, srcOffset, shortCount);} else {((ReadWriteHeapByteBuffer) byteBuffer).put(src, srcOffset, shortCount);}this.position += shortCount;return this;}",
    "output": "public override java.nio.ShortBuffer put(short[] src, int srcOffset, int shortCount){byteBuffer.limit(_limit * libcore.io.SizeOf.SHORT);byteBuffer.position(_position * libcore.io.SizeOf.SHORT);if (byteBuffer is java.nio.ReadWriteDirectByteBuffer){((java.nio.ReadWriteDirectByteBuffer)byteBuffer).put(src, srcOffset, shortCount);}else{((java.nio.ReadWriteHeapByteBuffer)byteBuffer).put(src, srcOffset, shortCount);}this._position += shortCount;return this;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override java.nio.ShortBuffer put(short[] src, int srcOffset, int shortCount){byteBuffer.limit(_limit * libcore.io.SizeOf.SHORT);byteBuffer.position(_position * libcore.io.SizeOf.SHORT);if (byteBuffer is java.nio.ReadWriteDirectByteBuffer){((java.nio.ReadWriteDirectByteBuffer)byteBuffer).put(src, srcOffset, shortCount);}else{((java.nio.ReadWriteHeapByteBuffer)byteBuffer).put(src, srcOffset, shortCount);}this._position += shortCount;return this;}",
    "output": "public ShortBuffer put(short[] src, int srcOffset, int shortCount) {byteBuffer.limit(limit * SizeOf.SHORT);byteBuffer.position(position * SizeOf.SHORT);if (byteBuffer instanceof ReadWriteDirectByteBuffer) {((ReadWriteDirectByteBuffer) byteBuffer).put(src, srcOffset, shortCount);} else {((ReadWriteHeapByteBuffer) byteBuffer).put(src, srcOffset, shortCount);}this.position += shortCount;return this;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void initialize(final String cat) {this._cat=cat;}",
    "output": "public override void Initialize(String cat){this._cat = cat;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override void Initialize(String cat){this._cat = cat;}",
    "output": "public void initialize(final String cat) {this._cat=cat;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void write(int oneByte) throws IOException {out.write(oneByte);written++;}",
    "output": "public override void write(int oneByte){throw new System.NotImplementedException();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override void write(int oneByte){throw new System.NotImplementedException();}",
    "output": "public void write(int oneByte) throws IOException {out.write(oneByte);written++;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DescribeImportImageTasksResult describeImportImageTasks(DescribeImportImageTasksRequest request) {request = beforeClientExecution(request);return executeDescribeImportImageTasks(request);}",
    "output": "public virtual DescribeImportImageTasksResponse DescribeImportImageTasks(DescribeImportImageTasksRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeImportImageTasksRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeImportImageTasksResponseUnmarshaller.Instance;return Invoke<DescribeImportImageTasksResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DescribeImportImageTasksResponse DescribeImportImageTasks(DescribeImportImageTasksRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeImportImageTasksRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeImportImageTasksResponseUnmarshaller.Instance;return Invoke<DescribeImportImageTasksResponse>(request, options);}",
    "output": "public DescribeImportImageTasksResult describeImportImageTasks(DescribeImportImageTasksRequest request) {request = beforeClientExecution(request);return executeDescribeImportImageTasks(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ColumnInfoRecord(RecordInputStream in) {_firstCol = in.readUShort();_lastCol  = in.readUShort();_colWidth = in.readUShort();_xfIndex  = in.readUShort();_options   = in.readUShort();switch(in.remaining()) {case 2: field_6_reserved  = in.readUShort();break;case 1:field_6_reserved  = in.readByte();break;case 0:field_6_reserved  = 0;break;default:throw new RuntimeException(\"Unusual record size remaining=(\" + in.remaining() + \")\");}}",
    "output": "public ColumnInfoRecord(RecordInputStream in1){_first_col = in1.ReadUShort();_last_col = in1.ReadUShort();_col_width = in1.ReadUShort();_xf_index = in1.ReadUShort();_options = in1.ReadUShort();switch (in1.Remaining){case 2: field_6_reserved = in1.ReadUShort();break;case 1:field_6_reserved = in1.ReadByte();break;case 0:field_6_reserved = 0;break;default:throw new Exception(\"Unusual record size remaining=(\" + in1.Remaining + \")\");}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public ColumnInfoRecord(RecordInputStream in1){_first_col = in1.ReadUShort();_last_col = in1.ReadUShort();_col_width = in1.ReadUShort();_xf_index = in1.ReadUShort();_options = in1.ReadUShort();switch (in1.Remaining){case 2: field_6_reserved = in1.ReadUShort();break;case 1:field_6_reserved = in1.ReadByte();break;case 0:field_6_reserved = 0;break;default:throw new Exception(\"Unusual record size remaining=(\" + in1.Remaining + \")\");}}",
    "output": "public ColumnInfoRecord(RecordInputStream in) {_firstCol = in.readUShort();_lastCol  = in.readUShort();_colWidth = in.readUShort();_xfIndex  = in.readUShort();_options   = in.readUShort();switch(in.remaining()) {case 2: field_6_reserved  = in.readUShort();break;case 1:field_6_reserved  = in.readByte();break;case 0:field_6_reserved  = 0;break;default:throw new RuntimeException(\"Unusual record size remaining=(\" + in.remaining() + \")\");}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public Status(IndexDiff diff) {super();this.diff = diff;hasUncommittedChanges = !diff.getAdded().isEmpty() || !diff.getChanged().isEmpty() || !diff.getRemoved().isEmpty() || !diff.getMissing().isEmpty() || !diff.getModified().isEmpty() || !diff.getConflicting().isEmpty();clean = !hasUncommittedChanges && diff.getUntracked().isEmpty();}",
    "output": "public Status(IndexDiff diff) : base(){this.diff = diff;clean = diff.GetAdded().IsEmpty() && diff.GetChanged().IsEmpty() && diff.GetRemoved().IsEmpty() && diff.GetMissing().IsEmpty() && diff.GetModified().IsEmpty() && diff.GetUntracked().IsEmpty() && diff.GetConflicting().IsEmpty();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public Status(IndexDiff diff) : base(){this.diff = diff;clean = diff.GetAdded().IsEmpty() && diff.GetChanged().IsEmpty() && diff.GetRemoved().IsEmpty() && diff.GetMissing().IsEmpty() && diff.GetModified().IsEmpty() && diff.GetUntracked().IsEmpty() && diff.GetConflicting().IsEmpty();}",
    "output": "public Status(IndexDiff diff) {super();this.diff = diff;hasUncommittedChanges = !diff.getAdded().isEmpty() || !diff.getChanged().isEmpty() || !diff.getRemoved().isEmpty() || !diff.getMissing().isEmpty() || !diff.getModified().isEmpty() || !diff.getConflicting().isEmpty();clean = !hasUncommittedChanges && diff.getUntracked().isEmpty();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public CreateExperimentResult createExperiment(CreateExperimentRequest request) {request = beforeClientExecution(request);return executeCreateExperiment(request);}",
    "output": "public virtual CreateExperimentResponse CreateExperiment(CreateExperimentRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateExperimentRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateExperimentResponseUnmarshaller.Instance;return Invoke<CreateExperimentResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual CreateExperimentResponse CreateExperiment(CreateExperimentRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateExperimentRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateExperimentResponseUnmarshaller.Instance;return Invoke<CreateExperimentResponse>(request, options);}",
    "output": "public CreateExperimentResult createExperiment(CreateExperimentRequest request) {request = beforeClientExecution(request);return executeCreateExperiment(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public UnknownRecord clone() {return copy();}",
    "output": "public override Object Clone(){return this;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override Object Clone(){return this;}",
    "output": "public UnknownRecord clone() {return copy();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public FloatBuffer slice() {byteBuffer.limit(limit * SizeOf.FLOAT);byteBuffer.position(position * SizeOf.FLOAT);ByteBuffer bb = byteBuffer.slice().order(byteBuffer.order());FloatBuffer result = new FloatToByteBufferAdapter(bb);byteBuffer.clear();return result;}",
    "output": "public override java.nio.FloatBuffer slice(){byteBuffer.limit(_limit * libcore.io.SizeOf.FLOAT);byteBuffer.position(_position * libcore.io.SizeOf.FLOAT);java.nio.ByteBuffer bb = byteBuffer.slice().order(byteBuffer.order());java.nio.FloatBuffer result = new java.nio.FloatToByteBufferAdapter(bb);byteBuffer.clear();return result;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override java.nio.FloatBuffer slice(){byteBuffer.limit(_limit * libcore.io.SizeOf.FLOAT);byteBuffer.position(_position * libcore.io.SizeOf.FLOAT);java.nio.ByteBuffer bb = byteBuffer.slice().order(byteBuffer.order());java.nio.FloatBuffer result = new java.nio.FloatToByteBufferAdapter(bb);byteBuffer.clear();return result;}",
    "output": "public FloatBuffer slice() {byteBuffer.limit(limit * SizeOf.FLOAT);byteBuffer.position(position * SizeOf.FLOAT);ByteBuffer bb = byteBuffer.slice().order(byteBuffer.order());FloatBuffer result = new FloatToByteBufferAdapter(bb);byteBuffer.clear();return result;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DescribeSnapshotSchedulesResult describeSnapshotSchedules(DescribeSnapshotSchedulesRequest request) {request = beforeClientExecution(request);return executeDescribeSnapshotSchedules(request);}",
    "output": "public virtual DescribeSnapshotSchedulesResponse DescribeSnapshotSchedules(DescribeSnapshotSchedulesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeSnapshotSchedulesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeSnapshotSchedulesResponseUnmarshaller.Instance;return Invoke<DescribeSnapshotSchedulesResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DescribeSnapshotSchedulesResponse DescribeSnapshotSchedules(DescribeSnapshotSchedulesRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeSnapshotSchedulesRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeSnapshotSchedulesResponseUnmarshaller.Instance;return Invoke<DescribeSnapshotSchedulesResponse>(request, options);}",
    "output": "public DescribeSnapshotSchedulesResult describeSnapshotSchedules(DescribeSnapshotSchedulesRequest request) {request = beforeClientExecution(request);return executeDescribeSnapshotSchedules(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ListImagesResult listImages(ListImagesRequest request) {request = beforeClientExecution(request);return executeListImages(request);}",
    "output": "public virtual ListImagesResponse ListImages(ListImagesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListImagesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListImagesResponseUnmarshaller.Instance;return Invoke<ListImagesResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual ListImagesResponse ListImages(ListImagesRequest request){var options = new InvokeOptions();options.RequestMarshaller = ListImagesRequestMarshaller.Instance;options.ResponseUnmarshaller = ListImagesResponseUnmarshaller.Instance;return Invoke<ListImagesResponse>(request, options);}",
    "output": "public ListImagesResult listImages(ListImagesRequest request) {request = beforeClientExecution(request);return executeListImages(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public Diff(int ins, int del, int rep, int noop) {INSERT = ins;DELETE = del;REPLACE = rep;NOOP = noop;}",
    "output": "public Diff(int ins, int del, int rep, int noop){INSERT = ins;DELETE = del;REPLACE = rep;NOOP = noop;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public Diff(int ins, int del, int rep, int noop){INSERT = ins;DELETE = del;REPLACE = rep;NOOP = noop;}",
    "output": "public Diff(int ins, int del, int rep, int noop) {INSERT = ins;DELETE = del;REPLACE = rep;NOOP = noop;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String toFormulaString(String[] operands){StringBuilder buffer = new StringBuilder();buffer.append(operands[ 0 ]);buffer.append(\",\");buffer.append(operands[ 1 ]);return buffer.toString();}",
    "output": "public override String ToFormulaString(String[] operands){StringBuilder buffer = new StringBuilder();buffer.Append(operands[0]);buffer.Append(\",\");buffer.Append(operands[1]);return buffer.ToString();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override String ToFormulaString(String[] operands){StringBuilder buffer = new StringBuilder();buffer.Append(operands[0]);buffer.Append(\",\");buffer.Append(operands[1]);return buffer.ToString();}",
    "output": "public String toFormulaString(String[] operands){StringBuilder buffer = new StringBuilder();buffer.append(operands[ 0 ]);buffer.append(\",\");buffer.append(operands[ 1 ]);return buffer.toString();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public static void setupEnvironment(String[] workbookNames, ForkedEvaluator[] evaluators) {WorkbookEvaluator[] wbEvals = new WorkbookEvaluator[evaluators.length];for (int i = 0; i < wbEvals.length; i++) {wbEvals[i] = evaluators[i]._evaluator;}CollaboratingWorkbooksEnvironment.setup(workbookNames, wbEvals);}",
    "output": "public static void SetupEnvironment(String[] workbookNames, ForkedEvaluator[] Evaluators){WorkbookEvaluator[] wbEvals = new WorkbookEvaluator[Evaluators.Length];for (int i = 0; i < wbEvals.Length; i++){wbEvals[i] = Evaluators[i]._evaluator;}CollaboratingWorkbooksEnvironment.Setup(workbookNames, wbEvals);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public static void SetupEnvironment(String[] workbookNames, ForkedEvaluator[] Evaluators){WorkbookEvaluator[] wbEvals = new WorkbookEvaluator[Evaluators.Length];for (int i = 0; i < wbEvals.Length; i++){wbEvals[i] = Evaluators[i]._evaluator;}CollaboratingWorkbooksEnvironment.Setup(workbookNames, wbEvals);}",
    "output": "public static void setupEnvironment(String[] workbookNames, ForkedEvaluator[] evaluators) {WorkbookEvaluator[] wbEvals = new WorkbookEvaluator[evaluators.length];for (int i = 0; i < wbEvals.length; i++) {wbEvals[i] = evaluators[i]._evaluator;}CollaboratingWorkbooksEnvironment.setup(workbookNames, wbEvals);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ListPhotoTagsRequest() {super(\"CloudPhoto\", \"2017-07-11\", \"ListPhotoTags\", \"cloudphoto\");setProtocol(ProtocolType.HTTPS);}",
    "output": "public ListPhotoTagsRequest(): base(\"CloudPhoto\", \"2017-07-11\", \"ListPhotoTags\", \"cloudphoto\", \"openAPI\"){Protocol = ProtocolType.HTTPS;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public ListPhotoTagsRequest(): base(\"CloudPhoto\", \"2017-07-11\", \"ListPhotoTags\", \"cloudphoto\", \"openAPI\"){Protocol = ProtocolType.HTTPS;}",
    "output": "public ListPhotoTagsRequest() {super(\"CloudPhoto\", \"2017-07-11\", \"ListPhotoTags\", \"cloudphoto\");setProtocol(ProtocolType.HTTPS);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public RandomSamplingFacetsCollector(int sampleSize, long seed) {super(false);this.sampleSize = sampleSize;this.random = new XORShift64Random(seed);this.sampledDocs = null;}",
    "output": "public RandomSamplingFacetsCollector(int sampleSize, long seed): base(false){this.sampleSize = sampleSize;this.random = new XORShift64Random(seed);this.sampledDocs = null;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public RandomSamplingFacetsCollector(int sampleSize, long seed): base(false){this.sampleSize = sampleSize;this.random = new XORShift64Random(seed);this.sampledDocs = null;}",
    "output": "public RandomSamplingFacetsCollector(int sampleSize, long seed) {super(false);this.sampleSize = sampleSize;this.random = new XORShift64Random(seed);this.sampledDocs = null;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public AllocateStaticIpResult allocateStaticIp(AllocateStaticIpRequest request) {request = beforeClientExecution(request);return executeAllocateStaticIp(request);}",
    "output": "public virtual AllocateStaticIpResponse AllocateStaticIp(AllocateStaticIpRequest request){var options = new InvokeOptions();options.RequestMarshaller = AllocateStaticIpRequestMarshaller.Instance;options.ResponseUnmarshaller = AllocateStaticIpResponseUnmarshaller.Instance;return Invoke<AllocateStaticIpResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual AllocateStaticIpResponse AllocateStaticIp(AllocateStaticIpRequest request){var options = new InvokeOptions();options.RequestMarshaller = AllocateStaticIpRequestMarshaller.Instance;options.ResponseUnmarshaller = AllocateStaticIpResponseUnmarshaller.Instance;return Invoke<AllocateStaticIpResponse>(request, options);}",
    "output": "public AllocateStaticIpResult allocateStaticIp(AllocateStaticIpRequest request) {request = beforeClientExecution(request);return executeAllocateStaticIp(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public FeatRecord(RecordInputStream in) {futureHeader = new FtrHeader(in);isf_sharedFeatureType = in.readShort();reserved1 = in.readByte();reserved2 = in.readInt();int cref = in.readUShort();cbFeatData = in.readInt();reserved3 = in.readShort();cellRefs = new CellRangeAddress[cref];for(int i=0; i<cellRefs.length; i++) {cellRefs[i] = new CellRangeAddress(in);}switch(isf_sharedFeatureType) {case FeatHdrRecord.SHAREDFEATURES_ISFPROTECTION:sharedFeature = new FeatProtection(in);break;case FeatHdrRecord.SHAREDFEATURES_ISFFEC2:sharedFeature = new FeatFormulaErr2(in);break;case FeatHdrRecord.SHAREDFEATURES_ISFFACTOID:sharedFeature = new FeatSmartTag(in);break;default:logger.log( POILogger.ERROR, \"Unknown Shared Feature \" + isf_sharedFeatureType + \" found!\");}}",
    "output": "public FeatRecord(RecordInputStream in1){futureHeader = new FtrHeader(in1);isf_sharedFeatureType = in1.ReadShort();reserved1 = (byte)in1.ReadByte();reserved2 = in1.ReadInt();int cref = in1.ReadUShort();cbFeatData = in1.ReadInt();reserved3 = in1.ReadShort();cellRefs = new CellRangeAddress[cref];for (int i = 0; i < cellRefs.Length; i++){cellRefs[i] = new CellRangeAddress(in1);}switch (isf_sharedFeatureType){case FeatHdrRecord.SHAREDFEATURES_ISFPROTECTION:sharedFeature = new FeatProtection(in1);break;case FeatHdrRecord.SHAREDFEATURES_ISFFEC2:sharedFeature = new FeatFormulaErr2(in1);break;case FeatHdrRecord.SHAREDFEATURES_ISFFACTOID:sharedFeature = new FeatSmartTag(in1);break;default:logger.Log(POILogger.ERROR, \"Unknown Shared Feature \" + isf_sharedFeatureType + \" found!\");break;}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public FeatRecord(RecordInputStream in1){futureHeader = new FtrHeader(in1);isf_sharedFeatureType = in1.ReadShort();reserved1 = (byte)in1.ReadByte();reserved2 = in1.ReadInt();int cref = in1.ReadUShort();cbFeatData = in1.ReadInt();reserved3 = in1.ReadShort();cellRefs = new CellRangeAddress[cref];for (int i = 0; i < cellRefs.Length; i++){cellRefs[i] = new CellRangeAddress(in1);}switch (isf_sharedFeatureType){case FeatHdrRecord.SHAREDFEATURES_ISFPROTECTION:sharedFeature = new FeatProtection(in1);break;case FeatHdrRecord.SHAREDFEATURES_ISFFEC2:sharedFeature = new FeatFormulaErr2(in1);break;case FeatHdrRecord.SHAREDFEATURES_ISFFACTOID:sharedFeature = new FeatSmartTag(in1);break;default:logger.Log(POILogger.ERROR, \"Unknown Shared Feature \" + isf_sharedFeatureType + \" found!\");break;}}",
    "output": "public FeatRecord(RecordInputStream in) {futureHeader = new FtrHeader(in);isf_sharedFeatureType = in.readShort();reserved1 = in.readByte();reserved2 = in.readInt();int cref = in.readUShort();cbFeatData = in.readInt();reserved3 = in.readShort();cellRefs = new CellRangeAddress[cref];for(int i=0; i<cellRefs.length; i++) {cellRefs[i] = new CellRangeAddress(in);}switch(isf_sharedFeatureType) {case FeatHdrRecord.SHAREDFEATURES_ISFPROTECTION:sharedFeature = new FeatProtection(in);break;case FeatHdrRecord.SHAREDFEATURES_ISFFEC2:sharedFeature = new FeatFormulaErr2(in);break;case FeatHdrRecord.SHAREDFEATURES_ISFFACTOID:sharedFeature = new FeatSmartTag(in);break;default:logger.log( POILogger.ERROR, \"Unknown Shared Feature \" + isf_sharedFeatureType + \" found!\");}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public RevCommit tryFastForward(RevCommit newCommit) throws IOException,GitAPIException {Ref head = getHead();ObjectId headId = head.getObjectId();if (headId == null)throw new RefNotFoundException(MessageFormat.format(JGitText.get().refNotResolved, Constants.HEAD));RevCommit headCommit = walk.lookupCommit(headId);if (walk.isMergedInto(newCommit, headCommit))return newCommit;String headName = getHeadName(head);return tryFastForward(headName, headCommit, newCommit);}",
    "output": "public virtual RevCommit TryFastForward(RevCommit newCommit){Ref head = repo.GetRef(Constants.HEAD);if (head == null || head.GetObjectId() == null){throw new RefNotFoundException(MessageFormat.Format(JGitText.Get().refNotResolved, Constants.HEAD));}ObjectId headId = head.GetObjectId();if (headId == null){throw new RefNotFoundException(MessageFormat.Format(JGitText.Get().refNotResolved, Constants.HEAD));}RevCommit headCommit = walk.LookupCommit(headId);if (walk.IsMergedInto(newCommit, headCommit)){return newCommit;}string headName;if (head.IsSymbolic()){headName = head.GetTarget().GetName();}else{headName = \"detached HEAD\";}return TryFastForward(headName, headCommit, newCommit);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual RevCommit TryFastForward(RevCommit newCommit){Ref head = repo.GetRef(Constants.HEAD);if (head == null || head.GetObjectId() == null){throw new RefNotFoundException(MessageFormat.Format(JGitText.Get().refNotResolved, Constants.HEAD));}ObjectId headId = head.GetObjectId();if (headId == null){throw new RefNotFoundException(MessageFormat.Format(JGitText.Get().refNotResolved, Constants.HEAD));}RevCommit headCommit = walk.LookupCommit(headId);if (walk.IsMergedInto(newCommit, headCommit)){return newCommit;}string headName;if (head.IsSymbolic()){headName = head.GetTarget().GetName();}else{headName = \"detached HEAD\";}return TryFastForward(headName, headCommit, newCommit);}",
    "output": "public RevCommit tryFastForward(RevCommit newCommit) throws IOException,GitAPIException {Ref head = getHead();ObjectId headId = head.getObjectId();if (headId == null)throw new RefNotFoundException(MessageFormat.format(JGitText.get().refNotResolved, Constants.HEAD));RevCommit headCommit = walk.lookupCommit(headId);if (walk.isMergedInto(newCommit, headCommit))return newCommit;String headName = getHeadName(head);return tryFastForward(headName, headCommit, newCommit);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public CreateSnapshotScheduleResult createSnapshotSchedule(CreateSnapshotScheduleRequest request) {request = beforeClientExecution(request);return executeCreateSnapshotSchedule(request);}",
    "output": "public virtual CreateSnapshotScheduleResponse CreateSnapshotSchedule(CreateSnapshotScheduleRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateSnapshotScheduleRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateSnapshotScheduleResponseUnmarshaller.Instance;return Invoke<CreateSnapshotScheduleResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual CreateSnapshotScheduleResponse CreateSnapshotSchedule(CreateSnapshotScheduleRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateSnapshotScheduleRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateSnapshotScheduleResponseUnmarshaller.Instance;return Invoke<CreateSnapshotScheduleResponse>(request, options);}",
    "output": "public CreateSnapshotScheduleResult createSnapshotSchedule(CreateSnapshotScheduleRequest request) {request = beforeClientExecution(request);return executeCreateSnapshotSchedule(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public Record getNext() {if(!hasNext()) {throw new RuntimeException(\"Attempt to read past end of record stream\");}_countRead ++;return _list.get(_nextIndex++);}",
    "output": "public Record GetNext(){if (_nextIndex >= _list.Count){throw new Exception(\"Attempt to Read past end of record stream\");}_countRead++;return (Record)_list[_nextIndex++];}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public Record GetNext(){if (_nextIndex >= _list.Count){throw new Exception(\"Attempt to Read past end of record stream\");}_countRead++;return (Record)_list[_nextIndex++];}",
    "output": "public Record getNext() {if(!hasNext()) {throw new RuntimeException(\"Attempt to read past end of record stream\");}_countRead ++;return _list.get(_nextIndex++);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String toString() {return RawParseUtils.decode(buf.toByteArray());}",
    "output": "public override string ToString(){return RawParseUtils.Decode(buf.ToByteArray());}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override string ToString(){return RawParseUtils.Decode(buf.ToByteArray());}",
    "output": "public String toString() {return RawParseUtils.decode(buf.toByteArray());}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ListTablesRequest(String exclusiveStartTableName) {setExclusiveStartTableName(exclusiveStartTableName);}",
    "output": "public ListTablesRequest(string exclusiveStartTableName){_exclusiveStartTableName = exclusiveStartTableName;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public ListTablesRequest(string exclusiveStartTableName){_exclusiveStartTableName = exclusiveStartTableName;}",
    "output": "public ListTablesRequest(String exclusiveStartTableName) {setExclusiveStartTableName(exclusiveStartTableName);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public EnableAlarmActionsResult enableAlarmActions(EnableAlarmActionsRequest request) {request = beforeClientExecution(request);return executeEnableAlarmActions(request);}",
    "output": "public virtual EnableAlarmActionsResponse EnableAlarmActions(EnableAlarmActionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = EnableAlarmActionsRequestMarshaller.Instance;options.ResponseUnmarshaller = EnableAlarmActionsResponseUnmarshaller.Instance;return Invoke<EnableAlarmActionsResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual EnableAlarmActionsResponse EnableAlarmActions(EnableAlarmActionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = EnableAlarmActionsRequestMarshaller.Instance;options.ResponseUnmarshaller = EnableAlarmActionsResponseUnmarshaller.Instance;return Invoke<EnableAlarmActionsResponse>(request, options);}",
    "output": "public EnableAlarmActionsResult enableAlarmActions(EnableAlarmActionsRequest request) {request = beforeClientExecution(request);return executeEnableAlarmActions(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public Builder() {this(true);}",
    "output": "public Builder(): base(){lastDocID = -1;wordNum = -1;word = 0;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public Builder(): base(){lastDocID = -1;wordNum = -1;word = 0;}",
    "output": "public Builder() {this(true);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public boolean equals(Object obj) {final State other = (State) obj;return is_final == other.is_final&& Arrays.equals(this.labels, other.labels)&& referenceEquals(this.states, other.states);}",
    "output": "public override bool Equals(object obj){State other = (State)obj;return is_final == other.is_final && Arrays.Equals(this.labels, other.labels) && ReferenceEquals(this.states, other.states);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override bool Equals(object obj){State other = (State)obj;return is_final == other.is_final && Arrays.Equals(this.labels, other.labels) && ReferenceEquals(this.states, other.states);}",
    "output": "public boolean equals(Object obj) {final State other = (State) obj;return is_final == other.is_final&& Arrays.equals(this.labels, other.labels)&& referenceEquals(this.states, other.states);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public TokenStream create(TokenStream input) {return new EnglishPossessiveFilter(input);}",
    "output": "public override TokenStream Create(TokenStream input){return new EnglishPossessiveFilter(m_luceneMatchVersion, input);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override TokenStream Create(TokenStream input){return new EnglishPossessiveFilter(m_luceneMatchVersion, input);}",
    "output": "public TokenStream create(TokenStream input) {return new EnglishPossessiveFilter(input);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void clearFormatting() {_string = cloneStringIfRequired();_string.clearFormatting();addToSSTIfRequired();}",
    "output": "public void ClearFormatting(){_string = CloneStringIfRequired();_string.ClearFormatting();AddToSSTIfRequired();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public void ClearFormatting(){_string = CloneStringIfRequired();_string.ClearFormatting();AddToSSTIfRequired();}",
    "output": "public void clearFormatting() {_string = cloneStringIfRequired();_string.clearFormatting();addToSSTIfRequired();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public int get(int index, long[] arr, int off, int len) {assert len > 0 : \"len must be > 0 (got \" + len + \")\";assert index >= 0 && index < valueCount;len = Math.min(len, valueCount - index);Arrays.fill(arr, off, off + len, 0);return len;}",
    "output": "public override int Get(int index, long[] arr, int off, int len){Debug.Assert(len > 0, \"len must be > 0 (got \" + len + \")\");Debug.Assert(index >= 0 && index < valueCount);len = Math.Min(len, valueCount - index);Arrays.Fill(arr, off, off + len, 0);return len;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override int Get(int index, long[] arr, int off, int len){Debug.Assert(len > 0, \"len must be > 0 (got \" + len + \")\");Debug.Assert(index >= 0 && index < valueCount);len = Math.Min(len, valueCount - index);Arrays.Fill(arr, off, off + len, 0);return len;}",
    "output": "public int get(int index, long[] arr, int off, int len) {assert len > 0 : \"len must be > 0 (got \" + len + \")\";assert index >= 0 && index < valueCount;len = Math.min(len, valueCount - index);Arrays.fill(arr, off, off + len, 0);return len;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DeleteRouteResponseResult deleteRouteResponse(DeleteRouteResponseRequest request) {request = beforeClientExecution(request);return executeDeleteRouteResponse(request);}",
    "output": "public virtual DeleteRouteResponseResponse DeleteRouteResponse(DeleteRouteResponseRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteRouteResponseRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteRouteResponseResponseUnmarshaller.Instance;return Invoke<DeleteRouteResponseResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DeleteRouteResponseResponse DeleteRouteResponse(DeleteRouteResponseRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteRouteResponseRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteRouteResponseResponseUnmarshaller.Instance;return Invoke<DeleteRouteResponseResponse>(request, options);}",
    "output": "public DeleteRouteResponseResult deleteRouteResponse(DeleteRouteResponseRequest request) {request = beforeClientExecution(request);return executeDeleteRouteResponse(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String toPrivateString() {return format(true, false);}",
    "output": "public virtual string ToPrivateString(){return Format(true, false);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual string ToPrivateString(){return Format(true, false);}",
    "output": "public String toPrivateString() {return format(true, false);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public CreatePresignedDomainUrlResult createPresignedDomainUrl(CreatePresignedDomainUrlRequest request) {request = beforeClientExecution(request);return executeCreatePresignedDomainUrl(request);}",
    "output": "public virtual CreatePresignedDomainUrlResponse CreatePresignedDomainUrl(CreatePresignedDomainUrlRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreatePresignedDomainUrlRequestMarshaller.Instance;options.ResponseUnmarshaller = CreatePresignedDomainUrlResponseUnmarshaller.Instance;return Invoke<CreatePresignedDomainUrlResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual CreatePresignedDomainUrlResponse CreatePresignedDomainUrl(CreatePresignedDomainUrlRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreatePresignedDomainUrlRequestMarshaller.Instance;options.ResponseUnmarshaller = CreatePresignedDomainUrlResponseUnmarshaller.Instance;return Invoke<CreatePresignedDomainUrlResponse>(request, options);}",
    "output": "public CreatePresignedDomainUrlResult createPresignedDomainUrl(CreatePresignedDomainUrlRequest request) {request = beforeClientExecution(request);return executeCreatePresignedDomainUrl(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void write(int oneChar) {doWrite(new char[] { (char) oneChar }, 0, 1);}",
    "output": "public override void write(int oneChar){doWrite(new char[] { (char)oneChar }, 0, 1);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override void write(int oneChar){doWrite(new char[] { (char)oneChar }, 0, 1);}",
    "output": "public void write(int oneChar) {doWrite(new char[] { (char) oneChar }, 0, 1);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public SSTRecord getSSTRecord() {return sstRecord;}",
    "output": "public SSTRecord GetSSTRecord(){return sstRecord;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public SSTRecord GetSSTRecord(){return sstRecord;}",
    "output": "public SSTRecord getSSTRecord() {return sstRecord;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String toString() {return \"term=\" + term + \",field=\" + field + \",value=\" + valueToString() + \",docIDUpto=\" + docIDUpto;}",
    "output": "public override string ToString(){return \"term=\" + term + \",field=\" + field + \",value=\" + value;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override string ToString(){return \"term=\" + term + \",field=\" + field + \",value=\" + value;}",
    "output": "public String toString() {return \"term=\" + term + \",field=\" + field + \",value=\" + valueToString() + \",docIDUpto=\" + docIDUpto;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public boolean isSaturated(FuzzySet bloomFilter, FieldInfo fieldInfo) {return bloomFilter.getSaturation() > 0.9f;}",
    "output": "public override bool IsSaturated(FuzzySet bloomFilter, FieldInfo fieldInfo){return bloomFilter.GetSaturation() > 0.9f;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override bool IsSaturated(FuzzySet bloomFilter, FieldInfo fieldInfo){return bloomFilter.GetSaturation() > 0.9f;}",
    "output": "public boolean isSaturated(FuzzySet bloomFilter, FieldInfo fieldInfo) {return bloomFilter.getSaturation() > 0.9f;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public Builder(boolean ignoreCase) {this.ignoreCase = ignoreCase;}",
    "output": "public Builder(bool ignoreCase){this.ignoreCase = ignoreCase;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public Builder(bool ignoreCase){this.ignoreCase = ignoreCase;}",
    "output": "public Builder(boolean ignoreCase) {this.ignoreCase = ignoreCase;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String toString() {return getClass().getName()+ \"(maxBasicQueries: \" + maxBasicQueries+ \", queriesMade: \" + queriesMade+ \")\";}",
    "output": "public override string ToString(){return GetType().Name+ \"(maxBasicQueries: \" + maxBasicQueries+ \", queriesMade: \" + queriesMade+ \")\";}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override string ToString(){return GetType().Name+ \"(maxBasicQueries: \" + maxBasicQueries+ \", queriesMade: \" + queriesMade+ \")\";}",
    "output": "public String toString() {return getClass().getName()+ \"(maxBasicQueries: \" + maxBasicQueries+ \", queriesMade: \" + queriesMade+ \")\";}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DeleteDataSourceResult deleteDataSource(DeleteDataSourceRequest request) {request = beforeClientExecution(request);return executeDeleteDataSource(request);}",
    "output": "public virtual DeleteDataSourceResponse DeleteDataSource(DeleteDataSourceRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteDataSourceRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteDataSourceResponseUnmarshaller.Instance;return Invoke<DeleteDataSourceResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DeleteDataSourceResponse DeleteDataSource(DeleteDataSourceRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeleteDataSourceRequestMarshaller.Instance;options.ResponseUnmarshaller = DeleteDataSourceResponseUnmarshaller.Instance;return Invoke<DeleteDataSourceResponse>(request, options);}",
    "output": "public DeleteDataSourceResult deleteDataSource(DeleteDataSourceRequest request) {request = beforeClientExecution(request);return executeDeleteDataSource(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public RebootNodeResult rebootNode(RebootNodeRequest request) {request = beforeClientExecution(request);return executeRebootNode(request);}",
    "output": "public virtual RebootNodeResponse RebootNode(RebootNodeRequest request){var options = new InvokeOptions();options.RequestMarshaller = RebootNodeRequestMarshaller.Instance;options.ResponseUnmarshaller = RebootNodeResponseUnmarshaller.Instance;return Invoke<RebootNodeResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual RebootNodeResponse RebootNode(RebootNodeRequest request){var options = new InvokeOptions();options.RequestMarshaller = RebootNodeRequestMarshaller.Instance;options.ResponseUnmarshaller = RebootNodeResponseUnmarshaller.Instance;return Invoke<RebootNodeResponse>(request, options);}",
    "output": "public RebootNodeResult rebootNode(RebootNodeRequest request) {request = beforeClientExecution(request);return executeRebootNode(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void processChildRecords() {convertRawBytesToEscherRecords();}",
    "output": "public void ProcessChildRecords(){ConvertRawBytesToEscherRecords();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public void ProcessChildRecords(){ConvertRawBytesToEscherRecords();}",
    "output": "public void processChildRecords() {convertRawBytesToEscherRecords();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public CreateOrUpdateTagsResult createOrUpdateTags(CreateOrUpdateTagsRequest request) {request = beforeClientExecution(request);return executeCreateOrUpdateTags(request);}",
    "output": "public virtual CreateOrUpdateTagsResponse CreateOrUpdateTags(CreateOrUpdateTagsRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateOrUpdateTagsRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateOrUpdateTagsResponseUnmarshaller.Instance;return Invoke<CreateOrUpdateTagsResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual CreateOrUpdateTagsResponse CreateOrUpdateTags(CreateOrUpdateTagsRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateOrUpdateTagsRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateOrUpdateTagsResponseUnmarshaller.Instance;return Invoke<CreateOrUpdateTagsResponse>(request, options);}",
    "output": "public CreateOrUpdateTagsResult createOrUpdateTags(CreateOrUpdateTagsRequest request) {request = beforeClientExecution(request);return executeCreateOrUpdateTags(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public FileSnapshot getSnapShot() {return snapShot;}",
    "output": "public FileSnapshot GetSnapShot(){return snapShot;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public FileSnapshot GetSnapShot(){return snapShot;}",
    "output": "public FileSnapshot getSnapShot() {return snapShot;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public InputStream openResource(String resource) throws IOException {final InputStream stream = (clazz != null) ?clazz.getResourceAsStream(resource) :loader.getResourceAsStream(resource);if (stream == null)throw new IOException(\"Resource not found: \" + resource);return stream;}",
    "output": "public Stream OpenResource(string resource){Stream stream = this.clazz.GetTypeInfo().Assembly.FindAndGetManifestResourceStream(clazz, resource);if (stream == null){throw new IOException(\"Resource not found: \" + resource);}return stream;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public Stream OpenResource(string resource){Stream stream = this.clazz.GetTypeInfo().Assembly.FindAndGetManifestResourceStream(clazz, resource);if (stream == null){throw new IOException(\"Resource not found: \" + resource);}return stream;}",
    "output": "public InputStream openResource(String resource) throws IOException {final InputStream stream = (clazz != null) ?clazz.getResourceAsStream(resource) :loader.getResourceAsStream(resource);if (stream == null)throw new IOException(\"Resource not found: \" + resource);return stream;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String toString() {StringBuilder sb = new StringBuilder(64);sb.append(getClass().getName()).append(\" [\");sb.append(\"sid=\").append(HexDump.shortToHex(_sid));sb.append(\" size=\").append(_data.length);sb.append(\" : \").append(HexDump.toHex(_data));sb.append(\"]\\n\");return sb.toString();}",
    "output": "public override String ToString(){StringBuilder sb = new StringBuilder(64);sb.Append(GetType().Name).Append(\" [\");sb.Append(\"sid=\").Append(HexDump.ShortToHex(_sid));sb.Append(\" size=\").Append(_data.Length);sb.Append(\" : \").Append(HexDump.ToHex(_data));sb.Append(\"]\\n\");return sb.ToString();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override String ToString(){StringBuilder sb = new StringBuilder(64);sb.Append(GetType().Name).Append(\" [\");sb.Append(\"sid=\").Append(HexDump.ShortToHex(_sid));sb.Append(\" size=\").Append(_data.Length);sb.Append(\" : \").Append(HexDump.ToHex(_data));sb.Append(\"]\\n\");return sb.ToString();}",
    "output": "public String toString() {StringBuilder sb = new StringBuilder(64);sb.append(getClass().getName()).append(\" [\");sb.append(\"sid=\").append(HexDump.shortToHex(_sid));sb.append(\" size=\").append(_data.length);sb.append(\" : \").append(HexDump.toHex(_data));sb.append(\"]\\n\");return sb.toString();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public int nextIndex() {return index;}",
    "output": "public virtual int nextIndex(){return index;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual int nextIndex(){return index;}",
    "output": "public int nextIndex() {return index;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public CharSequence toQueryString(EscapeQuerySyntax escaper) {if (isDefaultField(this.field)) {return \"\\\"\" + getTermEscapeQuoted(escaper) + \"\\\"\";} else {return this.field + \":\" + \"\\\"\" + getTermEscapeQuoted(escaper) + \"\\\"\";}}",
    "output": "public override string ToQueryString(IEscapeQuerySyntax escaper){if (IsDefaultField(this.m_field)){return \"\\\"\" + GetTermEscapeQuoted(escaper) + \"\\\"\";}else{return this.m_field + \":\" + \"\\\"\" + GetTermEscapeQuoted(escaper) + \"\\\"\";}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override string ToQueryString(IEscapeQuerySyntax escaper){if (IsDefaultField(this.m_field)){return \"\\\"\" + GetTermEscapeQuoted(escaper) + \"\\\"\";}else{return this.m_field + \":\" + \"\\\"\" + GetTermEscapeQuoted(escaper) + \"\\\"\";}}",
    "output": "public CharSequence toQueryString(EscapeQuerySyntax escaper) {if (isDefaultField(this.field)) {return \"\\\"\" + getTermEscapeQuoted(escaper) + \"\\\"\";} else {return this.field + \":\" + \"\\\"\" + getTermEscapeQuoted(escaper) + \"\\\"\";}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public CalcModeRecord clone() {return copy();}",
    "output": "public override Object Clone(){CalcModeRecord rec = new CalcModeRecord();rec.field_1_calcmode = field_1_calcmode;return rec;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override Object Clone(){CalcModeRecord rec = new CalcModeRecord();rec.field_1_calcmode = field_1_calcmode;return rec;}",
    "output": "public CalcModeRecord clone() {return copy();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public boolean isOutput() {return output;}",
    "output": "public virtual bool IsOutput(){return output;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual bool IsOutput(){return output;}",
    "output": "public boolean isOutput() {return output;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public CreateNetworkInterfaceResult createNetworkInterface(CreateNetworkInterfaceRequest request) {request = beforeClientExecution(request);return executeCreateNetworkInterface(request);}",
    "output": "public virtual CreateNetworkInterfaceResponse CreateNetworkInterface(CreateNetworkInterfaceRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateNetworkInterfaceRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateNetworkInterfaceResponseUnmarshaller.Instance;return Invoke<CreateNetworkInterfaceResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual CreateNetworkInterfaceResponse CreateNetworkInterface(CreateNetworkInterfaceRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateNetworkInterfaceRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateNetworkInterfaceResponseUnmarshaller.Instance;return Invoke<CreateNetworkInterfaceResponse>(request, options);}",
    "output": "public CreateNetworkInterfaceResult createNetworkInterface(CreateNetworkInterfaceRequest request) {request = beforeClientExecution(request);return executeCreateNetworkInterface(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void serialize(LittleEndianOutput out) {out.writeShort(field_1_password);}",
    "output": "public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(field_1_password);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(field_1_password);}",
    "output": "public void serialize(LittleEndianOutput out) {out.writeShort(field_1_password);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public StopDominantLanguageDetectionJobResult stopDominantLanguageDetectionJob(StopDominantLanguageDetectionJobRequest request) {request = beforeClientExecution(request);return executeStopDominantLanguageDetectionJob(request);}",
    "output": "public virtual StopDominantLanguageDetectionJobResponse StopDominantLanguageDetectionJob(StopDominantLanguageDetectionJobRequest request){var options = new InvokeOptions();options.RequestMarshaller = StopDominantLanguageDetectionJobRequestMarshaller.Instance;options.ResponseUnmarshaller = StopDominantLanguageDetectionJobResponseUnmarshaller.Instance;return Invoke<StopDominantLanguageDetectionJobResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual StopDominantLanguageDetectionJobResponse StopDominantLanguageDetectionJob(StopDominantLanguageDetectionJobRequest request){var options = new InvokeOptions();options.RequestMarshaller = StopDominantLanguageDetectionJobRequestMarshaller.Instance;options.ResponseUnmarshaller = StopDominantLanguageDetectionJobResponseUnmarshaller.Instance;return Invoke<StopDominantLanguageDetectionJobResponse>(request, options);}",
    "output": "public StopDominantLanguageDetectionJobResult stopDominantLanguageDetectionJob(StopDominantLanguageDetectionJobRequest request) {request = beforeClientExecution(request);return executeStopDominantLanguageDetectionJob(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ECSMetadataServiceCredentialsFetcher withConnectionTimeout(int milliseconds) {this.connectionTimeoutInMilliseconds = milliseconds;return this;}",
    "output": "public void WithConnectionTimeout(int milliseconds){connectionTimeoutInMilliseconds = milliseconds;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public void WithConnectionTimeout(int milliseconds){connectionTimeoutInMilliseconds = milliseconds;}",
    "output": "public ECSMetadataServiceCredentialsFetcher withConnectionTimeout(int milliseconds) {this.connectionTimeoutInMilliseconds = milliseconds;return this;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public GetGatewayGroupResult getGatewayGroup(GetGatewayGroupRequest request) {request = beforeClientExecution(request);return executeGetGatewayGroup(request);}",
    "output": "public virtual GetGatewayGroupResponse GetGatewayGroup(GetGatewayGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetGatewayGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = GetGatewayGroupResponseUnmarshaller.Instance;return Invoke<GetGatewayGroupResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual GetGatewayGroupResponse GetGatewayGroup(GetGatewayGroupRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetGatewayGroupRequestMarshaller.Instance;options.ResponseUnmarshaller = GetGatewayGroupResponseUnmarshaller.Instance;return Invoke<GetGatewayGroupResponse>(request, options);}",
    "output": "public GetGatewayGroupResult getGatewayGroup(GetGatewayGroupRequest request) {request = beforeClientExecution(request);return executeGetGatewayGroup(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public FloatBuffer slice() {return new ReadOnlyFloatArrayBuffer(remaining(), backingArray, offset + position);}",
    "output": "public override java.nio.FloatBuffer slice(){return new java.nio.ReadOnlyFloatArrayBuffer(remaining(), backingArray, offset +_position);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override java.nio.FloatBuffer slice(){return new java.nio.ReadOnlyFloatArrayBuffer(remaining(), backingArray, offset +_position);}",
    "output": "public FloatBuffer slice() {return new ReadOnlyFloatArrayBuffer(remaining(), backingArray, offset + position);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public static String join(Collection<String> parts, String separator,String lastSeparator) {StringBuilder sb = new StringBuilder();int i = 0;int lastIndex = parts.size() - 1;for (String part : parts) {sb.append(part);if (i == lastIndex - 1) {sb.append(lastSeparator);} else if (i != lastIndex) {sb.append(separator);}i++;}return sb.toString();}",
    "output": "public static string Join(ICollection<string> parts, string separator, string lastSeparator){StringBuilder sb = new StringBuilder();int i = 0;int lastIndex = parts.Count - 1;foreach (string part in parts){sb.Append(part);if (i == lastIndex - 1){sb.Append(lastSeparator);}else{if (i != lastIndex){sb.Append(separator);}}i++;}return sb.ToString();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public static string Join(ICollection<string> parts, string separator, string lastSeparator){StringBuilder sb = new StringBuilder();int i = 0;int lastIndex = parts.Count - 1;foreach (string part in parts){sb.Append(part);if (i == lastIndex - 1){sb.Append(lastSeparator);}else{if (i != lastIndex){sb.Append(separator);}}i++;}return sb.ToString();}",
    "output": "public static String join(Collection<String> parts, String separator,String lastSeparator) {StringBuilder sb = new StringBuilder();int i = 0;int lastIndex = parts.size() - 1;for (String part : parts) {sb.append(part);if (i == lastIndex - 1) {sb.append(lastSeparator);} else if (i != lastIndex) {sb.append(separator);}i++;}return sb.toString();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String toString() {return \"(\" + a.toString() + \" AND \" + b.toString() + \")\"; }",
    "output": "public override string ToString(){return \"(\" + a.ToString() + \" AND \" + b.ToString() + \")\";}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override string ToString(){return \"(\" + a.ToString() + \" AND \" + b.ToString() + \")\";}",
    "output": "public String toString() {return \"(\" + a.toString() + \" AND \" + b.toString() + \")\"; }"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ListSubscriptionsByTopicRequest(String topicArn, String nextToken) {setTopicArn(topicArn);setNextToken(nextToken);}",
    "output": "public ListSubscriptionsByTopicRequest(string topicArn, string nextToken){_topicArn = topicArn;_nextToken = nextToken;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public ListSubscriptionsByTopicRequest(string topicArn, string nextToken){_topicArn = topicArn;_nextToken = nextToken;}",
    "output": "public ListSubscriptionsByTopicRequest(String topicArn, String nextToken) {setTopicArn(topicArn);setNextToken(nextToken);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public byte readByte() {return bytes[pos--];}",
    "output": "public override byte ReadByte(){return bytes[pos--];}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override byte ReadByte(){return bytes[pos--];}",
    "output": "public byte readByte() {return bytes[pos--];}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public TerminateClientVpnConnectionsResult terminateClientVpnConnections(TerminateClientVpnConnectionsRequest request) {request = beforeClientExecution(request);return executeTerminateClientVpnConnections(request);}",
    "output": "public virtual TerminateClientVpnConnectionsResponse TerminateClientVpnConnections(TerminateClientVpnConnectionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = TerminateClientVpnConnectionsRequestMarshaller.Instance;options.ResponseUnmarshaller = TerminateClientVpnConnectionsResponseUnmarshaller.Instance;return Invoke<TerminateClientVpnConnectionsResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual TerminateClientVpnConnectionsResponse TerminateClientVpnConnections(TerminateClientVpnConnectionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = TerminateClientVpnConnectionsRequestMarshaller.Instance;options.ResponseUnmarshaller = TerminateClientVpnConnectionsResponseUnmarshaller.Instance;return Invoke<TerminateClientVpnConnectionsResponse>(request, options);}",
    "output": "public TerminateClientVpnConnectionsResult terminateClientVpnConnections(TerminateClientVpnConnectionsRequest request) {request = beforeClientExecution(request);return executeTerminateClientVpnConnections(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ReceiveMessageRequest(String queueUrl) {setQueueUrl(queueUrl);}",
    "output": "public ReceiveMessageRequest(string queueUrl){_queueUrl = queueUrl;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public ReceiveMessageRequest(string queueUrl){_queueUrl = queueUrl;}",
    "output": "public ReceiveMessageRequest(String queueUrl) {setQueueUrl(queueUrl);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void serialize(LittleEndianOutput out) {out.writeShort(field_1_barSpace);out.writeShort(field_2_categorySpace);out.writeShort(field_3_formatFlags);}",
    "output": "public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(field_1_barSpace);out1.WriteShort(field_2_categorySpace);out1.WriteShort(field_3_formatFlags);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(field_1_barSpace);out1.WriteShort(field_2_categorySpace);out1.WriteShort(field_3_formatFlags);}",
    "output": "public void serialize(LittleEndianOutput out) {out.writeShort(field_1_barSpace);out.writeShort(field_2_categorySpace);out.writeShort(field_3_formatFlags);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public Object common(Object output1, Object output2) {return outputs.common((T) output1, (T) output2);}",
    "output": "public override object Common(object output1, object output2){return outputs.Common((T)output1, (T)output2);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override object Common(object output1, object output2){return outputs.Common((T)output1, (T)output2);}",
    "output": "public Object common(Object output1, Object output2) {return outputs.common((T) output1, (T) output2);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public CreateVariableResult createVariable(CreateVariableRequest request) {request = beforeClientExecution(request);return executeCreateVariable(request);}",
    "output": "public virtual CreateVariableResponse CreateVariable(CreateVariableRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateVariableRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateVariableResponseUnmarshaller.Instance;return Invoke<CreateVariableResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual CreateVariableResponse CreateVariable(CreateVariableRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateVariableRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateVariableResponseUnmarshaller.Instance;return Invoke<CreateVariableResponse>(request, options);}",
    "output": "public CreateVariableResult createVariable(CreateVariableRequest request) {request = beforeClientExecution(request);return executeCreateVariable(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public static final int match(byte[] b, int ptr, byte[] src) {if (ptr + src.length > b.length)return -1;for (int i = 0; i < src.length; i++, ptr++)if (b[ptr] != src[i])return -1;return ptr;}",
    "output": "public static int Match(byte[] b, int ptr, byte[] src){if (ptr + src.Length > b.Length){return -1;}for (int i = 0; i < src.Length; i++, ptr++){if (b[ptr] != src[i]){return -1;}}return ptr;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public static int Match(byte[] b, int ptr, byte[] src){if (ptr + src.Length > b.Length){return -1;}for (int i = 0; i < src.Length; i++, ptr++){if (b[ptr] != src[i]){return -1;}}return ptr;}",
    "output": "public static final int match(byte[] b, int ptr, byte[] src) {if (ptr + src.length > b.length)return -1;for (int i = 0; i < src.length; i++, ptr++)if (b[ptr] != src[i])return -1;return ptr;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public int fillFields(byte[] data, int offset, EscherRecordFactory recordFactory) {int bytesRemaining = readHeader( data, offset );int pos            = offset + 8;int size           = 0;field_1_rectX1 =  LittleEndian.getInt( data, pos + size );size+=4;field_2_rectY1 =  LittleEndian.getInt( data, pos + size );size+=4;field_3_rectX2 =  LittleEndian.getInt( data, pos + size );size+=4;field_4_rectY2 =  LittleEndian.getInt( data, pos + size );size+=4;bytesRemaining -= size;if (bytesRemaining != 0) {throw new RecordFormatException(\"Expected no remaining bytes but got \" + bytesRemaining);}return 8 + size + bytesRemaining;}",
    "output": "public override int FillFields(byte[] data, int offset, IEscherRecordFactory recordFactory){int bytesRemaining = ReadHeader(data, offset);int pos = offset + 8;int size = 0;field_1_rectX1 = LittleEndian.GetInt(data, pos + size); size += 4;field_2_rectY1 = LittleEndian.GetInt(data, pos + size); size += 4;field_3_rectX2 = LittleEndian.GetInt(data, pos + size); size += 4;field_4_rectY2 = LittleEndian.GetInt(data, pos + size); size += 4;bytesRemaining -= size;if (bytesRemaining != 0) throw new RecordFormatException(\"Expected no remaining bytes but got \" + bytesRemaining);return 8 + size + bytesRemaining;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override int FillFields(byte[] data, int offset, IEscherRecordFactory recordFactory){int bytesRemaining = ReadHeader(data, offset);int pos = offset + 8;int size = 0;field_1_rectX1 = LittleEndian.GetInt(data, pos + size); size += 4;field_2_rectY1 = LittleEndian.GetInt(data, pos + size); size += 4;field_3_rectX2 = LittleEndian.GetInt(data, pos + size); size += 4;field_4_rectY2 = LittleEndian.GetInt(data, pos + size); size += 4;bytesRemaining -= size;if (bytesRemaining != 0) throw new RecordFormatException(\"Expected no remaining bytes but got \" + bytesRemaining);return 8 + size + bytesRemaining;}",
    "output": "public int fillFields(byte[] data, int offset, EscherRecordFactory recordFactory) {int bytesRemaining = readHeader( data, offset );int pos            = offset + 8;int size           = 0;field_1_rectX1 =  LittleEndian.getInt( data, pos + size );size+=4;field_2_rectY1 =  LittleEndian.getInt( data, pos + size );size+=4;field_3_rectX2 =  LittleEndian.getInt( data, pos + size );size+=4;field_4_rectY2 =  LittleEndian.getInt( data, pos + size );size+=4;bytesRemaining -= size;if (bytesRemaining != 0) {throw new RecordFormatException(\"Expected no remaining bytes but got \" + bytesRemaining);}return 8 + size + bytesRemaining;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public CreateCloudFrontOriginAccessIdentityResult createCloudFrontOriginAccessIdentity(CreateCloudFrontOriginAccessIdentityRequest request) {request = beforeClientExecution(request);return executeCreateCloudFrontOriginAccessIdentity(request);}",
    "output": "public virtual CreateCloudFrontOriginAccessIdentityResponse CreateCloudFrontOriginAccessIdentity(CreateCloudFrontOriginAccessIdentityRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateCloudFrontOriginAccessIdentityRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateCloudFrontOriginAccessIdentityResponseUnmarshaller.Instance;return Invoke<CreateCloudFrontOriginAccessIdentityResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual CreateCloudFrontOriginAccessIdentityResponse CreateCloudFrontOriginAccessIdentity(CreateCloudFrontOriginAccessIdentityRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateCloudFrontOriginAccessIdentityRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateCloudFrontOriginAccessIdentityResponseUnmarshaller.Instance;return Invoke<CreateCloudFrontOriginAccessIdentityResponse>(request, options);}",
    "output": "public CreateCloudFrontOriginAccessIdentityResult createCloudFrontOriginAccessIdentity(CreateCloudFrontOriginAccessIdentityRequest request) {request = beforeClientExecution(request);return executeCreateCloudFrontOriginAccessIdentity(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public boolean isNamespaceAware() {return getFeature (XmlPullParser.FEATURE_PROCESS_NAMESPACES);}",
    "output": "public virtual bool isNamespaceAware(){return getFeature(org.xmlpull.v1.XmlPullParserClass.FEATURE_PROCESS_NAMESPACES);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual bool isNamespaceAware(){return getFeature(org.xmlpull.v1.XmlPullParserClass.FEATURE_PROCESS_NAMESPACES);}",
    "output": "public boolean isNamespaceAware() {return getFeature (XmlPullParser.FEATURE_PROCESS_NAMESPACES);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void setOverridable(boolean on) {overridable = on;}",
    "output": "public virtual void SetOverridable(bool on){overridable = on;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual void SetOverridable(bool on){overridable = on;}",
    "output": "public void setOverridable(boolean on) {overridable = on;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String getClassName() {return className;}",
    "output": "public virtual string getClassName(){return className;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual string getClassName(){return className;}",
    "output": "public String getClassName() {return className;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public synchronized DirectoryReader getIndexReader() {if (indexReader != null) {indexReader.incRef();}return indexReader;}",
    "output": "public virtual DirectoryReader GetIndexReader(){lock (this){if (indexReader != null){indexReader.IncRef();}return indexReader;}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DirectoryReader GetIndexReader(){lock (this){if (indexReader != null){indexReader.IncRef();}return indexReader;}}",
    "output": "public synchronized DirectoryReader getIndexReader() {if (indexReader != null) {indexReader.incRef();}return indexReader;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public int indexOfKey(int key) {return binarySearch(mKeys, 0, mSize, key);}",
    "output": "public virtual int indexOfKey(int key){return binarySearch(mKeys, 0, mSize, key);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual int indexOfKey(int key){return binarySearch(mKeys, 0, mSize, key);}",
    "output": "public int indexOfKey(int key) {return binarySearch(mKeys, 0, mSize, key);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public BlankRecord(RecordInputStream in) {field_1_row = in.readUShort();field_2_col = in.readShort();field_3_xf  = in.readShort();}",
    "output": "public BlankRecord(RecordInputStream in1){field_1_row = in1.ReadUShort();field_2_col = in1.ReadShort();field_3_xf = in1.ReadShort();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public BlankRecord(RecordInputStream in1){field_1_row = in1.ReadUShort();field_2_col = in1.ReadShort();field_3_xf = in1.ReadShort();}",
    "output": "public BlankRecord(RecordInputStream in) {field_1_row = in.readUShort();field_2_col = in.readShort();field_3_xf  = in.readShort();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public long length() {return length;}",
    "output": "public override long length(){return length_Renamed;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override long length(){return length_Renamed;}",
    "output": "public long length() {return length;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public PasswordRecord(RecordInputStream in) {field_1_password = in.readShort();}",
    "output": "public PasswordRecord(RecordInputStream in1){field_1_password = in1.ReadShort();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public PasswordRecord(RecordInputStream in1){field_1_password = in1.ReadShort();}",
    "output": "public PasswordRecord(RecordInputStream in) {field_1_password = in.readShort();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public HashMap(int capacity, float loadFactor) {this(capacity);if (loadFactor <= 0 || Float.isNaN(loadFactor)) {throw new IllegalArgumentException(\"Load factor: \" + loadFactor);}}",
    "output": "public HashMap(int capacity, float loadFactor) : this(capacity){if (loadFactor <= 0 || float.IsNaN(loadFactor)){throw new System.ArgumentException(\"Load factor: \" + loadFactor);}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public HashMap(int capacity, float loadFactor) : this(capacity){if (loadFactor <= 0 || float.IsNaN(loadFactor)){throw new System.ArgumentException(\"Load factor: \" + loadFactor);}}",
    "output": "public HashMap(int capacity, float loadFactor) {this(capacity);if (loadFactor <= 0 || Float.isNaN(loadFactor)) {throw new IllegalArgumentException(\"Load factor: \" + loadFactor);}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void run() {long lastReopenStartNS = System.nanoTime();while (!finish) {while (!finish) {reopenLock.lock();try {boolean hasWaiting = waitingGen > searchingGen;final long nextReopenStartNS = lastReopenStartNS + (hasWaiting ? targetMinStaleNS : targetMaxStaleNS);final long sleepNS = nextReopenStartNS - System.nanoTime();if (sleepNS > 0) {reopenCond.awaitNanos(sleepNS);} else {break;}} catch (InterruptedException ie) {Thread.currentThread().interrupt();return;} finally {reopenLock.unlock();}}if (finish) {break;}lastReopenStartNS = System.nanoTime();refreshStartGen = writer.getMaxCompletedSequenceNumber();try {manager.maybeRefreshBlocking();} catch (IOException ioe) {throw new RuntimeException(ioe);}}}",
    "output": "public override void Run(){long lastReopenStartNS = DateTime.UtcNow.Ticks * 100;while (!finish){bool hasWaiting;lock (this)hasWaiting = waitingGen > searchingGen;long nextReopenStartNS = lastReopenStartNS + (hasWaiting ? targetMinStaleNS : targetMaxStaleNS);long sleepNS = nextReopenStartNS - Time.NanoTime();if (sleepNS > 0) try { reopenCond.WaitOne(TimeSpan.FromMilliseconds(sleepNS / Time.MILLISECONDS_PER_NANOSECOND)); }catch (ThreadInterruptedException ie){Thread.CurrentThread.Interrupt();return;} if (finish){break;}lastReopenStartNS = Time.NanoTime();refreshStartGen = writer.GetAndIncrementGeneration();try{manager.MaybeRefreshBlocking();}catch (System.IO.IOException ioe){throw new Exception(ioe.ToString(), ioe);}}RefreshDone();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override void Run(){long lastReopenStartNS = DateTime.UtcNow.Ticks * 100;while (!finish){bool hasWaiting;lock (this)hasWaiting = waitingGen > searchingGen;long nextReopenStartNS = lastReopenStartNS + (hasWaiting ? targetMinStaleNS : targetMaxStaleNS);long sleepNS = nextReopenStartNS - Time.NanoTime();if (sleepNS > 0) try { reopenCond.WaitOne(TimeSpan.FromMilliseconds(sleepNS / Time.MILLISECONDS_PER_NANOSECOND)); }catch (ThreadInterruptedException ie){Thread.CurrentThread.Interrupt();return;} if (finish){break;}lastReopenStartNS = Time.NanoTime();refreshStartGen = writer.GetAndIncrementGeneration();try{manager.MaybeRefreshBlocking();}catch (System.IO.IOException ioe){throw new Exception(ioe.ToString(), ioe);}}RefreshDone();}",
    "output": "public void run() {long lastReopenStartNS = System.nanoTime();while (!finish) {while (!finish) {reopenLock.lock();try {boolean hasWaiting = waitingGen > searchingGen;final long nextReopenStartNS = lastReopenStartNS + (hasWaiting ? targetMinStaleNS : targetMaxStaleNS);final long sleepNS = nextReopenStartNS - System.nanoTime();if (sleepNS > 0) {reopenCond.awaitNanos(sleepNS);} else {break;}} catch (InterruptedException ie) {Thread.currentThread().interrupt();return;} finally {reopenLock.unlock();}}if (finish) {break;}lastReopenStartNS = System.nanoTime();refreshStartGen = writer.getMaxCompletedSequenceNumber();try {manager.maybeRefreshBlocking();} catch (IOException ioe) {throw new RuntimeException(ioe);}}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DeleteLoginProfileRequest(String userName) {setUserName(userName);}",
    "output": "public DeleteLoginProfileRequest(string userName){_userName = userName;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public DeleteLoginProfileRequest(string userName){_userName = userName;}",
    "output": "public DeleteLoginProfileRequest(String userName) {setUserName(userName);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public E pollFirst() {return (size == 0) ? null : removeFirstImpl();}",
    "output": "public virtual E pollFirst(){return (_size == 0) ? default(E) : removeFirstImpl();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual E pollFirst(){return (_size == 0) ? default(E) : removeFirstImpl();}",
    "output": "public E pollFirst() {return (size == 0) ? null : removeFirstImpl();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public CreatePhotoRequest() {super(\"CloudPhoto\", \"2017-07-11\", \"CreatePhoto\", \"cloudphoto\");setProtocol(ProtocolType.HTTPS);}",
    "output": "public CreatePhotoRequest(): base(\"CloudPhoto\", \"2017-07-11\", \"CreatePhoto\", \"cloudphoto\", \"openAPI\"){Protocol = ProtocolType.HTTPS;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public CreatePhotoRequest(): base(\"CloudPhoto\", \"2017-07-11\", \"CreatePhoto\", \"cloudphoto\", \"openAPI\"){Protocol = ProtocolType.HTTPS;}",
    "output": "public CreatePhotoRequest() {super(\"CloudPhoto\", \"2017-07-11\", \"CreatePhoto\", \"cloudphoto\");setProtocol(ProtocolType.HTTPS);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String getName() {return \"resolve\"; }",
    "output": "public override string GetName(){return \"resolve\";}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override string GetName(){return \"resolve\";}",
    "output": "public String getName() {return \"resolve\"; }"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public int findEndOffset(StringBuilder buffer, int start) {if( start > buffer.length() || start < 0 ) return start;int offset, count = maxScan;for( offset = start; offset < buffer.length() && count > 0; count-- ){if( boundaryChars.contains( buffer.charAt( offset ) ) ) return offset;offset++;}return start;}",
    "output": "public virtual int FindEndOffset(StringBuilder buffer, int start){if (start > buffer.Length || start < 0) return start;int offset, count = m_maxScan;for (offset = start; offset < buffer.Length && count > 0; count--){if (m_boundaryChars.Contains(buffer[offset])) return offset;offset++;}return start;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual int FindEndOffset(StringBuilder buffer, int start){if (start > buffer.Length || start < 0) return start;int offset, count = m_maxScan;for (offset = start; offset < buffer.Length && count > 0; count--){if (m_boundaryChars.Contains(buffer[offset])) return offset;offset++;}return start;}",
    "output": "public int findEndOffset(StringBuilder buffer, int start) {if( start > buffer.length() || start < 0 ) return start;int offset, count = maxScan;for( offset = start; offset < buffer.length() && count > 0; count-- ){if( boundaryChars.contains( buffer.charAt( offset ) ) ) return offset;offset++;}return start;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void setObjectChecker(ObjectChecker oc) {objCheck = oc;}",
    "output": "public virtual void SetObjectChecker(ObjectChecker oc){objCheck = oc;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual void SetObjectChecker(ObjectChecker oc){objCheck = oc;}",
    "output": "public void setObjectChecker(ObjectChecker oc) {objCheck = oc;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public BaseRef(AreaEval ae) {_refEval = null;_areaEval = ae;_firstRowIndex = ae.getFirstRow();_firstColumnIndex = ae.getFirstColumn();_height = ae.getLastRow() - ae.getFirstRow() + 1;_width = ae.getLastColumn() - ae.getFirstColumn() + 1;}",
    "output": "public BaseRef(AreaEval ae){_refEval = null;_areaEval = ae;_firstRowIndex = ae.FirstRow;_firstColumnIndex = ae.FirstColumn;_height = ae.LastRow - ae.FirstRow + 1;_width = ae.LastColumn - ae.FirstColumn + 1;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public BaseRef(AreaEval ae){_refEval = null;_areaEval = ae;_firstRowIndex = ae.FirstRow;_firstColumnIndex = ae.FirstColumn;_height = ae.LastRow - ae.FirstRow + 1;_width = ae.LastColumn - ae.FirstColumn + 1;}",
    "output": "public BaseRef(AreaEval ae) {_refEval = null;_areaEval = ae;_firstRowIndex = ae.getFirstRow();_firstColumnIndex = ae.getFirstColumn();_height = ae.getLastRow() - ae.getFirstRow() + 1;_width = ae.getLastColumn() - ae.getFirstColumn() + 1;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public CreateVpcEndpointResult createVpcEndpoint(CreateVpcEndpointRequest request) {request = beforeClientExecution(request);return executeCreateVpcEndpoint(request);}",
    "output": "public virtual CreateVpcEndpointResponse CreateVpcEndpoint(CreateVpcEndpointRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateVpcEndpointRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateVpcEndpointResponseUnmarshaller.Instance;return Invoke<CreateVpcEndpointResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual CreateVpcEndpointResponse CreateVpcEndpoint(CreateVpcEndpointRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateVpcEndpointRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateVpcEndpointResponseUnmarshaller.Instance;return Invoke<CreateVpcEndpointResponse>(request, options);}",
    "output": "public CreateVpcEndpointResult createVpcEndpoint(CreateVpcEndpointRequest request) {request = beforeClientExecution(request);return executeCreateVpcEndpoint(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DeregisterWorkspaceDirectoryResult deregisterWorkspaceDirectory(DeregisterWorkspaceDirectoryRequest request) {request = beforeClientExecution(request);return executeDeregisterWorkspaceDirectory(request);}",
    "output": "public virtual DeregisterWorkspaceDirectoryResponse DeregisterWorkspaceDirectory(DeregisterWorkspaceDirectoryRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeregisterWorkspaceDirectoryRequestMarshaller.Instance;options.ResponseUnmarshaller = DeregisterWorkspaceDirectoryResponseUnmarshaller.Instance;return Invoke<DeregisterWorkspaceDirectoryResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DeregisterWorkspaceDirectoryResponse DeregisterWorkspaceDirectory(DeregisterWorkspaceDirectoryRequest request){var options = new InvokeOptions();options.RequestMarshaller = DeregisterWorkspaceDirectoryRequestMarshaller.Instance;options.ResponseUnmarshaller = DeregisterWorkspaceDirectoryResponseUnmarshaller.Instance;return Invoke<DeregisterWorkspaceDirectoryResponse>(request, options);}",
    "output": "public DeregisterWorkspaceDirectoryResult deregisterWorkspaceDirectory(DeregisterWorkspaceDirectoryRequest request) {request = beforeClientExecution(request);return executeDeregisterWorkspaceDirectory(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ChartFRTInfoRecord(RecordInputStream in) {rt = in.readShort();grbitFrt = in.readShort();verOriginator = in.readByte();verWriter = in.readByte();int cCFRTID = in.readShort();rgCFRTID = new CFRTID[cCFRTID];for (int i = 0; i < cCFRTID; i++) {rgCFRTID[i] = new CFRTID(in);}}",
    "output": "public ChartFRTInfoRecord(RecordInputStream in1){rt = in1.ReadShort();grbitFrt = in1.ReadShort();verOriginator = (byte)in1.ReadByte();verWriter = (byte)in1.ReadByte();int cCFRTID = in1.ReadShort();rgCFRTID = new CFRTID[cCFRTID];for (int i = 0; i < cCFRTID; i++){rgCFRTID[i] = new CFRTID(in1);}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public ChartFRTInfoRecord(RecordInputStream in1){rt = in1.ReadShort();grbitFrt = in1.ReadShort();verOriginator = (byte)in1.ReadByte();verWriter = (byte)in1.ReadByte();int cCFRTID = in1.ReadShort();rgCFRTID = new CFRTID[cCFRTID];for (int i = 0; i < cCFRTID; i++){rgCFRTID[i] = new CFRTID(in1);}}",
    "output": "public ChartFRTInfoRecord(RecordInputStream in) {rt = in.readShort();grbitFrt = in.readShort();verOriginator = in.readByte();verWriter = in.readByte();int cCFRTID = in.readShort();rgCFRTID = new CFRTID[cCFRTID];for (int i = 0; i < cCFRTID; i++) {rgCFRTID[i] = new CFRTID(in);}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public Merger newMerger(Repository db) {return new OneSide(db, treeIndex);}",
    "output": "public override Merger NewMerger(Repository db){return new StrategyOneSided.OneSide(db, treeIndex);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override Merger NewMerger(Repository db){return new StrategyOneSided.OneSide(db, treeIndex);}",
    "output": "public Merger newMerger(Repository db) {return new OneSide(db, treeIndex);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public CreateDataSourceFromRedshiftResult createDataSourceFromRedshift(CreateDataSourceFromRedshiftRequest request) {request = beforeClientExecution(request);return executeCreateDataSourceFromRedshift(request);}",
    "output": "public virtual CreateDataSourceFromRedshiftResponse CreateDataSourceFromRedshift(CreateDataSourceFromRedshiftRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateDataSourceFromRedshiftRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateDataSourceFromRedshiftResponseUnmarshaller.Instance;return Invoke<CreateDataSourceFromRedshiftResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual CreateDataSourceFromRedshiftResponse CreateDataSourceFromRedshift(CreateDataSourceFromRedshiftRequest request){var options = new InvokeOptions();options.RequestMarshaller = CreateDataSourceFromRedshiftRequestMarshaller.Instance;options.ResponseUnmarshaller = CreateDataSourceFromRedshiftResponseUnmarshaller.Instance;return Invoke<CreateDataSourceFromRedshiftResponse>(request, options);}",
    "output": "public CreateDataSourceFromRedshiftResult createDataSourceFromRedshift(CreateDataSourceFromRedshiftRequest request) {request = beforeClientExecution(request);return executeCreateDataSourceFromRedshift(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void clearDFA() {for (int d = 0; d < decisionToDFA.length; d++) {decisionToDFA[d] = new DFA(atn.getDecisionState(d), d);}}",
    "output": "public override void ClearDFA(){for (int d = 0; d < decisionToDFA.Length; d++){decisionToDFA[d] = new DFA(atn.GetDecisionState(d), d);}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override void ClearDFA(){for (int d = 0; d < decisionToDFA.Length; d++){decisionToDFA[d] = new DFA(atn.GetDecisionState(d), d);}}",
    "output": "public void clearDFA() {for (int d = 0; d < decisionToDFA.length; d++) {decisionToDFA[d] = new DFA(atn.getDecisionState(d), d);}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void removeName(String name) {int index = getNameIndex(name);removeName(index);}",
    "output": "public void RemoveName(String name){int index = GetNameIndex(name);RemoveName(index);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public void RemoveName(String name){int index = GetNameIndex(name);RemoveName(index);}",
    "output": "public void removeName(String name) {int index = getNameIndex(name);removeName(index);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String toString(){StringBuilder buffer = new StringBuilder();buffer.append( \"[RightMargin]\\n\" );buffer.append( \"    .margin               = \" ).append( \" (\" ).append( getMargin() ).append( \" )\\n\" );buffer.append( \"[/RightMargin]\\n\" );return buffer.toString();}",
    "output": "public override String ToString(){StringBuilder buffer = new StringBuilder();buffer.Append(\"[RightMargin]\\n\");buffer.Append(\"    .margin               = \").Append(\" (\").Append(Margin).Append(\" )\\n\");buffer.Append(\"[/RightMargin]\\n\");return buffer.ToString();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override String ToString(){StringBuilder buffer = new StringBuilder();buffer.Append(\"[RightMargin]\\n\");buffer.Append(\"    .margin               = \").Append(\" (\").Append(Margin).Append(\" )\\n\");buffer.Append(\"[/RightMargin]\\n\");return buffer.ToString();}",
    "output": "public String toString(){StringBuilder buffer = new StringBuilder();buffer.append( \"[RightMargin]\\n\" );buffer.append( \"    .margin               = \" ).append( \" (\" ).append( getMargin() ).append( \" )\\n\" );buffer.append( \"[/RightMargin]\\n\" );return buffer.toString();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public RefreshAllRecord clone() {return copy();}",
    "output": "public override Object Clone(){return new RefreshAllRecord(_options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override Object Clone(){return new RefreshAllRecord(_options);}",
    "output": "public RefreshAllRecord clone() {return copy();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public StandardQueryNodeProcessorPipeline(QueryConfigHandler queryConfig) {super(queryConfig);add(new WildcardQueryNodeProcessor());add(new MultiFieldQueryNodeProcessor());add(new FuzzyQueryNodeProcessor());add(new RegexpQueryNodeProcessor());add(new MatchAllDocsQueryNodeProcessor());add(new OpenRangeQueryNodeProcessor());add(new PointQueryNodeProcessor());add(new PointRangeQueryNodeProcessor());add(new TermRangeQueryNodeProcessor());add(new AllowLeadingWildcardProcessor());add(new AnalyzerQueryNodeProcessor());add(new PhraseSlopQueryNodeProcessor());add(new BooleanQuery2ModifierNodeProcessor());add(new NoChildOptimizationQueryNodeProcessor());add(new RemoveDeletedQueryNodesProcessor());add(new RemoveEmptyNonLeafQueryNodeProcessor());add(new BooleanSingleChildOptimizationQueryNodeProcessor());add(new DefaultPhraseSlopQueryNodeProcessor());add(new BoostQueryNodeProcessor());add(new MultiTermRewriteMethodProcessor());}",
    "output": "public StandardQueryNodeProcessorPipeline(QueryConfigHandler queryConfig): base(queryConfig){Add(new WildcardQueryNodeProcessor());Add(new MultiFieldQueryNodeProcessor());Add(new FuzzyQueryNodeProcessor());Add(new MatchAllDocsQueryNodeProcessor());Add(new OpenRangeQueryNodeProcessor());Add(new NumericQueryNodeProcessor());Add(new NumericRangeQueryNodeProcessor());Add(new LowercaseExpandedTermsQueryNodeProcessor());Add(new TermRangeQueryNodeProcessor());Add(new AllowLeadingWildcardProcessor());Add(new AnalyzerQueryNodeProcessor());Add(new PhraseSlopQueryNodeProcessor());Add(new BooleanQuery2ModifierNodeProcessor());Add(new NoChildOptimizationQueryNodeProcessor());Add(new RemoveDeletedQueryNodesProcessor());Add(new RemoveEmptyNonLeafQueryNodeProcessor());Add(new BooleanSingleChildOptimizationQueryNodeProcessor());Add(new DefaultPhraseSlopQueryNodeProcessor());Add(new BoostQueryNodeProcessor());Add(new MultiTermRewriteMethodProcessor());}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public StandardQueryNodeProcessorPipeline(QueryConfigHandler queryConfig): base(queryConfig){Add(new WildcardQueryNodeProcessor());Add(new MultiFieldQueryNodeProcessor());Add(new FuzzyQueryNodeProcessor());Add(new MatchAllDocsQueryNodeProcessor());Add(new OpenRangeQueryNodeProcessor());Add(new NumericQueryNodeProcessor());Add(new NumericRangeQueryNodeProcessor());Add(new LowercaseExpandedTermsQueryNodeProcessor());Add(new TermRangeQueryNodeProcessor());Add(new AllowLeadingWildcardProcessor());Add(new AnalyzerQueryNodeProcessor());Add(new PhraseSlopQueryNodeProcessor());Add(new BooleanQuery2ModifierNodeProcessor());Add(new NoChildOptimizationQueryNodeProcessor());Add(new RemoveDeletedQueryNodesProcessor());Add(new RemoveEmptyNonLeafQueryNodeProcessor());Add(new BooleanSingleChildOptimizationQueryNodeProcessor());Add(new DefaultPhraseSlopQueryNodeProcessor());Add(new BoostQueryNodeProcessor());Add(new MultiTermRewriteMethodProcessor());}",
    "output": "public StandardQueryNodeProcessorPipeline(QueryConfigHandler queryConfig) {super(queryConfig);add(new WildcardQueryNodeProcessor());add(new MultiFieldQueryNodeProcessor());add(new FuzzyQueryNodeProcessor());add(new RegexpQueryNodeProcessor());add(new MatchAllDocsQueryNodeProcessor());add(new OpenRangeQueryNodeProcessor());add(new PointQueryNodeProcessor());add(new PointRangeQueryNodeProcessor());add(new TermRangeQueryNodeProcessor());add(new AllowLeadingWildcardProcessor());add(new AnalyzerQueryNodeProcessor());add(new PhraseSlopQueryNodeProcessor());add(new BooleanQuery2ModifierNodeProcessor());add(new NoChildOptimizationQueryNodeProcessor());add(new RemoveDeletedQueryNodesProcessor());add(new RemoveEmptyNonLeafQueryNodeProcessor());add(new BooleanSingleChildOptimizationQueryNodeProcessor());add(new DefaultPhraseSlopQueryNodeProcessor());add(new BoostQueryNodeProcessor());add(new MultiTermRewriteMethodProcessor());}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String formatAsString(String sheetName, boolean useAbsoluteAddress) {StringBuilder sb = new StringBuilder();if (sheetName != null) {sb.append(SheetNameFormatter.format(sheetName));sb.append(\"!\");}CellReference cellRefFrom = new CellReference(getFirstRow(), getFirstColumn(),useAbsoluteAddress, useAbsoluteAddress);CellReference cellRefTo = new CellReference(getLastRow(), getLastColumn(),useAbsoluteAddress, useAbsoluteAddress);sb.append(cellRefFrom.formatAsString());if(!cellRefFrom.equals(cellRefTo)|| isFullColumnRange() || isFullRowRange()){sb.append(':');sb.append(cellRefTo.formatAsString());}return sb.toString();}",
    "output": "public String FormatAsString(String sheetName, bool useAbsoluteAddress){StringBuilder sb = new StringBuilder();if (sheetName != null){sb.Append(SheetNameFormatter.Format(sheetName));sb.Append(\"!\");}CellReference cellRefFrom = new CellReference(FirstRow, FirstColumn,useAbsoluteAddress, useAbsoluteAddress);CellReference cellRefTo = new CellReference(LastRow, LastColumn,useAbsoluteAddress, useAbsoluteAddress);sb.Append(cellRefFrom.FormatAsString());if (!cellRefFrom.Equals(cellRefTo)|| IsFullColumnRange || IsFullRowRange){sb.Append(':');sb.Append(cellRefTo.FormatAsString());}return sb.ToString();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public String FormatAsString(String sheetName, bool useAbsoluteAddress){StringBuilder sb = new StringBuilder();if (sheetName != null){sb.Append(SheetNameFormatter.Format(sheetName));sb.Append(\"!\");}CellReference cellRefFrom = new CellReference(FirstRow, FirstColumn,useAbsoluteAddress, useAbsoluteAddress);CellReference cellRefTo = new CellReference(LastRow, LastColumn,useAbsoluteAddress, useAbsoluteAddress);sb.Append(cellRefFrom.FormatAsString());if (!cellRefFrom.Equals(cellRefTo)|| IsFullColumnRange || IsFullRowRange){sb.Append(':');sb.Append(cellRefTo.FormatAsString());}return sb.ToString();}",
    "output": "public String formatAsString(String sheetName, boolean useAbsoluteAddress) {StringBuilder sb = new StringBuilder();if (sheetName != null) {sb.append(SheetNameFormatter.format(sheetName));sb.append(\"!\");}CellReference cellRefFrom = new CellReference(getFirstRow(), getFirstColumn(),useAbsoluteAddress, useAbsoluteAddress);CellReference cellRefTo = new CellReference(getLastRow(), getLastColumn(),useAbsoluteAddress, useAbsoluteAddress);sb.append(cellRefFrom.formatAsString());if(!cellRefFrom.equals(cellRefTo)|| isFullColumnRange() || isFullRowRange()){sb.append(':');sb.append(cellRefTo.formatAsString());}return sb.toString();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ByteBuffer put(int index, byte value) {throw new ReadOnlyBufferException();}",
    "output": "public override java.nio.ByteBuffer put(int index, byte value){throw new System.NotImplementedException();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override java.nio.ByteBuffer put(int index, byte value){throw new System.NotImplementedException();}",
    "output": "public ByteBuffer put(int index, byte value) {throw new ReadOnlyBufferException();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void mode(int m) {_mode = m;}",
    "output": "public virtual void Mode(int m){_mode = m;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual void Mode(int m){_mode = m;}",
    "output": "public void mode(int m) {_mode = m;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ShortBuffer slice() {return new ReadWriteShortArrayBuffer(remaining(), backingArray, offset + position);}",
    "output": "public override java.nio.ShortBuffer slice(){return new java.nio.ReadWriteShortArrayBuffer(remaining(), backingArray, offset +_position);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override java.nio.ShortBuffer slice(){return new java.nio.ReadWriteShortArrayBuffer(remaining(), backingArray, offset +_position);}",
    "output": "public ShortBuffer slice() {return new ReadWriteShortArrayBuffer(remaining(), backingArray, offset + position);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void set(int index, long n) {if (count < index)throw new ArrayIndexOutOfBoundsException(index);else if (count == index)add(n);elseentries[index] = n;}",
    "output": "public virtual void Set(int index, long n){if (count < index){throw Sharpen.Extensions.CreateIndexOutOfRangeException(index);}else{if (count == index){Add(n);}else{entries[index] = n;}}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual void Set(int index, long n){if (count < index){throw Sharpen.Extensions.CreateIndexOutOfRangeException(index);}else{if (count == index){Add(n);}else{entries[index] = n;}}}",
    "output": "public void set(int index, long n) {if (count < index)throw new ArrayIndexOutOfBoundsException(index);else if (count == index)add(n);elseentries[index] = n;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ByteBuffer putFloat(float value) {throw new ReadOnlyBufferException();}",
    "output": "public override java.nio.ByteBuffer putFloat(float value){throw new java.nio.ReadOnlyBufferException();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override java.nio.ByteBuffer putFloat(float value){throw new java.nio.ReadOnlyBufferException();}",
    "output": "public ByteBuffer putFloat(float value) {throw new ReadOnlyBufferException();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public static double max(double[] values) {double max = Double.NEGATIVE_INFINITY;for (double value : values) {max = Math.max(max, value);}return max;}",
    "output": "public static double Max(double[] values){double max = double.NegativeInfinity;for (int i = 0, iSize = values.Length; i < iSize; i++){max = Math.Max(max, values[i]);}return max;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public static double Max(double[] values){double max = double.NegativeInfinity;for (int i = 0, iSize = values.Length; i < iSize; i++){max = Math.Max(max, values[i]);}return max;}",
    "output": "public static double max(double[] values) {double max = Double.NEGATIVE_INFINITY;for (double value : values) {max = Math.max(max, value);}return max;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public UpdateRepoWebhookRequest() {super(\"cr\", \"2016-06-07\", \"UpdateRepoWebhook\", \"cr\");setUriPattern(\"/repos/[RepoNamespace]/[RepoName]/webhooks/[WebhookId]\");setMethod(MethodType.POST);}",
    "output": "public UpdateRepoWebhookRequest(): base(\"cr\", \"2016-06-07\", \"UpdateRepoWebhook\", \"cr\", \"openAPI\"){UriPattern = \"/repos/[RepoNamespace]/[RepoName]/webhooks/[WebhookId]\";Method = MethodType.POST;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public UpdateRepoWebhookRequest(): base(\"cr\", \"2016-06-07\", \"UpdateRepoWebhook\", \"cr\", \"openAPI\"){UriPattern = \"/repos/[RepoNamespace]/[RepoName]/webhooks/[WebhookId]\";Method = MethodType.POST;}",
    "output": "public UpdateRepoWebhookRequest() {super(\"cr\", \"2016-06-07\", \"UpdateRepoWebhook\", \"cr\");setUriPattern(\"/repos/[RepoNamespace]/[RepoName]/webhooks/[WebhookId]\");setMethod(MethodType.POST);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DeleteAttributesRequest(String domainName, String itemName, java.util.List<Attribute> attributes, UpdateCondition expected) {setDomainName(domainName);setItemName(itemName);setAttributes(attributes);setExpected(expected);}",
    "output": "public DeleteAttributesRequest(string domainName, string itemName, List<Attribute> attributes, UpdateCondition expected){_domainName = domainName;_itemName = itemName;_attributes = attributes;_expected = expected;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public DeleteAttributesRequest(string domainName, string itemName, List<Attribute> attributes, UpdateCondition expected){_domainName = domainName;_itemName = itemName;_attributes = attributes;_expected = expected;}",
    "output": "public DeleteAttributesRequest(String domainName, String itemName, java.util.List<Attribute> attributes, UpdateCondition expected) {setDomainName(domainName);setItemName(itemName);setAttributes(attributes);setExpected(expected);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String toString() {StringBuilder sb = new StringBuilder();sb.append(\"[SXPI]\\n\");for (int i = 0; i < _fieldInfos.length; i++) {sb.append(\"    item[\").append(i).append(\"]=\");_fieldInfos[i].appendDebugInfo(sb);sb.append('\\n');}sb.append(\"[/SXPI]\\n\");return sb.toString();}",
    "output": "public override string ToString(){StringBuilder sb = new StringBuilder();sb.Append(\"[SXPI]\\n\");for (int i = 0; i < _fieldInfos.Length; i++){sb.Append(\"    item[\").Append(i).Append(\"]=\");_fieldInfos[i].AppendDebugInfo(sb);sb.Append('\\n');}sb.Append(\"[/SXPI]\\n\");return sb.ToString();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override string ToString(){StringBuilder sb = new StringBuilder();sb.Append(\"[SXPI]\\n\");for (int i = 0; i < _fieldInfos.Length; i++){sb.Append(\"    item[\").Append(i).Append(\"]=\");_fieldInfos[i].AppendDebugInfo(sb);sb.Append('\\n');}sb.Append(\"[/SXPI]\\n\");return sb.ToString();}",
    "output": "public String toString() {StringBuilder sb = new StringBuilder();sb.append(\"[SXPI]\\n\");for (int i = 0; i < _fieldInfos.length; i++) {sb.append(\"    item[\").append(i).append(\"]=\");_fieldInfos[i].appendDebugInfo(sb);sb.append('\\n');}sb.append(\"[/SXPI]\\n\");return sb.toString();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public boolean isSuccessful() {if (mergeResult != null)return mergeResult.getMergeStatus().isSuccessful();else if (rebaseResult != null)return rebaseResult.getStatus().isSuccessful();return true;}",
    "output": "public virtual bool IsSuccessful(){if (mergeResult != null){return mergeResult.GetMergeStatus().IsSuccessful();}else{if (rebaseResult != null){return rebaseResult.GetStatus().IsSuccessful();}}return true;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual bool IsSuccessful(){if (mergeResult != null){return mergeResult.GetMergeStatus().IsSuccessful();}else{if (rebaseResult != null){return rebaseResult.GetStatus().IsSuccessful();}}return true;}",
    "output": "public boolean isSuccessful() {if (mergeResult != null)return mergeResult.getMergeStatus().isSuccessful();else if (rebaseResult != null)return rebaseResult.getStatus().isSuccessful();return true;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void setBytesValue(byte[] value) {setBytesValue(new BytesRef(value));}",
    "output": "public virtual void SetBytesValue(byte[] value){SetBytesValue(new BytesRef(value));}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual void SetBytesValue(byte[] value){SetBytesValue(new BytesRef(value));}",
    "output": "public void setBytesValue(byte[] value) {setBytesValue(new BytesRef(value));}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DescribeConnectionsResult describeConnections(DescribeConnectionsRequest request) {request = beforeClientExecution(request);return executeDescribeConnections(request);}",
    "output": "public virtual DescribeConnectionsResponse DescribeConnections(DescribeConnectionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeConnectionsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeConnectionsResponseUnmarshaller.Instance;return Invoke<DescribeConnectionsResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DescribeConnectionsResponse DescribeConnections(DescribeConnectionsRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeConnectionsRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeConnectionsResponseUnmarshaller.Instance;return Invoke<DescribeConnectionsResponse>(request, options);}",
    "output": "public DescribeConnectionsResult describeConnections(DescribeConnectionsRequest request) {request = beforeClientExecution(request);return executeDescribeConnections(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DeletePhotosRequest() {super(\"CloudPhoto\", \"2017-07-11\", \"DeletePhotos\", \"cloudphoto\");setProtocol(ProtocolType.HTTPS);}",
    "output": "public DeletePhotosRequest(): base(\"CloudPhoto\", \"2017-07-11\", \"DeletePhotos\", \"cloudphoto\", \"openAPI\"){Protocol = ProtocolType.HTTPS;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public DeletePhotosRequest(): base(\"CloudPhoto\", \"2017-07-11\", \"DeletePhotos\", \"cloudphoto\", \"openAPI\"){Protocol = ProtocolType.HTTPS;}",
    "output": "public DeletePhotosRequest() {super(\"CloudPhoto\", \"2017-07-11\", \"DeletePhotos\", \"cloudphoto\");setProtocol(ProtocolType.HTTPS);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void add(E object) {iterator.add(object);subList.sizeChanged(true);end++;}",
    "output": "public void add(E @object){iterator.add(@object);subList.sizeChanged(true);end++;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public void add(E @object){iterator.add(@object);subList.sizeChanged(true);end++;}",
    "output": "public void add(E object) {iterator.add(object);subList.sizeChanged(true);end++;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public static ByteBuffer allocate(int capacity) {if (capacity < 0) {throw new IllegalArgumentException();}return new ReadWriteHeapByteBuffer(capacity);}",
    "output": "public static java.nio.ByteBuffer allocate(int capacity_1){if (capacity_1 < 0){throw new System.ArgumentException();}return new java.nio.ReadWriteHeapByteBuffer(capacity_1);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public static java.nio.ByteBuffer allocate(int capacity_1){if (capacity_1 < 0){throw new System.ArgumentException();}return new java.nio.ReadWriteHeapByteBuffer(capacity_1);}",
    "output": "public static ByteBuffer allocate(int capacity) {if (capacity < 0) {throw new IllegalArgumentException();}return new ReadWriteHeapByteBuffer(capacity);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public SrndQuery getSubQuery(int qn) {return queries.get(qn);}",
    "output": "public virtual SrndQuery GetSubQuery(int qn) { return m_queries[qn]; }"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual SrndQuery GetSubQuery(int qn) { return m_queries[qn]; }",
    "output": "public SrndQuery getSubQuery(int qn) {return queries.get(qn);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public float currentScore(int docId, String field, int start, int end, int numPayloadsSeen, float currentScore, float currentPayloadScore) {if (numPayloadsSeen == 0) {return currentPayloadScore;} else {return Math.min(currentPayloadScore, currentScore);}}",
    "output": "public override float CurrentScore(int docId, string field, int start, int end, int numPayloadsSeen, float currentScore, float currentPayloadScore){if (numPayloadsSeen == 0){return currentPayloadScore;}else{return Math.Min(currentPayloadScore, currentScore);}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override float CurrentScore(int docId, string field, int start, int end, int numPayloadsSeen, float currentScore, float currentPayloadScore){if (numPayloadsSeen == 0){return currentPayloadScore;}else{return Math.Min(currentPayloadScore, currentScore);}}",
    "output": "public float currentScore(int docId, String field, int start, int end, int numPayloadsSeen, float currentScore, float currentPayloadScore) {if (numPayloadsSeen == 0) {return currentPayloadScore;} else {return Math.min(currentPayloadScore, currentScore);}}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String toString(){StringBuilder sb = new StringBuilder();sb.append(\"[BLANK]\\n\");sb.append(\"    row= \").append(HexDump.shortToHex(getRow())).append(\"\\n\");sb.append(\"    col= \").append(HexDump.shortToHex(getColumn())).append(\"\\n\");sb.append(\"    xf = \").append(HexDump.shortToHex(getXFIndex())).append(\"\\n\");sb.append(\"[/BLANK]\\n\");return sb.toString();}",
    "output": "public override String ToString(){StringBuilder buffer = new StringBuilder();buffer.Append(\"[BLANK]\\n\");buffer.Append(\"row       = \").Append(HexDump.ShortToHex(Row)).Append(\"\\n\");buffer.Append(\"col       = \").Append(HexDump.ShortToHex(Column)).Append(\"\\n\");buffer.Append(\"xf        = \").Append(HexDump.ShortToHex(XFIndex)).Append(\"\\n\");buffer.Append(\"[/BLANK]\\n\");return buffer.ToString();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override String ToString(){StringBuilder buffer = new StringBuilder();buffer.Append(\"[BLANK]\\n\");buffer.Append(\"row       = \").Append(HexDump.ShortToHex(Row)).Append(\"\\n\");buffer.Append(\"col       = \").Append(HexDump.ShortToHex(Column)).Append(\"\\n\");buffer.Append(\"xf        = \").Append(HexDump.ShortToHex(XFIndex)).Append(\"\\n\");buffer.Append(\"[/BLANK]\\n\");return buffer.ToString();}",
    "output": "public String toString(){StringBuilder sb = new StringBuilder();sb.append(\"[BLANK]\\n\");sb.append(\"    row= \").append(HexDump.shortToHex(getRow())).append(\"\\n\");sb.append(\"    col= \").append(HexDump.shortToHex(getColumn())).append(\"\\n\");sb.append(\"    xf = \").append(HexDump.shortToHex(getXFIndex())).append(\"\\n\");sb.append(\"[/BLANK]\\n\");return sb.toString();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DescribeLogPatternResult describeLogPattern(DescribeLogPatternRequest request) {request = beforeClientExecution(request);return executeDescribeLogPattern(request);}",
    "output": "public virtual DescribeLogPatternResponse DescribeLogPattern(DescribeLogPatternRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeLogPatternRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeLogPatternResponseUnmarshaller.Instance;return Invoke<DescribeLogPatternResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual DescribeLogPatternResponse DescribeLogPattern(DescribeLogPatternRequest request){var options = new InvokeOptions();options.RequestMarshaller = DescribeLogPatternRequestMarshaller.Instance;options.ResponseUnmarshaller = DescribeLogPatternResponseUnmarshaller.Instance;return Invoke<DescribeLogPatternResponse>(request, options);}",
    "output": "public DescribeLogPatternResult describeLogPattern(DescribeLogPatternRequest request) {request = beforeClientExecution(request);return executeDescribeLogPattern(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public RegisterTransitGatewayMulticastGroupMembersResult registerTransitGatewayMulticastGroupMembers(RegisterTransitGatewayMulticastGroupMembersRequest request) {request = beforeClientExecution(request);return executeRegisterTransitGatewayMulticastGroupMembers(request);}",
    "output": "public virtual RegisterTransitGatewayMulticastGroupMembersResponse RegisterTransitGatewayMulticastGroupMembers(RegisterTransitGatewayMulticastGroupMembersRequest request){var options = new InvokeOptions();options.RequestMarshaller = RegisterTransitGatewayMulticastGroupMembersRequestMarshaller.Instance;options.ResponseUnmarshaller = RegisterTransitGatewayMulticastGroupMembersResponseUnmarshaller.Instance;return Invoke<RegisterTransitGatewayMulticastGroupMembersResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual RegisterTransitGatewayMulticastGroupMembersResponse RegisterTransitGatewayMulticastGroupMembers(RegisterTransitGatewayMulticastGroupMembersRequest request){var options = new InvokeOptions();options.RequestMarshaller = RegisterTransitGatewayMulticastGroupMembersRequestMarshaller.Instance;options.ResponseUnmarshaller = RegisterTransitGatewayMulticastGroupMembersResponseUnmarshaller.Instance;return Invoke<RegisterTransitGatewayMulticastGroupMembersResponse>(request, options);}",
    "output": "public RegisterTransitGatewayMulticastGroupMembersResult registerTransitGatewayMulticastGroupMembers(RegisterTransitGatewayMulticastGroupMembersRequest request) {request = beforeClientExecution(request);return executeRegisterTransitGatewayMulticastGroupMembers(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public GetPhoneNumberSettingsResult getPhoneNumberSettings(GetPhoneNumberSettingsRequest request) {request = beforeClientExecution(request);return executeGetPhoneNumberSettings(request);}",
    "output": "public virtual GetPhoneNumberSettingsResponse GetPhoneNumberSettings(GetPhoneNumberSettingsRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetPhoneNumberSettingsRequestMarshaller.Instance;options.ResponseUnmarshaller = GetPhoneNumberSettingsResponseUnmarshaller.Instance;return Invoke<GetPhoneNumberSettingsResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual GetPhoneNumberSettingsResponse GetPhoneNumberSettings(GetPhoneNumberSettingsRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetPhoneNumberSettingsRequestMarshaller.Instance;options.ResponseUnmarshaller = GetPhoneNumberSettingsResponseUnmarshaller.Instance;return Invoke<GetPhoneNumberSettingsResponse>(request, options);}",
    "output": "public GetPhoneNumberSettingsResult getPhoneNumberSettings(GetPhoneNumberSettingsRequest request) {request = beforeClientExecution(request);return executeGetPhoneNumberSettings(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public ObjectId getData() {return data;}",
    "output": "public virtual ObjectId GetData(){return data;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual ObjectId GetData(){return data;}",
    "output": "public ObjectId getData() {return data;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public boolean isDirect() {return false;}",
    "output": "public override bool isDirect(){return false;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override bool isDirect(){return false;}",
    "output": "public boolean isDirect() {return false;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public DeleteServerCertificateRequest(String serverCertificateName) {setServerCertificateName(serverCertificateName);}",
    "output": "public DeleteServerCertificateRequest(string serverCertificateName){_serverCertificateName = serverCertificateName;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public DeleteServerCertificateRequest(string serverCertificateName){_serverCertificateName = serverCertificateName;}",
    "output": "public DeleteServerCertificateRequest(String serverCertificateName) {setServerCertificateName(serverCertificateName);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public StringBuffer append(double d) {RealToString.getInstance().appendDouble(this, d);return this;}",
    "output": "public java.lang.StringBuffer append(bool b){return append(b ? \"true\" : \"false\");}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public java.lang.StringBuffer append(bool b){return append(b ? \"true\" : \"false\");}",
    "output": "public StringBuffer append(double d) {RealToString.getInstance().appendDouble(this, d);return this;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public GetEvaluationResult getEvaluation(GetEvaluationRequest request) {request = beforeClientExecution(request);return executeGetEvaluation(request);}",
    "output": "public virtual GetEvaluationResponse GetEvaluation(GetEvaluationRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetEvaluationRequestMarshaller.Instance;options.ResponseUnmarshaller = GetEvaluationResponseUnmarshaller.Instance;return Invoke<GetEvaluationResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual GetEvaluationResponse GetEvaluation(GetEvaluationRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetEvaluationRequestMarshaller.Instance;options.ResponseUnmarshaller = GetEvaluationResponseUnmarshaller.Instance;return Invoke<GetEvaluationResponse>(request, options);}",
    "output": "public GetEvaluationResult getEvaluation(GetEvaluationRequest request) {request = beforeClientExecution(request);return executeGetEvaluation(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public LinkedDataRecord getDataName(){return dataName;}",
    "output": "public BRAIRecord GetDataName(){return dataName;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public BRAIRecord GetDataName(){return dataName;}",
    "output": "public LinkedDataRecord getDataName(){return dataName;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public boolean find(int start) {findPos = start;if (findPos < regionStart) {findPos = regionStart;} else if (findPos >= regionEnd) {matchFound = false;return false;}matchFound = findImpl(address, input, findPos, matchOffsets);if (matchFound) {findPos = matchOffsets[1];}return matchFound;}",
    "output": "public bool find(int start_1){findPos = start_1;if (findPos < _regionStart){findPos = _regionStart;}else{if (findPos >= _regionEnd){matchFound = false;return false;}}matchFound = findImpl(address, input, findPos, matchOffsets);if (matchFound){findPos = matchOffsets[1];}return matchFound;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public bool find(int start_1){findPos = start_1;if (findPos < _regionStart){findPos = _regionStart;}else{if (findPos >= _regionEnd){matchFound = false;return false;}}matchFound = findImpl(address, input, findPos, matchOffsets);if (matchFound){findPos = matchOffsets[1];}return matchFound;}",
    "output": "public boolean find(int start) {findPos = start;if (findPos < regionStart) {findPos = regionStart;} else if (findPos >= regionEnd) {matchFound = false;return false;}matchFound = findImpl(address, input, findPos, matchOffsets);if (matchFound) {findPos = matchOffsets[1];}return matchFound;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public GetLifecyclePolicyPreviewResult getLifecyclePolicyPreview(GetLifecyclePolicyPreviewRequest request) {request = beforeClientExecution(request);return executeGetLifecyclePolicyPreview(request);}",
    "output": "public virtual GetLifecyclePolicyPreviewResponse GetLifecyclePolicyPreview(GetLifecyclePolicyPreviewRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetLifecyclePolicyPreviewRequestMarshaller.Instance;options.ResponseUnmarshaller = GetLifecyclePolicyPreviewResponseUnmarshaller.Instance;return Invoke<GetLifecyclePolicyPreviewResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual GetLifecyclePolicyPreviewResponse GetLifecyclePolicyPreview(GetLifecyclePolicyPreviewRequest request){var options = new InvokeOptions();options.RequestMarshaller = GetLifecyclePolicyPreviewRequestMarshaller.Instance;options.ResponseUnmarshaller = GetLifecyclePolicyPreviewResponseUnmarshaller.Instance;return Invoke<GetLifecyclePolicyPreviewResponse>(request, options);}",
    "output": "public GetLifecyclePolicyPreviewResult getLifecyclePolicyPreview(GetLifecyclePolicyPreviewRequest request) {request = beforeClientExecution(request);return executeGetLifecyclePolicyPreview(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public SinglePositionTokenStream(String word) {termAtt = addAttribute(CharTermAttribute.class);posIncrAtt = addAttribute(PositionIncrementAttribute.class);this.word = word;returned = true;}",
    "output": "public SinglePositionTokenStream(string word){termAtt = AddAttribute<ICharTermAttribute>();posIncrAtt = AddAttribute<IPositionIncrementAttribute>();this.word = word;returned = true;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public SinglePositionTokenStream(string word){termAtt = AddAttribute<ICharTermAttribute>();posIncrAtt = AddAttribute<IPositionIncrementAttribute>();this.word = word;returned = true;}",
    "output": "public SinglePositionTokenStream(String word) {termAtt = addAttribute(CharTermAttribute.class);posIncrAtt = addAttribute(PositionIncrementAttribute.class);this.word = word;returned = true;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void serialize(LittleEndianOutput out) {out.writeShort(field_1_print_gridlines);}",
    "output": "public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(field_1_print_gridlines);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override void Serialize(ILittleEndianOutput out1){out1.WriteShort(field_1_print_gridlines);}",
    "output": "public void serialize(LittleEndianOutput out) {out.writeShort(field_1_print_gridlines);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String toString() {final StringBuilder s = new StringBuilder();s.append(Constants.typeString(getType()));s.append(' ');s.append(name());s.append(' ');s.append(commitTime);s.append(' ');appendCoreFlags(s);return s.toString();}",
    "output": "public override string ToString(){StringBuilder s = new StringBuilder();s.Append(Constants.TypeString(Type));s.Append(' ');s.Append(Name);s.Append(' ');s.Append(commitTime);s.Append(' ');AppendCoreFlags(s);return s.ToString();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override string ToString(){StringBuilder s = new StringBuilder();s.Append(Constants.TypeString(Type));s.Append(' ');s.Append(Name);s.Append(' ');s.Append(commitTime);s.Append(' ');AppendCoreFlags(s);return s.ToString();}",
    "output": "public String toString() {final StringBuilder s = new StringBuilder();s.append(Constants.typeString(getType()));s.append(' ');s.append(name());s.append(' ');s.append(commitTime);s.append(' ');appendCoreFlags(s);return s.toString();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public LsRemoteCommand setRemote(String remote) {checkCallable();this.remote = remote;return this;}",
    "output": "public virtual NGit.Api.LsRemoteCommand SetRemote(string remote){CheckCallable();this.remote = remote;return this;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual NGit.Api.LsRemoteCommand SetRemote(string remote){CheckCallable();this.remote = remote;return this;}",
    "output": "public LsRemoteCommand setRemote(String remote) {checkCallable();this.remote = remote;return this;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public void collapseRow(int rowNumber) {int startRow = findStartOfRowOutlineGroup(rowNumber);RowRecord rowRecord = getRow(startRow);int nextRowIx = writeHidden(rowRecord, startRow);RowRecord row = getRow(nextRowIx);if (row == null) {row = createRow(nextRowIx);insertRow(row);}row.setColapsed(true);}",
    "output": "public void CollapseRow(int rowNumber){int startRow = FindStartOfRowOutlineGroup(rowNumber);RowRecord rowRecord = GetRow(startRow);int lastRow = WriteHidden(rowRecord, startRow, true);if (GetRow(lastRow + 1) != null){GetRow(lastRow + 1).Colapsed = (true);}else{RowRecord row = CreateRow(lastRow + 1);row.Colapsed = (true);InsertRow(row);}}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public void CollapseRow(int rowNumber){int startRow = FindStartOfRowOutlineGroup(rowNumber);RowRecord rowRecord = GetRow(startRow);int lastRow = WriteHidden(rowRecord, startRow, true);if (GetRow(lastRow + 1) != null){GetRow(lastRow + 1).Colapsed = (true);}else{RowRecord row = CreateRow(lastRow + 1);row.Colapsed = (true);InsertRow(row);}}",
    "output": "public void collapseRow(int rowNumber) {int startRow = findStartOfRowOutlineGroup(rowNumber);RowRecord rowRecord = getRow(startRow);int nextRowIx = writeHidden(rowRecord, startRow);RowRecord row = getRow(nextRowIx);if (row == null) {row = createRow(nextRowIx);insertRow(row);}row.setColapsed(true);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public AssociateSkillGroupWithRoomResult associateSkillGroupWithRoom(AssociateSkillGroupWithRoomRequest request) {request = beforeClientExecution(request);return executeAssociateSkillGroupWithRoom(request);}",
    "output": "public virtual AssociateSkillGroupWithRoomResponse AssociateSkillGroupWithRoom(AssociateSkillGroupWithRoomRequest request){var options = new InvokeOptions();options.RequestMarshaller = AssociateSkillGroupWithRoomRequestMarshaller.Instance;options.ResponseUnmarshaller = AssociateSkillGroupWithRoomResponseUnmarshaller.Instance;return Invoke<AssociateSkillGroupWithRoomResponse>(request, options);}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual AssociateSkillGroupWithRoomResponse AssociateSkillGroupWithRoom(AssociateSkillGroupWithRoomRequest request){var options = new InvokeOptions();options.RequestMarshaller = AssociateSkillGroupWithRoomRequestMarshaller.Instance;options.ResponseUnmarshaller = AssociateSkillGroupWithRoomResponseUnmarshaller.Instance;return Invoke<AssociateSkillGroupWithRoomResponse>(request, options);}",
    "output": "public AssociateSkillGroupWithRoomResult associateSkillGroupWithRoom(AssociateSkillGroupWithRoomRequest request) {request = beforeClientExecution(request);return executeAssociateSkillGroupWithRoom(request);}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String toString() {StringBuilder buffer = new StringBuilder();buffer.append(\"[SERIESLIST]\\n\");buffer.append(\"    .seriesNumbers= \").append(\" (\").append( Arrays.toString(getSeriesNumbers()) ).append(\" )\");buffer.append(\"\\n\");buffer.append(\"[/SERIESLIST]\\n\");return buffer.toString();}",
    "output": "public override String ToString(){StringBuilder buffer = new StringBuilder();buffer.Append(\"[SERIESLIST]\\n\");buffer.Append(\"    .seriesNumbers        = \").Append(\" (\").Append(SeriesNumbers).Append(\" )\");buffer.Append(Environment.NewLine);buffer.Append(\"[/SERIESLIST]\\n\");return buffer.ToString();}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public override String ToString(){StringBuilder buffer = new StringBuilder();buffer.Append(\"[SERIESLIST]\\n\");buffer.Append(\"    .seriesNumbers        = \").Append(\" (\").Append(SeriesNumbers).Append(\" )\");buffer.Append(Environment.NewLine);buffer.Append(\"[/SERIESLIST]\\n\");return buffer.ToString();}",
    "output": "public String toString() {StringBuilder buffer = new StringBuilder();buffer.append(\"[SERIESLIST]\\n\");buffer.append(\"    .seriesNumbers= \").append(\" (\").append( Arrays.toString(getSeriesNumbers()) ).append(\" )\");buffer.append(\"\\n\");buffer.append(\"[/SERIESLIST]\\n\");return buffer.toString();}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public QueryConfigHandler getQueryConfigHandler() {return this.queryConfig;}",
    "output": "public virtual QueryConfigHandler GetQueryConfigHandler(){return this.queryConfig;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual QueryConfigHandler GetQueryConfigHandler(){return this.queryConfig;}",
    "output": "public QueryConfigHandler getQueryConfigHandler() {return this.queryConfig;}"
  },
  {
    "instruction": "Translate the following Java function into a corresponding C# function",
    "input": "public String getClassArg() {if (null != originalArgs) {String className = originalArgs.get(CLASS_NAME);if (null != className) {return className;}}return getClass().getName();}",
    "output": "public virtual string GetClassArg(){if (null != originalArgs){string className = originalArgs[CLASS_NAME];if (null != className){return className;}}return this.GetType().Name;}"
  },
  {
    "instruction": "Translate the following C# function into a corresponding Java function",
    "input": "public virtual string GetClassArg(){if (null != originalArgs){string className = originalArgs[CLASS_NAME];if (null != className){return className;}}return this.GetType().Name;}",
    "output": "public String getClassArg() {if (null != originalArgs) {String className = originalArgs.get(CLASS_NAME);if (null != className) {return className;}}return getClass().getName();}"
  }
]